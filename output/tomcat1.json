[
  {
    "className": "javax.annotation.Resource",
    "sensitiveFields": [],
    "securityMethods": [
      "authenticationType"
    ]
  },
  {
    "className": "javax.annotation.sql.DataSourceDefinition",
    "sensitiveFields": [],
    "securityMethods": [
      "loginTimeout"
    ]
  },
  {
    "className": "javax.el.ArrayELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "checkBounds",
      "setValue"
    ]
  },
  {
    "className": "javax.el.BeanELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.BeanNameELResolver",
    "sensitiveFields": [
      "beanNameResolver"
    ],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.BeanNameResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "canCreateBean",
      "getBean",
      "isNameResolved",
      "isReadOnly",
      "setBeanValue"
    ]
  },
  {
    "className": "javax.el.CompositeELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "setValue"
    ]
  },
  {
    "className": "javax.el.ELContext",
    "sensitiveFields": [],
    "securityMethods": [
      "addEvaluationListener",
      "enterLambdaScope",
      "exitLambdaScope",
      "getLambdaArgument",
      "isLambdaArgument",
      "notifyAfterEvaluation",
      "notifyBeforeEvaluation",
      "notifyPropertyResolved",
      "putContext",
      "setLocale",
      "setPropertyResolved",
      "setPropertyResolved"
    ]
  },
  {
    "className": "javax.el.ELContextEvent",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.ELContextListener",
    "sensitiveFields": [],
    "securityMethods": [
      "contextCreated"
    ]
  },
  {
    "className": "javax.el.ELException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.ELManager",
    "sensitiveFields": [],
    "securityMethods": [
      "addBeanNameResolver",
      "addELResolver",
      "addEvaluationListener",
      "defineBean",
      "getExpressionFactory",
      "importClass",
      "importPackage",
      "importStatic",
      "mapFunction",
      "setVariable"
    ]
  },
  {
    "className": "javax.el.ELProcessor",
    "sensitiveFields": [
      "factory"
    ],
    "securityMethods": [
      "defineBean",
      "defineFunction",
      "defineFunction",
      "setValue",
      "setVariable"
    ]
  },
  {
    "className": "javax.el.ELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.EvaluationListener",
    "sensitiveFields": [],
    "securityMethods": [
      "afterEvaluation",
      "beforeEvaluation",
      "propertyResolved"
    ]
  },
  {
    "className": "javax.el.Expression",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.ExpressionFactory",
    "sensitiveFields": [
      "SERVICE_RESOURCE_NAME",
      "PROPERTY_NAME",
      "PROPERTY_FILE",
      "nullTcclFactory",
      "factoryCache"
    ],
    "securityMethods": [
      "newInstance",
      "newInstance"
    ]
  },
  {
    "className": "javax.el.FunctionMapper",
    "sensitiveFields": [],
    "securityMethods": [
      "mapFunction",
      "resolveFunction"
    ]
  },
  {
    "className": "javax.el.ImportHandler",
    "sensitiveFields": [
      "packageNames",
      "classNames"
    ],
    "securityMethods": [
      "findClass",
      "importClass",
      "importPackage",
      "importStatic",
      "resolveClass",
      "resolveStatic"
    ]
  },
  {
    "className": "javax.el.LambdaExpression",
    "sensitiveFields": [],
    "securityMethods": [
      "setELContext"
    ]
  },
  {
    "className": "javax.el.ListELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.MapELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.MethodExpression",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.MethodInfo",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.MethodNotFoundException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.PropertyNotFoundException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.PropertyNotWritableException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.el.ResourceBundleELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.StandardELContext",
    "sensitiveFields": [],
    "securityMethods": [
      "addELResolver",
      "putContext"
    ]
  },
  {
    "className": "javax.el.StaticFieldELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.TypeConverter",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.Util",
    "sensitiveFields": [
      "nullTcclFactory",
      "factoryCache"
    ],
    "securityMethods": [
      "findMethod",
      "findWrapper",
      "getExpressionFactory",
      "handleThrowable",
      "message",
      "resolveAmbiguousWrapper"
    ]
  },
  {
    "className": "javax.el.ValueExpression",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.el.ValueReference",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.mail.Authenticator",
    "sensitiveFields": [],
    "securityMethods": [
      "getPasswordAuthentication"
    ]
  },
  {
    "className": "javax.mail.Session",
    "sensitiveFields": [],
    "securityMethods": [
      "getInstance"
    ]
  },
  {
    "className": "javax.mail.internet.MimeMessage",
    "sensitiveFields": [],
    "securityMethods": [
      "setFrom",
      "setSubject"
    ]
  },
  {
    "className": "javax.security.auth.message.AuthException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.security.auth.message.AuthStatus",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.security.auth.message.ClientAuth",
    "sensitiveFields": [],
    "securityMethods": [
      "cleanSubject",
      "secureRequest",
      "validateResponse"
    ]
  },
  {
    "className": "javax.security.auth.message.MessageInfo",
    "sensitiveFields": [],
    "securityMethods": [
      "setRequestMessage",
      "setResponseMessage"
    ]
  },
  {
    "className": "javax.security.auth.message.MessagePolicy",
    "sensitiveFields": [
      "mandatory"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.security.auth.message.ServerAuth",
    "sensitiveFields": [],
    "securityMethods": [
      "cleanSubject",
      "secureResponse",
      "validateRequest"
    ]
  },
  {
    "className": "javax.security.auth.message.callback.CallerPrincipalCallback",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.security.auth.message.callback.CertStoreCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "setCertStore"
    ]
  },
  {
    "className": "javax.security.auth.message.callback.PasswordValidationCallback",
    "sensitiveFields": [
      "username",
      "password"
    ],
    "securityMethods": [
      "clearPassword",
      "setResult"
    ]
  },
  {
    "className": "javax.security.auth.message.callback.PrivateKeyCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "setKey"
    ]
  },
  {
    "className": "javax.security.auth.message.callback.SecretKeyCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "getKey",
      "setKey"
    ]
  },
  {
    "className": "javax.security.auth.message.callback.TrustStoreCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "setTrustStore"
    ]
  },
  {
    "className": "javax.security.auth.message.config.AuthConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "getAuthContextID",
      "refresh"
    ]
  },
  {
    "className": "javax.security.auth.message.config.AuthConfigFactory",
    "sensitiveFields": [
      "DEFAULT_FACTORY_SECURITY_PROPERTY",
      "GET_FACTORY_PERMISSION_NAME",
      "SET_FACTORY_PERMISSION_NAME",
      "PROVIDER_REGISTRATION_PERMISSION_NAME",
      "getFactorySecurityPermission",
      "setFactorySecurityPermission",
      "providerRegistrationSecurityPermission",
      "DEFAULT_JASPI_AUTHCONFIGFACTORYIMPL",
      "factory"
    ],
    "securityMethods": [
      "checkPermission",
      "getConfigProvider",
      "getFactory",
      "getRegistrationContext",
      "getRegistrationIDs",
      "refresh",
      "registerConfigProvider",
      "registerConfigProvider",
      "removeRegistration",
      "setFactory"
    ]
  },
  {
    "className": "javax.security.auth.message.config.AuthConfigProvider",
    "sensitiveFields": [],
    "securityMethods": [
      "getClientAuthConfig",
      "getServerAuthConfig",
      "refresh"
    ]
  },
  {
    "className": "javax.security.auth.message.config.ClientAuthConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "getAuthContext"
    ]
  },
  {
    "className": "javax.security.auth.message.config.RegistrationListener",
    "sensitiveFields": [],
    "securityMethods": [
      "notify"
    ]
  },
  {
    "className": "javax.security.auth.message.config.ServerAuthConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "getAuthContext"
    ]
  },
  {
    "className": "javax.security.auth.message.module.ClientAuthModule",
    "sensitiveFields": [],
    "securityMethods": [
      "initialize"
    ]
  },
  {
    "className": "javax.security.auth.message.module.ServerAuthModule",
    "sensitiveFields": [],
    "securityMethods": [
      "initialize"
    ]
  },
  {
    "className": "javax.servlet.AsyncContext",
    "sensitiveFields": [
      "ASYNC_CONTEXT_PATH",
      "ASYNC_PATH_INFO",
      "ASYNC_SERVLET_PATH",
      "ASYNC_QUERY_STRING"
    ],
    "securityMethods": [
      "addListener",
      "addListener",
      "complete",
      "dispatch",
      "dispatch",
      "dispatch",
      "setTimeout",
      "start"
    ]
  },
  {
    "className": "javax.servlet.AsyncListener",
    "sensitiveFields": [],
    "securityMethods": [
      "onComplete",
      "onError",
      "onStartAsync",
      "onTimeout"
    ]
  },
  {
    "className": "javax.servlet.Filter",
    "sensitiveFields": [],
    "securityMethods": [
      "destroy",
      "doFilter",
      "init"
    ]
  },
  {
    "className": "javax.servlet.FilterChain",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter"
    ]
  },
  {
    "className": "javax.servlet.FilterConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "getInitParameter"
    ]
  },
  {
    "className": "javax.servlet.FilterRegistration",
    "sensitiveFields": [],
    "securityMethods": [
      "addMappingForServletNames",
      "addMappingForUrlPatterns"
    ]
  },
  {
    "className": "javax.servlet.GenericFilter",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "getInitParameter",
      "init",
      "init"
    ]
  },
  {
    "className": "javax.servlet.GenericServlet",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "destroy",
      "getInitParameter",
      "init",
      "init",
      "log",
      "log",
      "service"
    ]
  },
  {
    "className": "javax.servlet.HttpConstraintElement",
    "sensitiveFields": [
      "LSTRING_FILE"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.HttpMethodConstraintElement",
    "sensitiveFields": [
      "LSTRING_FILE",
      "methodName"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.MultipartConfigElement",
    "sensitiveFields": [
      "maxFileSize",
      "fileSizeThreshold"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.ReadListener",
    "sensitiveFields": [],
    "securityMethods": [
      "onAllDataRead",
      "onDataAvailable",
      "onError"
    ]
  },
  {
    "className": "javax.servlet.Registration",
    "sensitiveFields": [],
    "securityMethods": [
      "getInitParameter",
      "setInitParameter"
    ]
  },
  {
    "className": "javax.servlet.RequestDispatcher",
    "sensitiveFields": [
      "FORWARD_CONTEXT_PATH",
      "FORWARD_PATH_INFO",
      "FORWARD_SERVLET_PATH",
      "FORWARD_QUERY_STRING",
      "INCLUDE_CONTEXT_PATH",
      "INCLUDE_PATH_INFO",
      "INCLUDE_SERVLET_PATH",
      "INCLUDE_QUERY_STRING",
      "ERROR_SERVLET_NAME"
    ],
    "securityMethods": [
      "forward",
      "include"
    ]
  },
  {
    "className": "javax.servlet.Servlet",
    "sensitiveFields": [],
    "securityMethods": [
      "destroy",
      "init",
      "service"
    ]
  },
  {
    "className": "javax.servlet.ServletConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "getInitParameter"
    ]
  },
  {
    "className": "javax.servlet.ServletContainerInitializer",
    "sensitiveFields": [],
    "securityMethods": [
      "onStartup"
    ]
  },
  {
    "className": "javax.servlet.ServletContext",
    "sensitiveFields": [],
    "securityMethods": [
      "addFilter",
      "addFilter",
      "addFilter",
      "addJspFile",
      "addListener",
      "addListener",
      "addListener",
      "addServlet",
      "addServlet",
      "addServlet",
      "declareRoles",
      "getAttribute",
      "getContext",
      "getFilterRegistration",
      "getInitParameter",
      "getMimeType",
      "getNamedDispatcher",
      "getRealPath",
      "getRequestDispatcher",
      "getResource",
      "getResourceAsStream",
      "getResourcePaths",
      "getServlet",
      "getServletRegistration",
      "log",
      "log",
      "log",
      "removeAttribute",
      "setAttribute",
      "setInitParameter",
      "setRequestCharacterEncoding",
      "setResponseCharacterEncoding",
      "setSessionTimeout",
      "setSessionTrackingModes"
    ]
  },
  {
    "className": "javax.servlet.ServletContextAttributeEvent",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.ServletContextAttributeListener",
    "sensitiveFields": [],
    "securityMethods": [
      "attributeAdded",
      "attributeRemoved",
      "attributeReplaced"
    ]
  },
  {
    "className": "javax.servlet.ServletContextEvent",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.ServletContextListener",
    "sensitiveFields": [],
    "securityMethods": [
      "contextDestroyed",
      "contextInitialized"
    ]
  },
  {
    "className": "javax.servlet.ServletException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.ServletInputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "setReadListener"
    ]
  },
  {
    "className": "javax.servlet.ServletOutputStream",
    "sensitiveFields": [
      "LSTRING_FILE"
    ],
    "securityMethods": [
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "setWriteListener"
    ]
  },
  {
    "className": "javax.servlet.ServletRequest",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "getParameter",
      "getParameterValues",
      "getRealPath",
      "getRequestDispatcher",
      "removeAttribute",
      "setAttribute",
      "setCharacterEncoding"
    ]
  },
  {
    "className": "javax.servlet.ServletRequestAttributeEvent",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.ServletRequestAttributeListener",
    "sensitiveFields": [],
    "securityMethods": [
      "attributeAdded",
      "attributeRemoved",
      "attributeReplaced"
    ]
  },
  {
    "className": "javax.servlet.ServletRequestEvent",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.ServletRequestListener",
    "sensitiveFields": [],
    "securityMethods": [
      "requestDestroyed",
      "requestInitialized"
    ]
  },
  {
    "className": "javax.servlet.ServletRequestWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "getParameter",
      "getParameterValues",
      "getRealPath",
      "getRequestDispatcher",
      "removeAttribute",
      "setAttribute",
      "setCharacterEncoding",
      "setRequest"
    ]
  },
  {
    "className": "javax.servlet.ServletResponse",
    "sensitiveFields": [],
    "securityMethods": [
      "flushBuffer",
      "reset",
      "resetBuffer",
      "setBufferSize",
      "setCharacterEncoding",
      "setContentLength",
      "setContentLengthLong",
      "setContentType",
      "setLocale"
    ]
  },
  {
    "className": "javax.servlet.ServletResponseWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "flushBuffer",
      "reset",
      "resetBuffer",
      "setBufferSize",
      "setCharacterEncoding",
      "setContentLength",
      "setContentLengthLong",
      "setContentType",
      "setLocale",
      "setResponse"
    ]
  },
  {
    "className": "javax.servlet.ServletSecurityElement",
    "sensitiveFields": [],
    "securityMethods": [
      "addHttpMethodConstraints"
    ]
  },
  {
    "className": "javax.servlet.SessionCookieConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "setComment",
      "setDomain",
      "setHttpOnly",
      "setMaxAge",
      "setName",
      "setPath",
      "setSecure"
    ]
  },
  {
    "className": "javax.servlet.UnavailableException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.WriteListener",
    "sensitiveFields": [],
    "securityMethods": [
      "onError",
      "onWritePossible"
    ]
  },
  {
    "className": "javax.servlet.http.Cookie",
    "sensitiveFields": [
      "validation",
      "serialVersionUID",
      "name",
      "path"
    ],
    "securityMethods": [
      "setComment",
      "setDomain",
      "setHttpOnly",
      "setMaxAge",
      "setPath",
      "setSecure",
      "setValue",
      "setVersion"
    ]
  },
  {
    "className": "javax.servlet.http.CookieNameValidator",
    "sensitiveFields": [
      "LSTRING_FILE"
    ],
    "securityMethods": [
      "isToken",
      "validate"
    ]
  },
  {
    "className": "javax.servlet.http.HttpFilter",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "doFilter",
      "doFilter"
    ]
  },
  {
    "className": "javax.servlet.http.HttpServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "LSTRING_FILE"
    ],
    "securityMethods": [
      "doDelete",
      "doGet",
      "doHead",
      "doOptions",
      "doPost",
      "doPut",
      "doTrace",
      "maybeSetLastModified",
      "service",
      "service"
    ]
  },
  {
    "className": "javax.servlet.http.HttpServletRequest",
    "sensitiveFields": [
      "BASIC_AUTH",
      "FORM_AUTH",
      "CLIENT_CERT_AUTH",
      "DIGEST_AUTH"
    ],
    "securityMethods": [
      "authenticate",
      "getAuthType",
      "getDateHeader",
      "getHeader",
      "getHeaders",
      "getIntHeader",
      "getPart",
      "login",
      "logout"
    ]
  },
  {
    "className": "javax.servlet.http.HttpServletRequestWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "authenticate",
      "getAuthType",
      "getDateHeader",
      "getHeader",
      "getHeaders",
      "getIntHeader",
      "getPart",
      "login",
      "logout"
    ]
  },
  {
    "className": "javax.servlet.http.HttpServletResponse",
    "sensitiveFields": [
      "SC_NON_AUTHORITATIVE_INFORMATION",
      "SC_TEMPORARY_REDIRECT",
      "SC_UNAUTHORIZED",
      "SC_FORBIDDEN",
      "SC_PROXY_AUTHENTICATION_REQUIRED"
    ],
    "securityMethods": [
      "addCookie",
      "addDateHeader",
      "addHeader",
      "addIntHeader",
      "containsHeader",
      "getHeader",
      "getHeaders",
      "sendError",
      "sendError",
      "sendRedirect",
      "setDateHeader",
      "setHeader",
      "setIntHeader",
      "setStatus",
      "setStatus",
      "setTrailerFields"
    ]
  },
  {
    "className": "javax.servlet.http.HttpServletResponseWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "addCookie",
      "addDateHeader",
      "addHeader",
      "addIntHeader",
      "containsHeader",
      "getHeader",
      "getHeaders",
      "sendError",
      "sendError",
      "sendRedirect",
      "setDateHeader",
      "setHeader",
      "setIntHeader",
      "setStatus",
      "setStatus",
      "setTrailerFields"
    ]
  },
  {
    "className": "javax.servlet.http.HttpSession",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "getLastAccessedTime",
      "getValue",
      "invalidate",
      "putValue",
      "removeAttribute",
      "removeValue",
      "setAttribute",
      "setMaxInactiveInterval"
    ]
  },
  {
    "className": "javax.servlet.http.HttpSessionActivationListener",
    "sensitiveFields": [],
    "securityMethods": [
      "sessionDidActivate",
      "sessionWillPassivate"
    ]
  },
  {
    "className": "javax.servlet.http.HttpSessionAttributeListener",
    "sensitiveFields": [],
    "securityMethods": [
      "attributeAdded",
      "attributeRemoved",
      "attributeReplaced"
    ]
  },
  {
    "className": "javax.servlet.http.HttpSessionBindingEvent",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.http.HttpSessionBindingListener",
    "sensitiveFields": [],
    "securityMethods": [
      "valueBound",
      "valueUnbound"
    ]
  },
  {
    "className": "javax.servlet.http.HttpSessionContext",
    "sensitiveFields": [],
    "securityMethods": [
      "getSession"
    ]
  },
  {
    "className": "javax.servlet.http.HttpSessionEvent",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.http.HttpSessionIdListener",
    "sensitiveFields": [],
    "securityMethods": [
      "sessionIdChanged"
    ]
  },
  {
    "className": "javax.servlet.http.HttpSessionListener",
    "sensitiveFields": [],
    "securityMethods": [
      "sessionCreated",
      "sessionDestroyed"
    ]
  },
  {
    "className": "javax.servlet.http.HttpUpgradeHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "destroy",
      "init"
    ]
  },
  {
    "className": "javax.servlet.http.HttpUtils",
    "sensitiveFields": [
      "LSTRING_FILE"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.http.MappingMatch",
    "sensitiveFields": [
      "PATH"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.http.NoBodyOutputStream",
    "sensitiveFields": [
      "LSTRING_FILE"
    ],
    "securityMethods": [
      "setWriteListener",
      "write",
      "write"
    ]
  },
  {
    "className": "javax.servlet.http.NoBodyResponse",
    "sensitiveFields": [
      "didSetContentLength"
    ],
    "securityMethods": [
      "addHeader",
      "addIntHeader",
      "checkHeader",
      "setContentLength",
      "setContentLength",
      "setContentLengthLong",
      "setHeader",
      "setIntHeader"
    ]
  },
  {
    "className": "javax.servlet.http.Part",
    "sensitiveFields": [],
    "securityMethods": [
      "delete",
      "getHeader",
      "getHeaders",
      "write"
    ]
  },
  {
    "className": "javax.servlet.http.PushBuilder",
    "sensitiveFields": [],
    "securityMethods": [
      "addHeader",
      "getHeader",
      "path",
      "push",
      "queryString",
      "removeHeader",
      "sessionId",
      "setHeader"
    ]
  },
  {
    "className": "javax.servlet.http.RFC2109Validator",
    "sensitiveFields": [],
    "securityMethods": [
      "validate"
    ]
  },
  {
    "className": "javax.servlet.jsp.ErrorData",
    "sensitiveFields": [
      "servletName"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.HttpJspPage",
    "sensitiveFields": [],
    "securityMethods": [
      "_jspService"
    ]
  },
  {
    "className": "javax.servlet.jsp.JspApplicationContext",
    "sensitiveFields": [],
    "securityMethods": [
      "addELContextListener",
      "addELResolver",
      "getExpressionFactory"
    ]
  },
  {
    "className": "javax.servlet.jsp.JspContext",
    "sensitiveFields": [],
    "securityMethods": [
      "findAttribute",
      "getAttribute",
      "getAttribute",
      "getAttributesScope",
      "removeAttribute",
      "removeAttribute",
      "setAttribute",
      "setAttribute"
    ]
  },
  {
    "className": "javax.servlet.jsp.JspException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.JspFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getDefaultFactory",
      "releasePageContext",
      "setDefaultFactory"
    ]
  },
  {
    "className": "javax.servlet.jsp.JspPage",
    "sensitiveFields": [],
    "securityMethods": [
      "jspDestroy",
      "jspInit"
    ]
  },
  {
    "className": "javax.servlet.jsp.JspTagException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.JspWriter",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "clearBuffer",
      "close",
      "flush",
      "newLine",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println"
    ]
  },
  {
    "className": "javax.servlet.jsp.PageContext",
    "sensitiveFields": [],
    "securityMethods": [
      "forward",
      "handlePageException",
      "handlePageException",
      "include",
      "include",
      "initialize",
      "release"
    ]
  },
  {
    "className": "javax.servlet.jsp.SkipPageException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.el.ELException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.el.ELParseException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.el.FunctionMapper",
    "sensitiveFields": [],
    "securityMethods": [
      "resolveFunction"
    ]
  },
  {
    "className": "javax.servlet.jsp.el.ImplicitObjectELResolver",
    "sensitiveFields": [
      "SCOPE_NAMES"
    ],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.servlet.jsp.el.ScopedAttributeELResolver",
    "sensitiveFields": [
      "AST_IDENTIFIER_KEY"
    ],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "javax.servlet.jsp.el.VariableResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "resolveVariable"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.BodyContent",
    "sensitiveFields": [],
    "securityMethods": [
      "clearBody",
      "flush",
      "writeOut"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.BodyTag",
    "sensitiveFields": [],
    "securityMethods": [
      "doInitBody",
      "setBodyContent"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.BodyTagSupport",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "doInitBody",
      "release",
      "setBodyContent"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.DynamicAttributes",
    "sensitiveFields": [],
    "securityMethods": [
      "setDynamicAttribute"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.FunctionInfo",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.tagext.JspFragment",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.JspIdConsumer",
    "sensitiveFields": [],
    "securityMethods": [
      "setJspId"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.SimpleTag",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag",
      "setJspBody",
      "setJspContext",
      "setParent"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.SimpleTagSupport",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag",
      "setJspBody",
      "setJspContext",
      "setParent"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.Tag",
    "sensitiveFields": [],
    "securityMethods": [
      "release",
      "setPageContext",
      "setParent"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagAdapter",
    "sensitiveFields": [],
    "securityMethods": [
      "release",
      "setPageContext",
      "setParent"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagAttributeInfo",
    "sensitiveFields": [
      "ID",
      "name",
      "expectedTypeName"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.tagext.TagData",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "getAttributeString",
      "setAttribute"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagExtraInfo",
    "sensitiveFields": [],
    "securityMethods": [
      "setTagInfo",
      "validate"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagFileInfo",
    "sensitiveFields": [
      "name",
      "path"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.tagext.TagInfo",
    "sensitiveFields": [
      "tagName",
      "tagClassName",
      "tagLibrary",
      "displayName"
    ],
    "securityMethods": [
      "getTagLibrary",
      "setTagExtraInfo",
      "setTagLibrary",
      "validate"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagLibraryInfo",
    "sensitiveFields": [
      "tagFiles",
      "shortname"
    ],
    "securityMethods": [
      "getFunction",
      "getTag",
      "getTagFile",
      "getTagFiles",
      "getTagLibraryInfos"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagLibraryValidator",
    "sensitiveFields": [],
    "securityMethods": [
      "release",
      "setInitParameters",
      "validate"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagSupport",
    "sensitiveFields": [
      "serialVersionUID",
      "id"
    ],
    "securityMethods": [
      "release",
      "removeValue",
      "setId",
      "setPageContext",
      "setParent",
      "setValue"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.TagVariableInfo",
    "sensitiveFields": [
      "nameGiven",
      "nameFromAttribute",
      "className"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.tagext.TryCatchFinally",
    "sensitiveFields": [],
    "securityMethods": [
      "doCatch",
      "doFinally"
    ]
  },
  {
    "className": "javax.servlet.jsp.tagext.ValidationMessage",
    "sensitiveFields": [
      "id"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.servlet.jsp.tagext.VariableInfo",
    "sensitiveFields": [
      "varName",
      "className"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.HeuristicCommitException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.HeuristicMixedException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.HeuristicRollbackException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.InvalidTransactionException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.NotSupportedException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.RollbackException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.Synchronization",
    "sensitiveFields": [],
    "securityMethods": [
      "afterCompletion",
      "beforeCompletion"
    ]
  },
  {
    "className": "javax.transaction.SystemException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.Transaction",
    "sensitiveFields": [],
    "securityMethods": [
      "commit",
      "registerSynchronization",
      "rollback",
      "setRollbackOnly"
    ]
  },
  {
    "className": "javax.transaction.TransactionManager",
    "sensitiveFields": [],
    "securityMethods": [
      "begin",
      "commit",
      "resume",
      "rollback",
      "setRollbackOnly",
      "setTransactionTimeout"
    ]
  },
  {
    "className": "javax.transaction.TransactionRequiredException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.TransactionRolledbackException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.TransactionSynchronizationRegistry",
    "sensitiveFields": [],
    "securityMethods": [
      "putResource",
      "registerInterposedSynchronization",
      "setRollbackOnly"
    ]
  },
  {
    "className": "javax.transaction.UserTransaction",
    "sensitiveFields": [],
    "securityMethods": [
      "begin",
      "commit",
      "rollback",
      "setRollbackOnly",
      "setTransactionTimeout"
    ]
  },
  {
    "className": "javax.transaction.xa.XAException",
    "sensitiveFields": [
      "serialVersionUID",
      "XA_RETRY",
      "XAER_DUPID",
      "XAER_OUTSIDE"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.transaction.xa.XAResource",
    "sensitiveFields": [],
    "securityMethods": [
      "commit",
      "end",
      "forget",
      "prepare",
      "recover",
      "rollback",
      "start"
    ]
  },
  {
    "className": "javax.transaction.xa.Xid",
    "sensitiveFields": [
      "MAXGTRIDSIZE"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.websocket.ContainerProvider",
    "sensitiveFields": [
      "DEFAULT_PROVIDER_CLASS_NAME"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.websocket.DecodeException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.websocket.Decoder",
    "sensitiveFields": [],
    "securityMethods": [
      "destroy",
      "init"
    ]
  },
  {
    "className": "javax.websocket.DeploymentException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.websocket.EncodeException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.websocket.Encoder",
    "sensitiveFields": [],
    "securityMethods": [
      "destroy",
      "init"
    ]
  },
  {
    "className": "javax.websocket.Endpoint",
    "sensitiveFields": [],
    "securityMethods": [
      "onClose",
      "onError",
      "onOpen"
    ]
  },
  {
    "className": "javax.websocket.RemoteEndpoint",
    "sensitiveFields": [],
    "securityMethods": [
      "flushBatch",
      "sendPing",
      "sendPong",
      "setBatchingAllowed"
    ]
  },
  {
    "className": "javax.websocket.SendHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "onResult"
    ]
  },
  {
    "className": "javax.websocket.Session",
    "sensitiveFields": [],
    "securityMethods": [
      "addMessageHandler",
      "addMessageHandler",
      "addMessageHandler",
      "close",
      "close",
      "removeMessageHandler",
      "setMaxBinaryMessageBufferSize",
      "setMaxIdleTimeout",
      "setMaxTextMessageBufferSize"
    ]
  },
  {
    "className": "javax.websocket.SessionException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.websocket.WebSocketContainer",
    "sensitiveFields": [],
    "securityMethods": [
      "connectToServer",
      "connectToServer",
      "connectToServer",
      "connectToServer",
      "setAsyncSendTimeout",
      "setDefaultMaxBinaryMessageBufferSize",
      "setDefaultMaxSessionIdleTimeout",
      "setDefaultMaxTextMessageBufferSize"
    ]
  },
  {
    "className": "javax.websocket.server.DefaultServerEndpointConfig",
    "sensitiveFields": [
      "path"
    ],
    "securityMethods": []
  },
  {
    "className": "javax.websocket.server.ServerContainer",
    "sensitiveFields": [],
    "securityMethods": [
      "addEndpoint",
      "addEndpoint"
    ]
  },
  {
    "className": "org.apache.catalina.AccessLog",
    "sensitiveFields": [],
    "securityMethods": [
      "log",
      "setRequestAttributesEnabled"
    ]
  },
  {
    "className": "org.apache.catalina.AsyncDispatcher",
    "sensitiveFields": [],
    "securityMethods": [
      "dispatch"
    ]
  },
  {
    "className": "org.apache.catalina.Authenticator",
    "sensitiveFields": [],
    "securityMethods": [
      "authenticate",
      "login",
      "logout"
    ]
  },
  {
    "className": "org.apache.catalina.Cluster",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "createManager",
      "registerManager",
      "removeManager",
      "setClusterName"
    ]
  },
  {
    "className": "org.apache.catalina.Contained",
    "sensitiveFields": [],
    "securityMethods": [
      "setContainer"
    ]
  },
  {
    "className": "org.apache.catalina.Container",
    "sensitiveFields": [],
    "securityMethods": [
      "addChild",
      "addContainerListener",
      "addPropertyChangeListener",
      "backgroundProcess",
      "findChild",
      "fireContainerEvent",
      "getAccessLog",
      "getCatalinaBase",
      "getCatalinaHome",
      "getObjectName",
      "logAccess",
      "removeChild",
      "removeContainerListener",
      "removePropertyChangeListener",
      "setBackgroundProcessorDelay",
      "setCluster",
      "setName",
      "setParent",
      "setParentClassLoader",
      "setRealm",
      "setStartStopThreads"
    ]
  },
  {
    "className": "org.apache.catalina.ContainerEvent",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.ContainerListener",
    "sensitiveFields": [],
    "securityMethods": [
      "containerEvent"
    ]
  },
  {
    "className": "org.apache.catalina.ContainerServlet",
    "sensitiveFields": [],
    "securityMethods": [
      "setWrapper"
    ]
  },
  {
    "className": "org.apache.catalina.Context",
    "sensitiveFields": [
      "ADD_WELCOME_FILE_EVENT",
      "REMOVE_WELCOME_FILE_EVENT",
      "CLEAR_WELCOME_FILES_EVENT",
      "CHANGE_SESSION_ID_EVENT"
    ],
    "securityMethods": [
      "addApplicationListener",
      "addApplicationParameter",
      "addConstraint",
      "addErrorPage",
      "addFilterDef",
      "addFilterMap",
      "addFilterMapBefore",
      "addLocaleEncodingMappingParameter",
      "addMimeMapping",
      "addParameter",
      "addPostConstructMethod",
      "addPreDestroyMethod",
      "addRoleMapping",
      "addSecurityRole",
      "addServletContainerInitializer",
      "addServletMappingDecoded",
      "addServletMappingDecoded",
      "addWatchedResource",
      "addWelcomeFile",
      "addWrapperLifecycle",
      "addWrapperListener",
      "findFilterDef",
      "findParameter",
      "findWelcomeFile",
      "getAuthenticator",
      "getLoginConfig",
      "getPreemptiveAuthentication",
      "getRealPath",
      "getValidateClientProvidedNewSessionId",
      "isResourceOnlyServlet",
      "reload",
      "removeApplicationListener",
      "removeApplicationParameter",
      "removeConstraint",
      "removeErrorPage",
      "removeFilterDef",
      "removeFilterMap",
      "removeMimeMapping",
      "removeParameter",
      "removePostConstructMethod",
      "removePreDestroyMethod",
      "removeRoleMapping",
      "removeSecurityRole",
      "removeServletMapping",
      "removeWatchedResource",
      "removeWelcomeFile",
      "removeWrapperLifecycle",
      "removeWrapperListener",
      "setAddWebinfClassesResources",
      "setAllowCasualMultipartParsing",
      "setAllowMultipleLeadingForwardSlashInPath",
      "setAltDDName",
      "setApplicationEventListeners",
      "setApplicationLifecycleListeners",
      "setConfigFile",
      "setConfigured",
      "setContainerSciFilter",
      "setCookieProcessor",
      "setCookies",
      "setCrossContext",
      "setDenyUncoveredHttpMethods",
      "setDispatchersUseEncodedPaths",
      "setDisplayName",
      "setDistributable",
      "setDocBase",
      "setEffectiveMajorVersion",
      "setEffectiveMinorVersion",
      "setFireRequestListenersOnForwards",
      "setIgnoreAnnotations",
      "setInstanceManager",
      "setJarScanner",
      "setJspConfigDescriptor",
      "setLoader",
      "setLogEffectiveWebXml",
      "setLoginConfig",
      "setManager",
      "setMapperContextRootRedirectEnabled",
      "setMapperDirectoryRedirectEnabled",
      "setNamingResources",
      "setOverride",
      "setPath",
      "setPreemptiveAuthentication",
      "setPrivileged",
      "setPublicId",
      "setReloadable",
      "setRequestCharacterEncoding",
      "setResourceOnlyServlets",
      "setResources",
      "setResponseCharacterEncoding",
      "setSendRedirectBody",
      "setSessionCookieDomain",
      "setSessionCookieName",
      "setSessionCookiePath",
      "setSessionCookiePathUsesTrailingSlash",
      "setSessionTimeout",
      "setSwallowAbortedUploads",
      "setSwallowOutput",
      "setThreadBindingListener",
      "setTldValidation",
      "setUseHttpOnly",
      "setUseRelativeRedirects",
      "setValidateClientProvidedNewSessionId",
      "setWebappVersion",
      "setWrapperClass",
      "setXmlBlockExternal",
      "setXmlNamespaceAware",
      "setXmlValidation"
    ]
  },
  {
    "className": "org.apache.catalina.Engine",
    "sensitiveFields": [],
    "securityMethods": [
      "setDefaultHost",
      "setJvmRoute",
      "setService"
    ]
  },
  {
    "className": "org.apache.catalina.Executor",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.Globals",
    "sensitiveFields": [
      "DISPATCHER_REQUEST_PATH_ATTR",
      "CLASS_PATH_ATTR",
      "SSL_SESSION_ID_ATTR",
      "NAMED_DISPATCHER_ATTR",
      "SENDFILE_SUPPORTED_ATTR",
      "SENDFILE_FILENAME_ATTR",
      "SENDFILE_FILE_START_ATTR",
      "SENDFILE_FILE_END_ATTR",
      "JASPER_XML_VALIDATION_TLD_INIT_PARAM",
      "JASPER_XML_BLOCK_EXTERNAL_INIT_PARAM"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.Group",
    "sensitiveFields": [],
    "securityMethods": [
      "addRole",
      "removeRole",
      "removeRoles",
      "setDescription",
      "setGroupname"
    ]
  },
  {
    "className": "org.apache.catalina.Host",
    "sensitiveFields": [],
    "securityMethods": [
      "addAlias",
      "getAppBaseFile",
      "getConfigBaseFile",
      "removeAlias",
      "setAppBase",
      "setAutoDeploy",
      "setConfigClass",
      "setCreateDirs",
      "setDeployIgnore",
      "setDeployOnStartup",
      "setUndeployOldVersions",
      "setXmlBase"
    ]
  },
  {
    "className": "org.apache.catalina.JmxEnabled",
    "sensitiveFields": [],
    "securityMethods": [
      "getObjectName",
      "setDomain"
    ]
  },
  {
    "className": "org.apache.catalina.Lifecycle",
    "sensitiveFields": [],
    "securityMethods": [
      "addLifecycleListener",
      "destroy",
      "init",
      "removeLifecycleListener",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.LifecycleEvent",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.LifecycleException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.LifecycleListener",
    "sensitiveFields": [],
    "securityMethods": [
      "lifecycleEvent"
    ]
  },
  {
    "className": "org.apache.catalina.Loader",
    "sensitiveFields": [],
    "securityMethods": [
      "addPropertyChangeListener",
      "backgroundProcess",
      "removePropertyChangeListener",
      "setContext",
      "setDelegate",
      "setReloadable"
    ]
  },
  {
    "className": "org.apache.catalina.Manager",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "addPropertyChangeListener",
      "backgroundProcess",
      "changeSessionId",
      "changeSessionId",
      "createSession",
      "findSession",
      "getSessionIdGenerator",
      "load",
      "remove",
      "remove",
      "removePropertyChangeListener",
      "setContext",
      "setExpiredSessions",
      "setMaxActive",
      "setNotifyAttributeListenerOnUnchangedValue",
      "setNotifyBindingListenerOnUnchangedValue",
      "setSessionCounter",
      "setSessionIdGenerator",
      "setSessionMaxAliveTime",
      "unload",
      "willAttributeDistribute"
    ]
  },
  {
    "className": "org.apache.catalina.Pipeline",
    "sensitiveFields": [],
    "securityMethods": [
      "addValve",
      "findNonAsyncValves",
      "removeValve",
      "setBasic"
    ]
  },
  {
    "className": "org.apache.catalina.Realm",
    "sensitiveFields": [],
    "securityMethods": [
      "addPropertyChangeListener",
      "authenticate",
      "authenticate",
      "authenticate",
      "authenticate",
      "authenticate",
      "backgroundProcess",
      "hasRole",
      "removePropertyChangeListener",
      "setCredentialHandler"
    ]
  },
  {
    "className": "org.apache.catalina.Role",
    "sensitiveFields": [],
    "securityMethods": [
      "setDescription",
      "setRolename"
    ]
  },
  {
    "className": "org.apache.catalina.Server",
    "sensitiveFields": [],
    "securityMethods": [
      "addService",
      "await",
      "findService",
      "getCatalinaBase",
      "getCatalinaHome",
      "removeService",
      "setAddress",
      "setCatalina",
      "setCatalinaBase",
      "setCatalinaHome",
      "setGlobalNamingResources",
      "setParentClassLoader",
      "setPort",
      "setShutdown"
    ]
  },
  {
    "className": "org.apache.catalina.Service",
    "sensitiveFields": [],
    "securityMethods": [
      "addConnector",
      "addExecutor",
      "getExecutor",
      "removeConnector",
      "removeExecutor",
      "setContainer",
      "setName",
      "setParentClassLoader",
      "setServer"
    ]
  },
  {
    "className": "org.apache.catalina.Session",
    "sensitiveFields": [],
    "securityMethods": [
      "access",
      "addSessionListener",
      "endAccess",
      "expire",
      "getAuthType",
      "getLastAccessedTime",
      "getLastAccessedTimeInternal",
      "getNote",
      "getThisAccessedTime",
      "getThisAccessedTimeInternal",
      "isAttributeDistributable",
      "recycle",
      "removeNote",
      "removeSessionListener",
      "setAuthType",
      "setCreationTime",
      "setId",
      "setId",
      "setManager",
      "setMaxInactiveInterval",
      "setNew",
      "setNote",
      "setPrincipal",
      "setValid",
      "tellChangedSessionId"
    ]
  },
  {
    "className": "org.apache.catalina.SessionEvent",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.SessionIdGenerator",
    "sensitiveFields": [],
    "securityMethods": [
      "setJvmRoute",
      "setSessionIdLength"
    ]
  },
  {
    "className": "org.apache.catalina.SessionListener",
    "sensitiveFields": [],
    "securityMethods": [
      "sessionEvent"
    ]
  },
  {
    "className": "org.apache.catalina.Store",
    "sensitiveFields": [],
    "securityMethods": [
      "addPropertyChangeListener",
      "clear",
      "load",
      "remove",
      "removePropertyChangeListener",
      "save",
      "setManager"
    ]
  },
  {
    "className": "org.apache.catalina.StoreManager",
    "sensitiveFields": [],
    "securityMethods": [
      "removeSuper"
    ]
  },
  {
    "className": "org.apache.catalina.ThreadBindingListener",
    "sensitiveFields": [],
    "securityMethods": [
      "bind",
      "unbind"
    ]
  },
  {
    "className": "org.apache.catalina.TomcatPrincipal",
    "sensitiveFields": [],
    "securityMethods": [
      "logout"
    ]
  },
  {
    "className": "org.apache.catalina.User",
    "sensitiveFields": [],
    "securityMethods": [
      "addGroup",
      "addRole",
      "removeGroup",
      "removeGroups",
      "removeRole",
      "removeRoles",
      "setFullName",
      "setPassword",
      "setUsername"
    ]
  },
  {
    "className": "org.apache.catalina.UserDatabase",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "createGroup",
      "createRole",
      "createUser",
      "findGroup",
      "findRole",
      "findUser",
      "open",
      "removeGroup",
      "removeRole",
      "removeUser",
      "save"
    ]
  },
  {
    "className": "org.apache.catalina.Valve",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "invoke",
      "setNext"
    ]
  },
  {
    "className": "org.apache.catalina.WebResource",
    "sensitiveFields": [],
    "securityMethods": [
      "setMimeType"
    ]
  },
  {
    "className": "org.apache.catalina.WebResourceRoot",
    "sensitiveFields": [],
    "securityMethods": [
      "addJarResources",
      "addPostResources",
      "addPreResources",
      "backgroundProcess",
      "createWebResourceSet",
      "createWebResourceSet",
      "deregisterTrackedResource",
      "gc",
      "getClassLoaderResource",
      "getClassLoaderResources",
      "getResource",
      "getResources",
      "list",
      "listResources",
      "listWebAppPaths",
      "mkdir",
      "registerTrackedResource",
      "setAllowLinking",
      "setCacheMaxSize",
      "setCacheObjectMaxSize",
      "setCacheTtl",
      "setCachingAllowed",
      "setContext",
      "setTrackLockedFiles",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.WebResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "gc",
      "getResource",
      "list",
      "listWebAppPaths",
      "mkdir",
      "setClassLoaderOnly",
      "setReadOnly",
      "setRoot",
      "setStaticOnly",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.Wrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "addInitParameter",
      "addMapping",
      "addSecurityReference",
      "deallocate",
      "findInitParameter",
      "findSecurityReference",
      "incrementErrorCount",
      "load",
      "removeInitParameter",
      "removeMapping",
      "removeSecurityReference",
      "setAsyncSupported",
      "setAvailable",
      "setEnabled",
      "setLoadOnStartup",
      "setMultipartConfigElement",
      "setOverridable",
      "setRunAs",
      "setServlet",
      "setServletClass",
      "unavailable",
      "unload"
    ]
  },
  {
    "className": "org.apache.catalina.ant.AbstractCatalinaCommandTask",
    "sensitiveFields": [
      "path"
    ],
    "securityMethods": [
      "setPath",
      "setVersion"
    ]
  },
  {
    "className": "org.apache.catalina.ant.AbstractCatalinaTask",
    "sensitiveFields": [
      "password",
      "username"
    ],
    "securityMethods": [
      "execute",
      "execute",
      "execute",
      "setCharset",
      "setIgnoreResponseConstraint",
      "setPassword",
      "setUrl",
      "setUsername"
    ]
  },
  {
    "className": "org.apache.catalina.ant.BaseRedirectorHelperTask",
    "sensitiveFields": [],
    "securityMethods": [
      "addConfiguredRedirector",
      "closeRedirector",
      "configureRedirector",
      "handleErrorFlush",
      "handleErrorOutput",
      "handleFlush",
      "handleOutput",
      "handleOutput",
      "openRedirector",
      "setAlwaysLog",
      "setAppend",
      "setCreateEmptyFiles",
      "setError",
      "setErrorProperty",
      "setFailonerror",
      "setLogError",
      "setOutput",
      "setOutputproperty"
    ]
  },
  {
    "className": "org.apache.catalina.ant.DeployTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute",
      "setConfig",
      "setLocalWar",
      "setTag",
      "setUpdate",
      "setWar"
    ]
  },
  {
    "className": "org.apache.catalina.ant.FindLeaksTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute",
      "setStatusLine"
    ]
  },
  {
    "className": "org.apache.catalina.ant.JKStatusUpdateTask",
    "sensitiveFields": [
      "internalid"
    ],
    "securityMethods": [
      "checkParameter",
      "execute",
      "setInternalid",
      "setLbForceSession",
      "setLbRecovertime",
      "setLbRetries",
      "setLbStickySession",
      "setWorker",
      "setWorkerClusterDomain",
      "setWorkerDisabled",
      "setWorkerLb",
      "setWorkerLoadFactor",
      "setWorkerRedirect",
      "setWorkerStopped",
      "setWorkerType"
    ]
  },
  {
    "className": "org.apache.catalina.ant.JMXGetTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute",
      "setAttribute",
      "setBean"
    ]
  },
  {
    "className": "org.apache.catalina.ant.JMXQueryTask",
    "sensitiveFields": [
      "query"
    ],
    "securityMethods": [
      "execute",
      "setQuery"
    ]
  },
  {
    "className": "org.apache.catalina.ant.JMXSetTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute",
      "setAttribute",
      "setBean",
      "setValue"
    ]
  },
  {
    "className": "org.apache.catalina.ant.ListTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.ReloadTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.ResourcesTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute",
      "setType"
    ]
  },
  {
    "className": "org.apache.catalina.ant.ServerinfoTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.SessionsTask",
    "sensitiveFields": [
      "idle"
    ],
    "securityMethods": [
      "execute",
      "setIdle"
    ]
  },
  {
    "className": "org.apache.catalina.ant.SslConnectorCiphersTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.StartTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.StopTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.ThreaddumpTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.UndeployTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.ValidatorTask",
    "sensitiveFields": [
      "path"
    ],
    "securityMethods": [
      "execute",
      "setPath"
    ]
  },
  {
    "className": "org.apache.catalina.ant.VminfoTask",
    "sensitiveFields": [],
    "securityMethods": [
      "execute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.Arg",
    "sensitiveFields": [],
    "securityMethods": [
      "setType",
      "setValue"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorCondition",
    "sensitiveFields": [],
    "securityMethods": [
      "setIf",
      "setOperation",
      "setType",
      "setUnless"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorConditionBase",
    "sensitiveFields": [
      "password",
      "username",
      "name"
    ],
    "securityMethods": [
      "accessJMXValue",
      "setAttribute",
      "setHost",
      "setName",
      "setPassword",
      "setPort",
      "setRef",
      "setUrl",
      "setUsername",
      "setValue"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorCreateTask",
    "sensitiveFields": [
      "className"
    ],
    "securityMethods": [
      "addArg",
      "jmxCreate",
      "setArgs",
      "setClassLoader",
      "setClassName"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorGetTask",
    "sensitiveFields": [],
    "securityMethods": [
      "jmxGet",
      "setAttribute"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorInvokeTask",
    "sensitiveFields": [],
    "securityMethods": [
      "addArg",
      "jmxInvoke",
      "setArgs",
      "setOperation"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorQueryTask",
    "sensitiveFields": [],
    "securityMethods": [
      "bindAttributes",
      "jmxQuery",
      "setAttributebinding"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorSetTask",
    "sensitiveFields": [],
    "securityMethods": [
      "getMBeanAttributeType",
      "jmxSet",
      "setAttribute",
      "setConvert",
      "setType",
      "setValue"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorTask",
    "sensitiveFields": [
      "name",
      "password",
      "username"
    ],
    "securityMethods": [
      "accessJMXConnection",
      "createJMXConnection",
      "createProperty",
      "createProperty",
      "echoResult",
      "execute",
      "setDelimiter",
      "setEcho",
      "setHost",
      "setIf",
      "setName",
      "setPassword",
      "setPort",
      "setRef",
      "setResultproperty",
      "setSeparatearrayresults",
      "setUnless",
      "setUrl",
      "setUsername"
    ]
  },
  {
    "className": "org.apache.catalina.ant.jmx.JMXAccessorUnregisterTask",
    "sensitiveFields": [],
    "securityMethods": [
      "jmxUuregister"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.AuthenticatorBase",
    "sensitiveFields": [
      "AUTH_HEADER_NAME",
      "REALM_NAME",
      "changeSessionIdOnAuthentication",
      "secureRandomClass",
      "secureRandomProvider",
      "jaspicCallbackHandlerClass",
      "sessionIdGenerator",
      "jaspicAppContextID",
      "jaspicProvider"
    ],
    "securityMethods": [
      "associate",
      "authenticate",
      "authenticateJaspic",
      "checkForCachedAuthentication",
      "doAuthenticate",
      "doLogin",
      "getAuthMethod",
      "getChangeSessionIdOnAuthentication",
      "getJaspicProvider",
      "getJaspicState",
      "invoke",
      "login",
      "logout",
      "notify",
      "reauthenticateFromSSO",
      "register",
      "register",
      "secureResponseJspic",
      "setAlwaysUseSession",
      "setCache",
      "setChangeSessionIdOnAuthentication",
      "setContainer",
      "setDisableProxyCaching",
      "setJaspicCallbackHandlerClass",
      "setSecurePagesWithPragma",
      "setSecureRandomAlgorithm",
      "setSecureRandomClass",
      "setSecureRandomProvider",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.BasicAuthenticator",
    "sensitiveFields": [],
    "securityMethods": [
      "doAuthenticate",
      "getAuthMethod",
      "setCharset"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.Constants",
    "sensitiveFields": [
      "FORM_PASSWORD",
      "FORM_USERNAME",
      "DEFAULT_LOGIN_MODULE_NAME",
      "REQ_SSOID_NOTE",
      "REQ_JASPIC_SUBJECT_NOTE",
      "SESS_PASSWORD_NOTE",
      "SESS_USERNAME_NOTE"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.authenticator.DigestAuthenticator",
    "sensitiveFields": [
      "nonceValidity",
      "validateUri"
    ],
    "securityMethods": [
      "doAuthenticate",
      "getAuthMethod",
      "isValidateUri",
      "setAuthenticateHeader",
      "setKey",
      "setNonceCacheSize",
      "setNonceCountWindowSize",
      "setNonceValidity",
      "setOpaque",
      "setValidateUri",
      "startInternal"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.FormAuthenticator",
    "sensitiveFields": [],
    "securityMethods": [
      "doAuthenticate",
      "forwardToErrorPage",
      "forwardToLoginPage",
      "getAuthMethod",
      "saveRequest",
      "setCharacterEncoding",
      "setLandingPage"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.NonLoginAuthenticator",
    "sensitiveFields": [],
    "securityMethods": [
      "doAuthenticate",
      "getAuthMethod"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.SSLAuthenticator",
    "sensitiveFields": [],
    "securityMethods": [
      "doAuthenticate",
      "getAuthMethod"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.SavedRequest",
    "sensitiveFields": [
      "queryString"
    ],
    "securityMethods": [
      "addCookie",
      "addHeader",
      "addLocale",
      "getHeaderValues",
      "setBody",
      "setContentType",
      "setDecodedRequestURI",
      "setMethod",
      "setQueryString",
      "setRequestURI"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.SingleSignOn",
    "sensitiveFields": [
      "requireReauthentication"
    ],
    "securityMethods": [
      "associate",
      "deregister",
      "expire",
      "getRequireReauthentication",
      "getSessionListener",
      "invoke",
      "reauthenticate",
      "register",
      "removeSession",
      "sessionDestroyed",
      "setCookieDomain",
      "setRequireReauthentication",
      "startInternal",
      "stopInternal",
      "update"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.SingleSignOnEntry",
    "sensitiveFields": [
      "serialVersionUID",
      "authType",
      "password",
      "username",
      "canReauthenticate"
    ],
    "securityMethods": [
      "addSession",
      "getAuthType",
      "getCanReauthenticate",
      "readObject",
      "removeSession",
      "updateCredentials",
      "writeObject"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.SingleSignOnListener",
    "sensitiveFields": [
      "serialVersionUID",
      "ssoId"
    ],
    "securityMethods": [
      "sessionEvent"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.SingleSignOnSessionKey",
    "sensitiveFields": [
      "serialVersionUID",
      "sessionId",
      "contextName",
      "hostName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.authenticator.SpnegoAuthenticator",
    "sensitiveFields": [
      "AUTH_HEADER_VALUE_NEGOTIATE",
      "loginConfigName"
    ],
    "securityMethods": [
      "doAuthenticate",
      "getAuthMethod",
      "getLoginConfigName",
      "initInternal",
      "setApplyJava8u40Fix",
      "setLoginConfigName",
      "setNoKeepAliveUserAgents",
      "setStoreDelegatedCredential"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl",
    "sensitiveFields": [
      "CONFIG_PATH",
      "CONFIG_FILE",
      "CONFIG_FILE_LOCK",
      "DEFAULT_REGISTRATION_ID"
    ],
    "securityMethods": [
      "addRegistrationContextImpl",
      "createAuthConfigProvider",
      "doRegisterConfigProvider",
      "findProvider",
      "getConfigProvider",
      "getRegistrationContext",
      "getRegistrationIDs",
      "loadPersistentRegistrations",
      "refresh",
      "registerConfigProvider",
      "registerConfigProvider",
      "removeRegistration",
      "savePersistentProvider",
      "savePersistentProviders",
      "savePersistentRegistrations"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.jaspic.CallbackHandlerImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "getPrincipal",
      "handle"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.jaspic.MessageInfoImpl",
    "sensitiveFields": [
      "IS_MANDATORY"
    ],
    "securityMethods": [
      "setRequestMessage",
      "setResponseMessage"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations",
    "sensitiveFields": [],
    "securityMethods": [
      "loadProviders",
      "writeOptional",
      "writeProviders"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.jaspic.SimpleAuthConfigProvider",
    "sensitiveFields": [
      "serverAuthConfig"
    ],
    "securityMethods": [
      "createServerAuthConfig",
      "getClientAuthConfig",
      "getServerAuthConfig",
      "refresh"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig",
    "sensitiveFields": [
      "SERVER_AUTH_MODULE_KEY_PREFIX",
      "serverAuthContext"
    ],
    "securityMethods": [
      "createServerAuthContext",
      "getAuthContext",
      "getAuthContextID",
      "refresh"
    ]
  },
  {
    "className": "org.apache.catalina.authenticator.jaspic.SimpleServerAuthContext",
    "sensitiveFields": [],
    "securityMethods": [
      "cleanSubject",
      "secureResponse",
      "validateRequest"
    ]
  },
  {
    "className": "org.apache.catalina.connector.ClientAbortException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.connector.Connector",
    "sensitiveFields": [
      "INTERNAL_EXECUTOR_NAME",
      "proxyName",
      "protocolHandlerClassName"
    ],
    "securityMethods": [
      "addSslHostConfig",
      "addUpgradeProtocol",
      "destroyInternal",
      "getAttribute",
      "getProperty",
      "initInternal",
      "pause",
      "resume",
      "setAllowTrace",
      "setAsyncTimeout",
      "setAttribute",
      "setEnableLookups",
      "setMaxCookieCount",
      "setMaxParameterCount",
      "setMaxPostSize",
      "setMaxSavePostSize",
      "setParseBodyMethods",
      "setPort",
      "setProperty",
      "setProxyName",
      "setProxyPort",
      "setRedirectPort",
      "setScheme",
      "setSecure",
      "setService",
      "setURIEncoding",
      "setUseBodyEncodingForURI",
      "setUseIPVHosts",
      "setXpoweredBy",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.connector.CoyoteAdapter",
    "sensitiveFields": [
      "THREAD_NAME"
    ],
    "securityMethods": [
      "checkRecycled",
      "convertMB",
      "convertURI",
      "copyBytes",
      "doConnectorAuthenticationAuthorization",
      "log",
      "parsePathParameters",
      "parseSessionCookiesId",
      "parseSessionSslId",
      "service",
      "updateWrapperErrorCount"
    ]
  },
  {
    "className": "org.apache.catalina.connector.CoyoteInputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "checkNonBlockingRead",
      "clear",
      "close",
      "setReadListener"
    ]
  },
  {
    "className": "org.apache.catalina.connector.CoyoteOutputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "checkRegisterForWrite",
      "clear",
      "close",
      "flush",
      "setWriteListener",
      "write",
      "write",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.connector.CoyotePrincipal",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.connector.CoyoteReader",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "close",
      "mark",
      "reset"
    ]
  },
  {
    "className": "org.apache.catalina.connector.CoyoteWriter",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "close",
      "flush",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "recycle",
      "write",
      "write",
      "write",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.connector.InputBuffer",
    "sensitiveFields": [],
    "securityMethods": [
      "checkConverter",
      "clear",
      "close",
      "expand",
      "makeSpace",
      "mark",
      "recycle",
      "reset",
      "setByteBuffer",
      "setReadListener",
      "setRequest"
    ]
  },
  {
    "className": "org.apache.catalina.connector.OutputBuffer",
    "sensitiveFields": [],
    "securityMethods": [
      "append",
      "append",
      "append",
      "appendByteArray",
      "appendByteBuffer",
      "checkConverter",
      "checkRegisterForWrite",
      "clear",
      "close",
      "doFlush",
      "flush",
      "flushByteBuffer",
      "flushCharBuffer",
      "realWriteBytes",
      "realWriteChars",
      "recycle",
      "reset",
      "reset",
      "setBufferSize",
      "setResponse",
      "setSuspended",
      "setWriteListener",
      "toReadMode",
      "toWriteMode",
      "transfer",
      "transfer",
      "transfer",
      "write",
      "write",
      "write",
      "write",
      "write",
      "write",
      "write",
      "writeByte",
      "writeBytes",
      "writeBytes"
    ]
  },
  {
    "className": "org.apache.catalina.connector.Request",
    "sensitiveFields": [
      "authType",
      "requestDispatcherPath",
      "requestedSessionId",
      "localName"
    ],
    "securityMethods": [
      "addCookie",
      "addLocale",
      "addPathParameter",
      "authenticate",
      "changeSessionId",
      "checkSwallowInput",
      "clearCookies",
      "clearLocales",
      "convertCookies",
      "finishRequest",
      "getAttribute",
      "getAuthType",
      "getDateHeader",
      "getHeader",
      "getHeaders",
      "getIntHeader",
      "getNote",
      "getParameter",
      "getParameterValues",
      "getPart",
      "getPathParameter",
      "getRealPath",
      "getRequestDispatcher",
      "login",
      "logout",
      "notifyAttributeAssigned",
      "notifyAttributeRemoved",
      "parseCookies",
      "parseLocales",
      "parseLocalesHeader",
      "parseParameters",
      "parseParts",
      "recycle",
      "recycleCookieInfo",
      "recycleSessionInfo",
      "removeAttribute",
      "removeNote",
      "setAsyncSupported",
      "setAttribute",
      "setAuthType",
      "setCharacterEncoding",
      "setContentType",
      "setCoyoteRequest",
      "setFilterChain",
      "setLocalPort",
      "setNote",
      "setPathInfo",
      "setRemoteAddr",
      "setRemoteHost",
      "setRequest",
      "setRequestedSessionCookie",
      "setRequestedSessionId",
      "setRequestedSessionSSL",
      "setRequestedSessionURL",
      "setResponse",
      "setSecure",
      "setServerPort",
      "setURIConverter",
      "setUserPrincipal"
    ]
  },
  {
    "className": "org.apache.catalina.connector.RequestFacade",
    "sensitiveFields": [],
    "securityMethods": [
      "authenticate",
      "clear",
      "getAttribute",
      "getAuthType",
      "getDateHeader",
      "getHeader",
      "getHeaders",
      "getIntHeader",
      "getParameter",
      "getParameterValues",
      "getPart",
      "getRealPath",
      "getRequestDispatcher",
      "login",
      "logout",
      "removeAttribute",
      "setAttribute",
      "setCharacterEncoding"
    ]
  },
  {
    "className": "org.apache.catalina.connector.Response",
    "sensitiveFields": [],
    "securityMethods": [
      "addCookie",
      "addDateHeader",
      "addHeader",
      "addHeader",
      "addIntHeader",
      "addSessionCookieInternal",
      "checkSpecialHeader",
      "containsHeader",
      "copyChars",
      "finishResponse",
      "flushBuffer",
      "getHeader",
      "getHeaders",
      "normalize",
      "recycle",
      "reset",
      "resetBuffer",
      "resetBuffer",
      "sendAcknowledgement",
      "sendError",
      "sendError",
      "sendRedirect",
      "sendRedirect",
      "setAppCommitted",
      "setBufferSize",
      "setCharacterEncoding",
      "setContentLength",
      "setContentLengthLong",
      "setContentType",
      "setCoyoteResponse",
      "setDateHeader",
      "setHeader",
      "setIntHeader",
      "setLocale",
      "setRequest",
      "setResponse",
      "setStatus",
      "setStatus",
      "setSuspended",
      "setTrailerFields",
      "toEncoded"
    ]
  },
  {
    "className": "org.apache.catalina.connector.ResponseFacade",
    "sensitiveFields": [],
    "securityMethods": [
      "addCookie",
      "addDateHeader",
      "addHeader",
      "addIntHeader",
      "clear",
      "containsHeader",
      "finish",
      "flushBuffer",
      "getHeader",
      "getHeaders",
      "reset",
      "resetBuffer",
      "sendError",
      "sendError",
      "sendRedirect",
      "setBufferSize",
      "setCharacterEncoding",
      "setContentLength",
      "setContentLengthLong",
      "setContentType",
      "setDateHeader",
      "setHeader",
      "setIntHeader",
      "setLocale",
      "setStatus",
      "setStatus",
      "setTrailerFields"
    ]
  },
  {
    "className": "org.apache.catalina.core.AccessLogAdapter",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "log",
      "setRequestAttributesEnabled"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationContext",
    "sensitiveFields": [],
    "securityMethods": [
      "addFilter",
      "addFilter",
      "addFilter",
      "addFilter",
      "addJspFile",
      "addListener",
      "addListener",
      "addListener",
      "addServlet",
      "addServlet",
      "addServlet",
      "addServlet",
      "clearAttributes",
      "declareRoles",
      "getAttribute",
      "getFilterRegistration",
      "getInitParameter",
      "getMimeType",
      "getNamedDispatcher",
      "getRealPath",
      "getRequestDispatcher",
      "getResource",
      "getResourceAsStream",
      "getResourcePaths",
      "getServlet",
      "getServletRegistration",
      "log",
      "log",
      "log",
      "populateSessionTrackingModes",
      "removeAttribute",
      "setAttribute",
      "setAttributeReadOnly",
      "setInitParameter",
      "setNewServletContextListenerAllowed",
      "setRequestCharacterEncoding",
      "setResponseCharacterEncoding",
      "setSessionTimeout",
      "setSessionTrackingModes",
      "validateResourcePath"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationContextFacade",
    "sensitiveFields": [],
    "securityMethods": [
      "addFilter",
      "addFilter",
      "addFilter",
      "addJspFile",
      "addListener",
      "addListener",
      "addListener",
      "addServlet",
      "addServlet",
      "addServlet",
      "declareRoles",
      "doPrivileged",
      "doPrivileged",
      "getAttribute",
      "getContext",
      "getFilterRegistration",
      "getInitParameter",
      "getMimeType",
      "getNamedDispatcher",
      "getRealPath",
      "getRequestDispatcher",
      "getResource",
      "getResourceAsStream",
      "getResourcePaths",
      "getServlet",
      "getServletRegistration",
      "handleException",
      "initClassCache",
      "invokeMethod",
      "log",
      "log",
      "log",
      "removeAttribute",
      "setAttribute",
      "setInitParameter",
      "setRequestCharacterEncoding",
      "setResponseCharacterEncoding",
      "setSessionTimeout",
      "setSessionTrackingModes"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationDispatcher",
    "sensitiveFields": [
      "name",
      "pathInfo",
      "queryString",
      "servletPath"
    ],
    "securityMethods": [
      "checkSameObjects",
      "dispatch",
      "doDispatch",
      "doForward",
      "doInclude",
      "forward",
      "include",
      "invoke",
      "processRequest",
      "recycleRequestWrapper",
      "unwrapRequest",
      "unwrapResponse"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationFilterChain",
    "sensitiveFields": [],
    "securityMethods": [
      "addFilter",
      "doFilter",
      "findNonAsyncFilters",
      "internalDoFilter",
      "release",
      "reuse",
      "setServlet",
      "setServletSupportsAsync"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationFilterConfig",
    "sensitiveFields": [
      "serialVersionUID",
      "oname"
    ],
    "securityMethods": [
      "getInitParameter",
      "initFilter",
      "readObject",
      "registerJMX",
      "release",
      "unregisterJMX"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationFilterFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "matchFiltersServlet",
      "matchFiltersURL",
      "matchFiltersURL"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationFilterRegistration",
    "sensitiveFields": [],
    "securityMethods": [
      "addMappingForServletNames",
      "addMappingForUrlPatterns",
      "getInitParameter",
      "setAsyncSupported",
      "setInitParameter"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationHttpRequest",
    "sensitiveFields": [
      "contextPath",
      "pathInfo",
      "queryParamString",
      "queryString",
      "requestDispatcherPath",
      "servletPath"
    ],
    "securityMethods": [
      "getAttribute",
      "getParameter",
      "getParameterValues",
      "getRequestDispatcher",
      "getSpecial",
      "isSpecial",
      "mergeParameters",
      "parseParameters",
      "recycle",
      "removeAttribute",
      "removeSpecial",
      "setAttribute",
      "setContextPath",
      "setMapping",
      "setPathInfo",
      "setQueryParams",
      "setQueryString",
      "setRequest",
      "setRequestURI",
      "setServletPath",
      "setSpecial"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationHttpResponse",
    "sensitiveFields": [],
    "securityMethods": [
      "addCookie",
      "addDateHeader",
      "addHeader",
      "addIntHeader",
      "reset",
      "sendError",
      "sendError",
      "sendRedirect",
      "setBufferSize",
      "setContentLength",
      "setContentLengthLong",
      "setContentType",
      "setDateHeader",
      "setHeader",
      "setIncluded",
      "setIntHeader",
      "setLocale",
      "setResponse",
      "setStatus",
      "setStatus"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationMapping",
    "sensitiveFields": [],
    "securityMethods": [
      "recycle"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationPart",
    "sensitiveFields": [
      "fileItem"
    ],
    "securityMethods": [
      "delete",
      "getHeader",
      "getHeaders",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationPushBuilder",
    "sensitiveFields": [
      "sessionCookieName",
      "sessionPathParameterName",
      "addSessionPathParameter",
      "path",
      "queryString",
      "sessionId",
      "userName"
    ],
    "securityMethods": [
      "addHeader",
      "getHeader",
      "path",
      "push",
      "queryString",
      "removeHeader",
      "sessionId",
      "setHeader"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationRequest",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "isSpecial",
      "removeAttribute",
      "setAttribute",
      "setRequest"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationResponse",
    "sensitiveFields": [],
    "securityMethods": [
      "reset",
      "setBufferSize",
      "setContentLength",
      "setContentLengthLong",
      "setContentType",
      "setIncluded",
      "setLocale",
      "setResponse"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationServletRegistration",
    "sensitiveFields": [],
    "securityMethods": [
      "getInitParameter",
      "setAsyncSupported",
      "setInitParameter",
      "setLoadOnStartup",
      "setMultipartConfig",
      "setRunAsRole"
    ]
  },
  {
    "className": "org.apache.catalina.core.ApplicationSessionCookieConfig",
    "sensitiveFields": [
      "name",
      "path"
    ],
    "securityMethods": [
      "createSessionCookie",
      "setComment",
      "setDomain",
      "setHttpOnly",
      "setMaxAge",
      "setName",
      "setPath",
      "setSecure"
    ]
  },
  {
    "className": "org.apache.catalina.core.AprLifecycleListener",
    "sensitiveFields": [],
    "securityMethods": [
      "init",
      "initializeSSL",
      "lifecycleEvent",
      "setFIPSMode",
      "setSSLEngine",
      "setSSLRandomSeed",
      "setUseAprConnector",
      "setUseOpenSSL",
      "terminateAPR"
    ]
  },
  {
    "className": "org.apache.catalina.core.AsyncContextImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "addListener",
      "addListener",
      "check",
      "clearServletRequestResponse",
      "complete",
      "dispatch",
      "dispatch",
      "dispatch",
      "doInternalDispatch",
      "fireOnComplete",
      "logDebug",
      "recycle",
      "setErrorState",
      "setStarted",
      "setTimeout",
      "start"
    ]
  },
  {
    "className": "org.apache.catalina.core.AsyncListenerWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "fireOnComplete",
      "fireOnError",
      "fireOnStartAsync",
      "fireOnTimeout",
      "setListener",
      "setServletRequest",
      "setServletResponse"
    ]
  },
  {
    "className": "org.apache.catalina.core.ContainerBase",
    "sensitiveFields": [
      "logName",
      "name"
    ],
    "securityMethods": [
      "addChild",
      "addChildInternal",
      "addContainerListener",
      "addPropertyChangeListener",
      "addValve",
      "backgroundProcess",
      "destroyInternal",
      "findChild",
      "fireContainerEvent",
      "getAccessLog",
      "getCatalinaBase",
      "getCatalinaHome",
      "getChildren",
      "initInternal",
      "logAccess",
      "reconfigureStartStopExecutor",
      "removeChild",
      "removeContainerListener",
      "removePropertyChangeListener",
      "setBackgroundProcessorDelay",
      "setCluster",
      "setName",
      "setParent",
      "setParentClassLoader",
      "setRealm",
      "setStartChildren",
      "setStartStopThreads",
      "startInternal",
      "stopInternal",
      "threadStart",
      "threadStop"
    ]
  },
  {
    "className": "org.apache.catalina.core.DefaultInstanceManager",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "checkAccess",
      "destroyInstance",
      "findLifecycleCallback",
      "findPostConstruct",
      "findPreDestroy",
      "getField",
      "getMethod",
      "loadClass",
      "loadClassMaybePrivileged",
      "loadProperties",
      "lookupFieldResource",
      "lookupMethodResource",
      "newInstance",
      "newInstance",
      "newInstance",
      "normalize",
      "populateAnnotationsCache",
      "postConstruct",
      "preDestroy",
      "processAnnotations"
    ]
  },
  {
    "className": "org.apache.catalina.core.JreMemoryLeakPreventionListener",
    "sensitiveFields": [
      "FORK_JOIN_POOL_THREAD_FACTORY_PROPERTY",
      "tokenPollerProtection",
      "xmlParsingProtection"
    ],
    "securityMethods": [
      "lifecycleEvent",
      "setAWTThreadProtection",
      "setClassesToInitialize",
      "setDriverManagerProtection",
      "setForkJoinCommonPoolProtection",
      "setGcDaemonProtection",
      "setLdapPoolProtection",
      "setTokenPollerProtection",
      "setUrlCacheProtection",
      "setXmlParsingProtection"
    ]
  },
  {
    "className": "org.apache.catalina.core.NamingContextListener",
    "sensitiveFields": [
      "name",
      "token",
      "objectNames"
    ],
    "securityMethods": [
      "addEjb",
      "addEnvironment",
      "addLocalEjb",
      "addMessageDestinationRef",
      "addResource",
      "addResourceEnvRef",
      "addResourceLink",
      "addService",
      "containerEvent",
      "createNamingContext",
      "createObjectName",
      "createSubcontexts",
      "lifecycleEvent",
      "processGlobalResourcesChange",
      "propertyChange",
      "removeEjb",
      "removeEnvironment",
      "removeLocalEjb",
      "removeMessageDestinationRef",
      "removeResource",
      "removeResourceEnvRef",
      "removeResourceLink",
      "removeService",
      "setExceptionOnFailedWrite",
      "setName"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardContext",
    "sensitiveFields": [
      "swallowAbortedUploads",
      "altDDName",
      "configFile",
      "encodedPath",
      "path",
      "displayName",
      "defaultContextXml",
      "defaultWebXml",
      "publicId",
      "copyXML",
      "override",
      "replaceWelcomeFiles",
      "welcomeFiles",
      "welcomeFilesLock",
      "wrapperClassName",
      "namingContextName",
      "webXmlValidation",
      "webXmlNamespaceAware",
      "xmlBlockExternal",
      "tldValidation",
      "sessionCookieName",
      "sessionCookiePath",
      "sessionCookiePathUsesTrailingSlash",
      "clearReferencesObjectStreamClassCaches",
      "skipMemoryLeakChecksOnJvmShutdown",
      "logEffectiveWebXml",
      "preemptiveAuthentication",
      "namingToken",
      "validateClientProvidedNewSessionId",
      "mapperDirectoryRedirectEnabled",
      "dispatchersUseEncodedPaths",
      "allowMultipleLeadingForwardSlashInPath"
    ],
    "securityMethods": [
      "addApplicationEventListener",
      "addApplicationLifecycleListener",
      "addApplicationListener",
      "addApplicationParameter",
      "addChild",
      "addConstraint",
      "addErrorPage",
      "addFilterDef",
      "addFilterMap",
      "addFilterMapBefore",
      "addInjectionTarget",
      "addLocaleEncodingMappingParameter",
      "addMessageDestination",
      "addMessageDestinationRef",
      "addMimeMapping",
      "addNotificationListener",
      "addParameter",
      "addPostConstructMethod",
      "addPreDestroyMethod",
      "addRoleMapping",
      "addSecurityRole",
      "addServletContainerInitializer",
      "addServletMappingDecoded",
      "addWatchedResource",
      "addWelcomeFile",
      "addWrapperLifecycle",
      "addWrapperListener",
      "backgroundProcess",
      "checkConstraintsForUncoveredMethods",
      "checkUnusualURLPattern",
      "destroyInternal",
      "dynamicServletCreated",
      "findFilterConfig",
      "findFilterDef",
      "findMessageDestination",
      "findMessageDestinationRef",
      "findParameter",
      "findWelcomeFile",
      "getAuthenticator",
      "getLoginConfig",
      "getPreemptiveAuthentication",
      "getRealPath",
      "getValidateClientProvidedNewSessionId",
      "initInternal",
      "isResourceOnlyServlet",
      "mergeParameters",
      "postWorkDirectory",
      "reload",
      "removeApplicationListener",
      "removeApplicationParameter",
      "removeChild",
      "removeConstraint",
      "removeErrorPage",
      "removeFilterDef",
      "removeFilterMap",
      "removeMessageDestination",
      "removeMessageDestinationRef",
      "removeMimeMapping",
      "removeNotificationListener",
      "removeNotificationListener",
      "removeParameter",
      "removePostConstructMethod",
      "removePreDestroyMethod",
      "removeRoleMapping",
      "removeSecurityRole",
      "removeServletMapping",
      "removeWatchedResource",
      "removeWelcomeFile",
      "removeWrapperLifecycle",
      "removeWrapperListener",
      "resetContext",
      "resourcesStart",
      "setAddWebinfClassesResources",
      "setAllowCasualMultipartParsing",
      "setAllowMultipleLeadingForwardSlashInPath",
      "setAltDDName",
      "setAntiResourceLocking",
      "setApplicationEventListeners",
      "setApplicationLifecycleListeners",
      "setCharsetMapper",
      "setCharsetMapperClass",
      "setClassLoaderProperty",
      "setClearReferencesHttpClientKeepAliveThread",
      "setClearReferencesObjectStreamClassCaches",
      "setClearReferencesRmiTargets",
      "setClearReferencesStopThreads",
      "setClearReferencesStopTimerThreads",
      "setConfigFile",
      "setConfigured",
      "setContainerSciFilter",
      "setCookieProcessor",
      "setCookies",
      "setCopyXML",
      "setCrossContext",
      "setDefaultContextXml",
      "setDefaultWebXml",
      "setDelegate",
      "setDenyUncoveredHttpMethods",
      "setDispatchersUseEncodedPaths",
      "setDisplayName",
      "setDistributable",
      "setDocBase",
      "setEffectiveMajorVersion",
      "setEffectiveMinorVersion",
      "setFailCtxIfServletStartFails",
      "setFireRequestListenersOnForwards",
      "setIgnoreAnnotations",
      "setInstanceManager",
      "setJ2EEApplication",
      "setJ2EEServer",
      "setJarScanner",
      "setJndiExceptionOnFailedWrite",
      "setJspConfigDescriptor",
      "setLoader",
      "setLogEffectiveWebXml",
      "setLoginConfig",
      "setManager",
      "setMapperContextRootRedirectEnabled",
      "setMapperDirectoryRedirectEnabled",
      "setNamingContextListener",
      "setNamingResources",
      "setOriginalDocBase",
      "setOverride",
      "setPath",
      "setPaused",
      "setPreemptiveAuthentication",
      "setPrivileged",
      "setPublicId",
      "setReloadable",
      "setRenewThreadsWhenStoppingContext",
      "setReplaceWelcomeFiles",
      "setRequestCharacterEncoding",
      "setResourceOnlyServlets",
      "setResources",
      "setResponseCharacterEncoding",
      "setSendRedirectBody",
      "setSessionCookieDomain",
      "setSessionCookieName",
      "setSessionCookiePath",
      "setSessionCookiePathUsesTrailingSlash",
      "setSessionTimeout",
      "setSkipMemoryLeakChecksOnJvmShutdown",
      "setStartupTime",
      "setSwallowAbortedUploads",
      "setSwallowOutput",
      "setThreadBindingListener",
      "setTldScanTime",
      "setTldValidation",
      "setUnloadDelay",
      "setUnpackWAR",
      "setUseHttpOnly",
      "setUseNaming",
      "setUseRelativeRedirects",
      "setValidateClientProvidedNewSessionId",
      "setWebappVersion",
      "setWorkDir",
      "setWrapperClass",
      "setXmlBlockExternal",
      "setXmlNamespaceAware",
      "setXmlValidation",
      "startInternal",
      "stopInternal",
      "unbind",
      "unbindThread",
      "validateFilterMap",
      "validateURLPattern"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardContextValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardEngine",
    "sensitiveFields": [
      "jvmRouteId"
    ],
    "securityMethods": [
      "addChild",
      "getCatalinaBase",
      "getCatalinaHome",
      "initInternal",
      "logAccess",
      "setDefaultHost",
      "setJvmRoute",
      "setParent",
      "setService",
      "startInternal"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardEngineValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardHost",
    "sensitiveFields": [
      "appBaseFile",
      "xmlBase",
      "deployXML",
      "copyXML"
    ],
    "securityMethods": [
      "addAlias",
      "addChild",
      "getAppBaseFile",
      "getConfigBaseFile",
      "removeAlias",
      "setAppBase",
      "setAutoDeploy",
      "setConfigClass",
      "setContextClass",
      "setCopyXML",
      "setCreateDirs",
      "setDeployIgnore",
      "setDeployOnStartup",
      "setDeployXML",
      "setErrorReportValveClass",
      "setFailCtxIfServletStartFails",
      "setName",
      "setUndeployOldVersions",
      "setUnpackWARs",
      "setWorkDir",
      "setXmlBase",
      "startInternal"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardHostValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke",
      "status",
      "throwable"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardPipeline",
    "sensitiveFields": [],
    "securityMethods": [
      "addValve",
      "destroyInternal",
      "findNonAsyncValves",
      "getValveObjectNames",
      "initInternal",
      "removeValve",
      "setBasic",
      "setContainer",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardServer",
    "sensitiveFields": [
      "namingToken",
      "onameStringCache",
      "onameMBeanFactory"
    ],
    "securityMethods": [
      "addPropertyChangeListener",
      "addService",
      "await",
      "destroyInternal",
      "findService",
      "getCatalinaBase",
      "getCatalinaHome",
      "getServiceNames",
      "initInternal",
      "removePropertyChangeListener",
      "removeService",
      "setAddress",
      "setCatalina",
      "setCatalinaBase",
      "setCatalinaHome",
      "setGlobalNamingContext",
      "setGlobalNamingResources",
      "setParentClassLoader",
      "setPort",
      "setShutdown",
      "startInternal",
      "stopAwait",
      "stopInternal",
      "storeConfig",
      "storeContext"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardService",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "addConnector",
      "addExecutor",
      "addPropertyChangeListener",
      "destroyInternal",
      "getConnectorNames",
      "getExecutor",
      "initInternal",
      "removeConnector",
      "removeExecutor",
      "removePropertyChangeListener",
      "setContainer",
      "setName",
      "setParentClassLoader",
      "setServer",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardThreadExecutor",
    "sensitiveFields": [
      "namePrefix",
      "maxIdleTime",
      "name"
    ],
    "securityMethods": [
      "contextStopping",
      "destroyInternal",
      "execute",
      "execute",
      "initInternal",
      "setDaemon",
      "setMaxIdleTime",
      "setMaxQueueSize",
      "setMaxThreads",
      "setMinSpareThreads",
      "setName",
      "setNamePrefix",
      "setPrestartminSpareThreads",
      "setThreadPriority",
      "setThreadRenewalDelay",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardWrapper",
    "sensitiveFields": [
      "overridable"
    ],
    "securityMethods": [
      "addChild",
      "addInitParameter",
      "addMapping",
      "addNotificationListener",
      "addSecurityReference",
      "backgroundProcess",
      "deallocate",
      "findInitParameter",
      "findSecurityReference",
      "getInitParameter",
      "incrementErrorCount",
      "initServlet",
      "load",
      "removeInitParameter",
      "removeMapping",
      "removeNotificationListener",
      "removeNotificationListener",
      "removeSecurityReference",
      "setAsyncSupported",
      "setAvailable",
      "setEnabled",
      "setLoadOnStartup",
      "setLoadOnStartupString",
      "setMaxInstances",
      "setMultipartConfigElement",
      "setOverridable",
      "setParent",
      "setRunAs",
      "setServlet",
      "setServletClass",
      "setServletName",
      "startInternal",
      "stopInternal",
      "unavailable",
      "unload"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardWrapperFacade",
    "sensitiveFields": [],
    "securityMethods": [
      "getInitParameter"
    ]
  },
  {
    "className": "org.apache.catalina.core.StandardWrapperValve",
    "sensitiveFields": [],
    "securityMethods": [
      "exception",
      "incrementErrorCount",
      "initInternal",
      "invoke"
    ]
  },
  {
    "className": "org.apache.catalina.core.ThreadLocalLeakPreventionListener",
    "sensitiveFields": [],
    "securityMethods": [
      "containerEvent",
      "lifecycleEvent",
      "processContainerAddChild",
      "processContainerRemoveChild",
      "registerContextListener",
      "registerListenersForEngine",
      "registerListenersForHost",
      "registerListenersForServer",
      "stopIdleThreads"
    ]
  },
  {
    "className": "org.apache.catalina.deploy.NamingResourcesImpl",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "addEjb",
      "addEnvironment",
      "addLocalEjb",
      "addMessageDestinationRef",
      "addPropertyChangeListener",
      "addResource",
      "addResourceEnvRef",
      "addResourceLink",
      "addService",
      "cleanUp",
      "cleanUp",
      "destroyInternal",
      "findEjb",
      "findEnvironment",
      "findLocalEjb",
      "findMessageDestinationRef",
      "findResource",
      "findResourceEnvRef",
      "findResourceLink",
      "findService",
      "getFieldType",
      "getSetterType",
      "initInternal",
      "removeEjb",
      "removeEnvironment",
      "removeLocalEjb",
      "removeMessageDestinationRef",
      "removePropertyChangeListener",
      "removeResource",
      "removeResourceEnvRef",
      "removeResourceLink",
      "removeService",
      "setContainer",
      "setTransaction",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.filters.AddDefaultCharsetFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter",
      "init",
      "setEncoding"
    ]
  },
  {
    "className": "org.apache.catalina.filters.Constants",
    "sensitiveFields": [
      "CSRF_NONCE_SESSION_ATTR_NAME",
      "CSRF_REST_NONCE_HEADER_NAME",
      "CSRF_REST_NONCE_SESSION_ATTR_NAME"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.filters.CorsFilter",
    "sensitiveFields": [
      "serialVersionUID",
      "REQUEST_HEADER_VARY"
    ],
    "securityMethods": [
      "addStandardHeaders",
      "decorateCORSProperties",
      "doFilter",
      "getInitParameter",
      "handleInvalidCORS",
      "handleNonCORS",
      "handlePreflightCORS",
      "handleSimpleCORS",
      "init",
      "parseAndStore",
      "readObject"
    ]
  },
  {
    "className": "org.apache.catalina.filters.CsrfPreventionFilter",
    "sensitiveFields": [
      "entryPoints"
    ],
    "securityMethods": [
      "doFilter",
      "setEntryPoints",
      "setNonceCacheSize"
    ]
  },
  {
    "className": "org.apache.catalina.filters.CsrfPreventionFilterBase",
    "sensitiveFields": [
      "randomClass"
    ],
    "securityMethods": [
      "init",
      "setDenyStatus",
      "setRandomClass"
    ]
  },
  {
    "className": "org.apache.catalina.filters.ExpiresFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter",
      "init",
      "onBeforeWriteResponseBody",
      "setDefaultExpiresConfiguration",
      "setExcludedResponseStatusCodes",
      "setExpiresConfigurationByContentType"
    ]
  },
  {
    "className": "org.apache.catalina.filters.FailedRequestFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter"
    ]
  },
  {
    "className": "org.apache.catalina.filters.FilterBase",
    "sensitiveFields": [],
    "securityMethods": [
      "init"
    ]
  },
  {
    "className": "org.apache.catalina.filters.HttpHeaderSecurityFilter",
    "sensitiveFields": [
      "HSTS_HEADER_NAME",
      "ANTI_CLICK_JACKING_HEADER_NAME",
      "BLOCK_CONTENT_TYPE_SNIFFING_HEADER_NAME",
      "XSS_PROTECTION_HEADER_NAME"
    ],
    "securityMethods": [
      "doFilter",
      "init",
      "setAntiClickJackingEnabled",
      "setAntiClickJackingOption",
      "setAntiClickJackingUri",
      "setBlockContentTypeSniffingEnabled",
      "setHstsEnabled",
      "setHstsIncludeSubDomains",
      "setHstsMaxAgeSeconds",
      "setHstsPreload",
      "setXssProtectionEnabled"
    ]
  },
  {
    "className": "org.apache.catalina.filters.RemoteAddrFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter"
    ]
  },
  {
    "className": "org.apache.catalina.filters.RemoteCIDRFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter",
      "sendErrorWhenNotHttp",
      "setAllow",
      "setDeny"
    ]
  },
  {
    "className": "org.apache.catalina.filters.RemoteHostFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter"
    ]
  },
  {
    "className": "org.apache.catalina.filters.RemoteIpFilter",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "doFilter",
      "doFilter",
      "init",
      "readObject",
      "setChangeLocalPort",
      "setHttpServerPort",
      "setHttpsServerPort",
      "setInternalProxies",
      "setPortHeader",
      "setPorts",
      "setProtocolHeader",
      "setProtocolHeaderHttpsValue",
      "setProxiesHeader",
      "setRemoteIpHeader",
      "setRequestAttributesEnabled",
      "setTrustedProxies"
    ]
  },
  {
    "className": "org.apache.catalina.filters.RequestDumperFilter",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "doFilter",
      "doLog",
      "readObject"
    ]
  },
  {
    "className": "org.apache.catalina.filters.RequestFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter",
      "process",
      "sendErrorWhenNotHttp",
      "setAllow",
      "setDeny",
      "setDenyStatus"
    ]
  },
  {
    "className": "org.apache.catalina.filters.RestCsrfPreventionFilter",
    "sensitiveFields": [
      "pathsAcceptingParams",
      "pathsDelimiter"
    ],
    "securityMethods": [
      "doFilter",
      "setPathsAcceptingParams"
    ]
  },
  {
    "className": "org.apache.catalina.filters.SessionInitializerFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter"
    ]
  },
  {
    "className": "org.apache.catalina.filters.SetCharacterEncodingFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "doFilter",
      "setEncoding",
      "setIgnore"
    ]
  },
  {
    "className": "org.apache.catalina.filters.WebdavFixFilter",
    "sensitiveFields": [
      "serialVersionUID",
      "UA_MINIDIR_START",
      "UA_MINIDIR_5_1_2600",
      "UA_MINIDIR_5_2_3790"
    ],
    "securityMethods": [
      "doFilter",
      "log"
    ]
  },
  {
    "className": "org.apache.catalina.ha.CatalinaCluster",
    "sensitiveFields": [],
    "securityMethods": [
      "addClusterListener",
      "addValve",
      "getManager",
      "getManagerName",
      "removeClusterListener",
      "send",
      "send",
      "send",
      "setChannel",
      "setClusterDeployer"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterDeployer",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "install",
      "remove",
      "setCluster",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterListener",
    "sensitiveFields": [],
    "securityMethods": [
      "messageReceived",
      "messageReceived",
      "setCluster"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterManager",
    "sensitiveFields": [],
    "securityMethods": [
      "getInvalidatedSessions",
      "messageDataReceived",
      "requestCompleted",
      "setCluster",
      "setName"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterMessage",
    "sensitiveFields": [],
    "securityMethods": [
      "setAddress",
      "setTimestamp"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterMessageBase",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "setAddress",
      "setTimestamp"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterSession",
    "sensitiveFields": [],
    "securityMethods": [
      "setPrimarySession"
    ]
  },
  {
    "className": "org.apache.catalina.ha.ClusterValve",
    "sensitiveFields": [],
    "securityMethods": [
      "setCluster"
    ]
  },
  {
    "className": "org.apache.catalina.ha.authenticator.ClusterSingleSignOn",
    "sensitiveFields": [],
    "securityMethods": [
      "associate",
      "getAccessTimeout",
      "getSessionListener",
      "objectMadePrimary",
      "setAccessTimeout",
      "setCluster",
      "setMapSendOptions",
      "setRpcTimeout",
      "setTerminateOnStartFailure",
      "startInternal",
      "stopInternal",
      "update"
    ]
  },
  {
    "className": "org.apache.catalina.ha.authenticator.ClusterSingleSignOnListener",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.ha.backend.CollectedInfo",
    "sensitiveFields": [
      "objName"
    ],
    "securityMethods": [
      "init",
      "refresh"
    ]
  },
  {
    "className": "org.apache.catalina.ha.backend.HeartbeatListener",
    "sensitiveFields": [],
    "securityMethods": [
      "containerEvent",
      "lifecycleEvent"
    ]
  },
  {
    "className": "org.apache.catalina.ha.backend.MultiCastSender",
    "sensitiveFields": [],
    "securityMethods": [
      "init"
    ]
  },
  {
    "className": "org.apache.catalina.ha.backend.Sender",
    "sensitiveFields": [],
    "securityMethods": [
      "init"
    ]
  },
  {
    "className": "org.apache.catalina.ha.backend.TcpSender",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "init"
    ]
  },
  {
    "className": "org.apache.catalina.ha.context.ReplicatedContext",
    "sensitiveFields": [],
    "securityMethods": [
      "objectMadePrimary",
      "setMapSendOptions",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.ha.deploy.FarmWarDeployer",
    "sensitiveFields": [
      "fileFactories",
      "deployDirFile",
      "tempDirFile",
      "watchDirFile",
      "oname",
      "maxValidTime"
    ],
    "securityMethods": [
      "addServiced",
      "backgroundProcess",
      "check",
      "fileModified",
      "fileRemoved",
      "getAbsolutePath",
      "getDeployDirFile",
      "getFactory",
      "getTempDirFile",
      "getWatchDirFile",
      "install",
      "isServiced",
      "messageReceived",
      "remove",
      "remove",
      "removeFactory",
      "removeInvalidFileFactories",
      "removeServiced",
      "setDeployDir",
      "setMaxValidTime",
      "setProcessDeployFrequency",
      "setTempDir",
      "setWatchDir",
      "setWatchEnabled",
      "start",
      "stop",
      "undeployDir"
    ]
  },
  {
    "className": "org.apache.catalina.ha.deploy.FileChangeListener",
    "sensitiveFields": [],
    "securityMethods": [
      "fileModified",
      "fileRemoved"
    ]
  },
  {
    "className": "org.apache.catalina.ha.deploy.FileMessage",
    "sensitiveFields": [
      "serialVersionUID",
      "fileName",
      "contextName"
    ],
    "securityMethods": [
      "setData",
      "setMessageNumber",
      "setTotalNrOfMsgs"
    ]
  },
  {
    "className": "org.apache.catalina.ha.deploy.FileMessageFactory",
    "sensitiveFields": [
      "file",
      "maxValidTime"
    ],
    "securityMethods": [
      "checkState",
      "cleanup",
      "getFile",
      "getInstance",
      "main",
      "readMessage",
      "setMaxValidTime"
    ]
  },
  {
    "className": "org.apache.catalina.ha.deploy.UndeployMessage",
    "sensitiveFields": [
      "serialVersionUID",
      "uniqueId",
      "contextName"
    ],
    "securityMethods": [
      "setAddress",
      "setTimestamp"
    ]
  },
  {
    "className": "org.apache.catalina.ha.deploy.WarWatcher",
    "sensitiveFields": [],
    "securityMethods": [
      "addWarInfo",
      "check",
      "clear"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.BackupManager",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "getAccessTimeout",
      "getInvalidatedSessions",
      "messageDataReceived",
      "objectMadePrimary",
      "requestCompleted",
      "setAccessTimeout",
      "setMapSendOptions",
      "setMapSendOptions",
      "setName",
      "setRpcTimeout",
      "setTerminateOnStartFailure",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.ClusterManagerBase",
    "sensitiveFields": [],
    "securityMethods": [
      "clone",
      "load",
      "registerSessionAtReplicationValve",
      "setCluster",
      "setNotifyListenersOnReplication",
      "setRecordAllActions",
      "startInternal",
      "stopInternal",
      "unload"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.ClusterSessionListener",
    "sensitiveFields": [],
    "securityMethods": [
      "messageReceived"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.DeltaManager",
    "sensitiveFields": [
      "name",
      "counterReceive_EVT_CHANGE_SESSION_ID",
      "counterSend_EVT_CHANGE_SESSION_ID"
    ],
    "securityMethods": [
      "changeSessionId",
      "changeSessionId",
      "changeSessionId",
      "changeSessionId",
      "createSession",
      "createSession",
      "deserializeSessions",
      "expireAllLocalSessions",
      "getAllClusterSessions",
      "getCounterReceive_EVT_SESSION_ACCESSED",
      "getCounterSend_EVT_SESSION_ACCESSED",
      "getInvalidatedSessions",
      "handleALL_SESSION_DATA",
      "handleALL_SESSION_NOCONTEXTMANAGER",
      "handleALL_SESSION_TRANSFERCOMPLETE",
      "handleCHANGE_SESSION_ID",
      "handleGET_ALL_SESSIONS",
      "handleSESSION_ACCESSED",
      "handleSESSION_CREATED",
      "handleSESSION_DELTA",
      "handleSESSION_EXPIRED",
      "messageDataReceived",
      "messageReceived",
      "requestCompleted",
      "requestCompleted",
      "resetStatistics",
      "send",
      "sendChangeSessionId",
      "sendCreateSession",
      "sendSessions",
      "serializeSessionId",
      "sessionExpired",
      "setExpireSessionsOnShutdown",
      "setName",
      "setNoContextManagerReceived",
      "setNotifyContainerListenersOnReplication",
      "setNotifySessionListenersOnReplication",
      "setSendAllSessions",
      "setSendAllSessionsSize",
      "setSendAllSessionsWaitTime",
      "setStateTimestampDrop",
      "setStateTransferTimeout",
      "setStateTransfered",
      "startInternal",
      "stopInternal",
      "waitForSendAllSessions"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.DeltaRequest",
    "sensitiveFields": [
      "TYPE_AUTHTYPE",
      "NAME_PRINCIPAL",
      "NAME_MAXINTERVAL",
      "NAME_ISNEW",
      "NAME_AUTHTYPE",
      "NAME_LISTENER",
      "sessionId"
    ],
    "securityMethods": [
      "addAction",
      "addSessionListener",
      "clear",
      "execute",
      "readExternal",
      "removeAttribute",
      "removeSessionListener",
      "reset",
      "setAttribute",
      "setAuthType",
      "setMaxInactiveInterval",
      "setNew",
      "setPrincipal",
      "setSessionId",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.DeltaSession",
    "sensitiveFields": [
      "isPrimarySession"
    ],
    "securityMethods": [
      "accessEntry",
      "addSessionListener",
      "addSessionListener",
      "applyDiff",
      "doReadObject",
      "doReadObject",
      "doWriteObject",
      "doWriteObject",
      "endAccess",
      "expire",
      "expire",
      "isAccessReplicate",
      "lock",
      "readExternal",
      "readObjectData",
      "readObjectData",
      "recycle",
      "removeAttribute",
      "removeAttribute",
      "removeAttributeInternal",
      "removeSessionListener",
      "removeSessionListener",
      "resetDeltaRequest",
      "resetDiff",
      "setAccessCount",
      "setAttribute",
      "setAttribute",
      "setAuthType",
      "setAuthType",
      "setId",
      "setId",
      "setLastTimeReplicated",
      "setMaxInactiveInterval",
      "setMaxInactiveInterval",
      "setNew",
      "setNew",
      "setOwner",
      "setPrimarySession",
      "setPrincipal",
      "setPrincipal",
      "setVersion",
      "unlock",
      "writeExternal",
      "writeObjectData",
      "writeObjectData"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.JvmRouteBinderValve",
    "sensitiveFields": [
      "sessionIdAttribute"
    ],
    "securityMethods": [
      "changeRequestSessionID",
      "changeSessionID",
      "handleJvmRoute",
      "handlePossibleTurnover",
      "invoke",
      "setCluster",
      "setEnabled",
      "setSessionIdAttribute",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.ha.session.SessionMessage",
    "sensitiveFields": [
      "EVT_CHANGE_SESSION_ID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.ha.session.SessionMessageImpl",
    "sensitiveFields": [
      "serialVersionUID",
      "mSessionID",
      "mContextName",
      "uniqueId"
    ],
    "securityMethods": [
      "setTimestamp"
    ]
  },
  {
    "className": "org.apache.catalina.ha.tcp.ReplicationValve",
    "sensitiveFields": [
      "primaryIndicator",
      "primaryIndicatorName"
    ],
    "securityMethods": [
      "createPrimaryIndicator",
      "invoke",
      "registerReplicationSession",
      "resetDeltaRequest",
      "resetReplicationRequest",
      "resetStatistics",
      "send",
      "sendCrossContextSession",
      "sendInvalidSessions",
      "sendMessage",
      "sendReplicationMessage",
      "sendSessionReplicationMessage",
      "setCluster",
      "setFilter",
      "setPrimaryIndicator",
      "setPrimaryIndicatorName",
      "setStatistics",
      "startInternal",
      "updateStats"
    ]
  },
  {
    "className": "org.apache.catalina.ha.tcp.SimpleTcpCluster",
    "sensitiveFields": [
      "clusterName",
      "onameClusterDeployer",
      "memberOnameMap"
    ],
    "securityMethods": [
      "addClusterListener",
      "addValve",
      "backgroundProcess",
      "checkDefaults",
      "createManager",
      "destroyInternal",
      "getManager",
      "getManagerName",
      "initInternal",
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "messageReceived",
      "registerClusterValve",
      "registerManager",
      "registerMember",
      "removeClusterListener",
      "removeManager",
      "send",
      "send",
      "send",
      "setChannel",
      "setChannelSendOptions",
      "setChannelSendOptions",
      "setChannelStartOptions",
      "setClusterDeployer",
      "setClusterName",
      "setContainer",
      "setHeartbeatBackgroundEnabled",
      "setManagerTemplate",
      "setNotifyLifecycleListenerOnFailure",
      "startInternal",
      "stopInternal",
      "unregisterClusterValve",
      "unregisterMember"
    ]
  },
  {
    "className": "org.apache.catalina.loader.WebappClassLoader",
    "sensitiveFields": [],
    "securityMethods": [
      "getClassLoadingLock"
    ]
  },
  {
    "className": "org.apache.catalina.loader.WebappClassLoaderBase",
    "sensitiveFields": [
      "JVM_THREAD_GROUP_NAMES",
      "CLASS_FILE_SUFFIX",
      "clearReferencesLogFactoryRelease",
      "clearReferencesObjectStreamClassCaches",
      "skipMemoryLeakChecksOnJvmShutdown"
    ],
    "securityMethods": [
      "addLifecycleListener",
      "addPermission",
      "addPermission",
      "addTransformer",
      "addURL",
      "binaryNameToPath",
      "checkStateForClassLoading",
      "checkStateForResourceLoading",
      "checkThreadLocalMapForLeaks",
      "checkThreadLocalsForLeaks",
      "clearCache",
      "clearReferences",
      "clearReferencesJdbc",
      "clearReferencesObjectStreamClassCaches",
      "clearReferencesRmiTargets",
      "clearReferencesStopTimerThread",
      "clearReferencesThreads",
      "copyStateWithoutTransformers",
      "destroy",
      "doDefineClass",
      "filter",
      "findClass",
      "findClassInternal",
      "findLoadedClass0",
      "findResource",
      "findResources",
      "getResource",
      "getResourceAsStream",
      "init",
      "isPackageSealed",
      "loadClass",
      "loadClass",
      "nameToPath",
      "refreshPolicy",
      "removeLifecycleListener",
      "removeTransformer",
      "setClearReferencesHttpClientKeepAliveThread",
      "setClearReferencesLogFactoryRelease",
      "setClearReferencesObjectStreamClassCaches",
      "setClearReferencesRmiTargets",
      "setClearReferencesStopThreads",
      "setClearReferencesStopTimerThreads",
      "setDelegate",
      "setJavaseClassLoader",
      "setResources",
      "setSkipMemoryLeakChecksOnJvmShutdown",
      "start",
      "stop",
      "trackLastModified"
    ]
  },
  {
    "className": "org.apache.catalina.loader.WebappLoader",
    "sensitiveFields": [
      "classpath"
    ],
    "securityMethods": [
      "addPropertyChangeListener",
      "backgroundProcess",
      "buildClassPath",
      "propertyChange",
      "removePropertyChangeListener",
      "setClassPath",
      "setContext",
      "setDelegate",
      "setLoaderClass",
      "setPermissions",
      "setReloadable",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.manager.Constants",
    "sensitiveFields": [
      "XML_DECLARATION",
      "XML_STYLE"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.manager.DummyProxySession",
    "sensitiveFields": [
      "sessionId"
    ],
    "securityMethods": [
      "access",
      "addSessionListener",
      "endAccess",
      "expire",
      "getAuthType",
      "getLastAccessedTime",
      "getLastAccessedTimeInternal",
      "getNote",
      "getThisAccessedTime",
      "getThisAccessedTimeInternal",
      "isAttributeDistributable",
      "recycle",
      "removeNote",
      "removeSessionListener",
      "setAuthType",
      "setCreationTime",
      "setId",
      "setId",
      "setManager",
      "setMaxInactiveInterval",
      "setNew",
      "setNote",
      "setPrincipal",
      "setValid",
      "tellChangedSessionId"
    ]
  },
  {
    "className": "org.apache.catalina.manager.HTMLManagerServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "sessionsListJspPath",
      "sessionDetailJspPath",
      "connectorCiphersJspPath",
      "connectorCertsJspPath",
      "connectorTrustedCertsJspPath",
      "UPLOAD_SECTION"
    ],
    "securityMethods": [
      "deployInternal",
      "displaySessionDetailPage",
      "displaySessionsListPage",
      "doGet",
      "doPost",
      "doSessions",
      "expireSessions",
      "findleaks",
      "getSessionForNameAndId",
      "getSessionsForName",
      "init",
      "invalidateSessions",
      "list",
      "reload",
      "removeSessionAttribute",
      "sessions",
      "sslConnectorCerts",
      "sslConnectorCiphers",
      "sslConnectorTrustedCerts",
      "sslReload",
      "start",
      "stop",
      "undeploy",
      "upload"
    ]
  },
  {
    "className": "org.apache.catalina.manager.JMXProxyServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "registry"
    ],
    "securityMethods": [
      "doGet",
      "getAttribute",
      "init",
      "invokeOperation",
      "invokeOperationInternal",
      "listBeans",
      "output",
      "setAttribute",
      "setAttributeInternal"
    ]
  },
  {
    "className": "org.apache.catalina.manager.JspHelper",
    "sensitiveFields": [],
    "securityMethods": [
      "getDisplayLastAccessedTimeForSession"
    ]
  },
  {
    "className": "org.apache.catalina.manager.ManagerServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "oname"
    ],
    "securityMethods": [
      "addServiced",
      "check",
      "deploy",
      "deploy",
      "deploy",
      "destroy",
      "doGet",
      "doPut",
      "expireSessions",
      "findleaks",
      "init",
      "isDeployed",
      "isServiced",
      "list",
      "printResources",
      "reload",
      "removeServiced",
      "resources",
      "save",
      "serverinfo",
      "sessions",
      "setWrapper",
      "sslConnectorCerts",
      "sslConnectorCiphers",
      "sslConnectorTrustedCerts",
      "sslReload",
      "start",
      "stop",
      "threadDump",
      "undeploy",
      "uploadWar",
      "validateContextName",
      "vmInfo",
      "writeDeployResult"
    ]
  },
  {
    "className": "org.apache.catalina.manager.StatusManagerServlet",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "destroy",
      "doGet",
      "handleNotification",
      "init"
    ]
  },
  {
    "className": "org.apache.catalina.manager.StatusTransformer",
    "sensitiveFields": [],
    "securityMethods": [
      "setContentType",
      "writeBody",
      "writeConnectorState",
      "writeContext",
      "writeDetailedState",
      "writeFooter",
      "writeHeader",
      "writeJspMonitor",
      "writeManager",
      "writeManager",
      "writeOSState",
      "writePageHeading",
      "writeProcessorState",
      "writeServerInfo",
      "writeVMState",
      "writeWrapper"
    ]
  },
  {
    "className": "org.apache.catalina.manager.host.HTMLHostManagerServlet",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "add",
      "doGet",
      "doPost",
      "list",
      "persist",
      "remove",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.manager.host.HostManagerServlet",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "add",
      "add",
      "destroy",
      "doGet",
      "getConfigBase",
      "init",
      "list",
      "persist",
      "remove",
      "setWrapper",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.mapper.Mapper",
    "sensitiveFields": [
      "defaultHostName"
    ],
    "securityMethods": [
      "addContextVersion",
      "addHost",
      "addHostAlias",
      "addWelcomeFile",
      "addWrapper",
      "addWrapper",
      "addWrappers",
      "addWrappers",
      "clearWelcomeFiles",
      "compare",
      "compareIgnoreCase",
      "exactFind",
      "exactFind",
      "exactFindIgnoreCase",
      "find",
      "find",
      "find",
      "findContextVersion",
      "findIgnoreCase",
      "findIgnoreCase",
      "internalMap",
      "internalMapExactWrapper",
      "internalMapExtensionWrapper",
      "internalMapWildcardWrapper",
      "internalMapWrapper",
      "lastSlash",
      "map",
      "map",
      "nthSlash",
      "pauseContextVersion",
      "removeContextVersion",
      "removeHost",
      "removeHostAlias",
      "removeMap",
      "removeWelcomeFile",
      "removeWrapper",
      "removeWrapper",
      "renameWildcardHost",
      "setDefaultHostName",
      "slashCount",
      "updateContextList"
    ]
  },
  {
    "className": "org.apache.catalina.mapper.MapperListener",
    "sensitiveFields": [],
    "securityMethods": [
      "addListeners",
      "containerEvent",
      "findDefaultHost",
      "lifecycleEvent",
      "prepareWrapperMappingInfo",
      "registerContext",
      "registerHost",
      "registerWrapper",
      "removeListeners",
      "startInternal",
      "stopInternal",
      "unregisterContext",
      "unregisterHost",
      "unregisterWrapper"
    ]
  },
  {
    "className": "org.apache.catalina.mapper.MappingData",
    "sensitiveFields": [
      "contextPath",
      "requestPath",
      "wrapperPath",
      "pathInfo",
      "redirectPath"
    ],
    "securityMethods": [
      "recycle"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.ConnectorMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "setAttribute"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.ContainerMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "addChild",
      "addLifecycleListener",
      "removeChild",
      "removeLifecycleListeners",
      "removeValve"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.ContextEnvironmentMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "setAttribute"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.ContextMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "findFilterDef"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.ContextResourceLinkMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "setAttribute"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.ContextResourceMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "setAttribute"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "createMBeans",
      "createMBeans",
      "createMBeans",
      "destroyMBeans",
      "lifecycleEvent"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.GroupMBean",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "addRole",
      "removeRole"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.JmxRemoteLifecycleListener",
    "sensitiveFields": [
      "rmiRegistryPortPlatform",
      "rmiRegistrySSL",
      "clientAuth",
      "authenticate",
      "passwordFile",
      "loginModuleName",
      "accessFile"
    ],
    "securityMethods": [
      "createServer",
      "destroyServer",
      "init",
      "lifecycleEvent",
      "setRmiBindAddress",
      "setRmiRegistryPortPlatform",
      "setRmiServerPortPlatform",
      "setUseLocalPorts"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.MBeanDumper",
    "sensitiveFields": [],
    "securityMethods": [
      "appendHead",
      "dumpBeans"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.MBeanFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "createDataSourceRealm",
      "createJDBCRealm",
      "createStandardContext",
      "createStandardContext",
      "createStandardHost",
      "createUserDatabaseRealm",
      "createValve",
      "getParentContainerFromChild",
      "getParentContainerFromParent",
      "getService",
      "removeConnector",
      "removeContext",
      "removeHost",
      "removeLoader",
      "removeManager",
      "removeRealm",
      "removeService",
      "removeValve",
      "setContainer"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.MBeanUtils",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "createObjectName",
      "createObjectName",
      "createObjectName",
      "createObjectName",
      "createObjectName",
      "createObjectName",
      "createObjectName",
      "createObjectName",
      "createRegistry",
      "destroyMBean",
      "destroyMBean",
      "destroyMBean",
      "destroyMBean",
      "destroyMBean",
      "destroyMBean",
      "destroyMBeanUserDatabase"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.MemoryUserDatabaseMBean",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "createGroup",
      "createRole",
      "createUser",
      "findGroup",
      "findRole",
      "findUser",
      "removeGroup",
      "removeRole",
      "removeUser"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.NamingResourcesMBean",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "addEnvironment",
      "addResource",
      "addResourceLink",
      "removeEnvironment",
      "removeResource",
      "removeResourceLink"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.RoleMBean",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.mbeans.ServiceMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "addConnector",
      "addExecutor",
      "getExecutor"
    ]
  },
  {
    "className": "org.apache.catalina.mbeans.UserMBean",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "addGroup",
      "addRole",
      "removeGroup",
      "removeRole"
    ]
  },
  {
    "className": "org.apache.catalina.realm.AuthenticatedUserRealm",
    "sensitiveFields": [],
    "securityMethods": [
      "getPassword",
      "getPrincipal"
    ]
  },
  {
    "className": "org.apache.catalina.realm.CombinedRealm",
    "sensitiveFields": [],
    "securityMethods": [
      "addRealm",
      "authenticate",
      "authenticate",
      "authenticate",
      "authenticate",
      "authenticate",
      "backgroundProcess",
      "destroyInternal",
      "getPassword",
      "getPrincipal",
      "getRealms",
      "setContainer",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.realm.DataSourceRealm",
    "sensitiveFields": [
      "dataSourceName",
      "roleNameCol",
      "userNameCol"
    ],
    "securityMethods": [
      "authenticate",
      "authenticate",
      "close",
      "credentials",
      "getPassword",
      "getPassword",
      "getPrincipal",
      "getRoles",
      "getRoles",
      "roles",
      "setDataSourceName",
      "setLocalDataSource",
      "setRoleNameCol",
      "setUserCredCol",
      "setUserNameCol",
      "setUserRoleTable",
      "setUserTable",
      "startInternal"
    ]
  },
  {
    "className": "org.apache.catalina.realm.DigestCredentialHandlerBase",
    "sensitiveFields": [
      "logInvalidStoredCredentials"
    ],
    "securityMethods": [
      "getLogInvalidStoredCredentials",
      "logInvalidStoredCredentials",
      "setAlgorithm",
      "setIterations",
      "setLogInvalidStoredCredentials",
      "setSaltLength"
    ]
  },
  {
    "className": "org.apache.catalina.realm.GenericPrincipal",
    "sensitiveFields": [
      "serialVersionUID",
      "name",
      "password"
    ],
    "securityMethods": [
      "hasRole",
      "logout",
      "setGssCredential"
    ]
  },
  {
    "className": "org.apache.catalina.realm.JAASCallbackHandler",
    "sensitiveFields": [
      "password",
      "username",
      "realmName",
      "authMethod"
    ],
    "securityMethods": [
      "handle"
    ]
  },
  {
    "className": "org.apache.catalina.realm.JAASMemoryLoginModule",
    "sensitiveFields": [
      "pathname"
    ],
    "securityMethods": [
      "initialize",
      "load",
      "login",
      "logout"
    ]
  },
  {
    "className": "org.apache.catalina.realm.JAASRealm",
    "sensitiveFields": [
      "appName",
      "configFile",
      "roleClassNames",
      "userClassNames"
    ],
    "securityMethods": [
      "authenticate",
      "authenticate",
      "authenticate",
      "createPrincipal",
      "getPassword",
      "getPrincipal",
      "parseClassNames",
      "setAppName",
      "setConfigFile",
      "setContainer",
      "setRoleClassNames",
      "setUseContextClassLoader",
      "setUserClassNames",
      "startInternal"
    ]
  },
  {
    "className": "org.apache.catalina.realm.JDBCRealm",
    "sensitiveFields": [
      "connectionName",
      "connectionPassword",
      "driverName",
      "roleNameCol",
      "userNameCol"
    ],
    "securityMethods": [
      "authenticate",
      "authenticate",
      "close",
      "credentials",
      "getPassword",
      "getPrincipal",
      "getRoles",
      "roles",
      "setConnectionName",
      "setConnectionPassword",
      "setConnectionURL",
      "setDriverName",
      "setRoleNameCol",
      "setUserCredCol",
      "setUserNameCol",
      "setUserRoleTable",
      "setUserTable",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.realm.JNDIRealm",
    "sensitiveFields": [
      "authentication",
      "connectionName",
      "connectionPassword",
      "contextFactory",
      "userPassword",
      "userRoleName",
      "roleName",
      "hostnameVerifier",
      "sslSocketFactory",
      "sslSocketFactoryClassName",
      "hostNameVerifierClassName"
    ],
    "securityMethods": [
      "addAttributeValues",
      "authenticate",
      "authenticate",
      "close",
      "constructInstance",
      "createSSLContextFactoryFromProtocol",
      "createSSLSocketFactoryFromClassName",
      "getAttributeValue",
      "getAuthentication",
      "getHostnameVerifier",
      "getPassword",
      "getPrincipal",
      "getPrincipal",
      "getPrincipal",
      "getSSLSocketFactory",
      "getUser",
      "getUser",
      "getUser",
      "getUserByPattern",
      "getUserByPattern",
      "getUserBySearch",
      "release",
      "restoreEnvironmentParameter",
      "setAdCompat",
      "setAlternateURL",
      "setAuthentication",
      "setCipherSuites",
      "setCommonRole",
      "setConnectionName",
      "setConnectionPassword",
      "setConnectionTimeout",
      "setConnectionURL",
      "setContextFactory",
      "setDerefAliases",
      "setHostnameVerifierClassName",
      "setProtocol",
      "setReadTimeout",
      "setReferrals",
      "setRoleBase",
      "setRoleName",
      "setRoleNested",
      "setRoleSearch",
      "setRoleSearchAsUser",
      "setRoleSubtree",
      "setSizeLimit",
      "setSpnegoDelegationQop",
      "setSslProtocol",
      "setSslSocketFactoryClassName",
      "setTimeLimit",
      "setUseDelegatedCredential",
      "setUseStartTls",
      "setUserBase",
      "setUserPassword",
      "setUserPattern",
      "setUserRoleAttribute",
      "setUserRoleName",
      "setUserSearch",
      "setUserSearchAsUser",
      "setUserSubtree",
      "startInternal",
      "stopInternal",
      "userCredentialsAdd",
      "userCredentialsRemove"
    ]
  },
  {
    "className": "org.apache.catalina.realm.LockOutRealm",
    "sensitiveFields": [],
    "securityMethods": [
      "authenticate",
      "authenticate",
      "authenticate",
      "authenticate",
      "filterLockedAccounts",
      "isLocked",
      "registerAuthFailure",
      "registerAuthSuccess",
      "setCacheRemovalWarningTime",
      "setCacheSize",
      "setFailureCount",
      "setLockOutTime",
      "startInternal",
      "unlock"
    ]
  },
  {
    "className": "org.apache.catalina.realm.MemoryRealm",
    "sensitiveFields": [
      "pathname"
    ],
    "securityMethods": [
      "addUser",
      "authenticate",
      "getPassword",
      "getPrincipal",
      "setPathname",
      "startInternal"
    ]
  },
  {
    "className": "org.apache.catalina.realm.MemoryRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.realm.MemoryUserRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.catalina.realm.MessageDigestCredentialHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "setAlgorithm",
      "setEncoding"
    ]
  },
  {
    "className": "org.apache.catalina.realm.NestedCredentialHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "addCredentialHandler"
    ]
  },
  {
    "className": "org.apache.catalina.realm.NullRealm",
    "sensitiveFields": [],
    "securityMethods": [
      "getPassword",
      "getPrincipal"
    ]
  },
  {
    "className": "org.apache.catalina.realm.RealmBase",
    "sensitiveFields": [
      "validate",
      "x509UsernameRetrieverClassName",
      "x509UsernameRetriever",
      "realmPath"
    ],
    "securityMethods": [
      "addPropertyChangeListener",
      "authenticate",
      "authenticate",
      "authenticate",
      "authenticate",
      "authenticate",
      "backgroundProcess",
      "createUsernameRetriever",
      "getDigest",
      "getPassword",
      "getPrincipal",
      "getPrincipal",
      "getValidate",
      "hasRole",
      "hasRoleInternal",
      "initInternal",
      "main",
      "removePropertyChangeListener",
      "setAllRolesMode",
      "setContainer",
      "setCredentialHandler",
      "setRealmPath",
      "setStripRealmForGss",
      "setTransportGuaranteeRedirectStatus",
      "setValidate",
      "setX509UsernameRetrieverClassName",
      "startInternal",
      "stopInternal",
      "usage"
    ]
  },
  {
    "className": "org.apache.catalina.realm.SecretKeyCredentialHandler",
    "sensitiveFields": [
      "secretKeyFactory"
    ],
    "securityMethods": [
      "setAlgorithm",
      "setKeyLength"
    ]
  },
  {
    "className": "org.apache.catalina.realm.UserDatabaseRealm",
    "sensitiveFields": [
      "resourceName"
    ],
    "securityMethods": [
      "getPassword",
      "getPrincipal",
      "hasRole",
      "setResourceName",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.security.DeployXmlPermission",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.security.SecurityClassLoad",
    "sensitiveFields": [],
    "securityMethods": [
      "loadConnectorPackage",
      "loadCorePackage",
      "loadCoyotePackage",
      "loadJavaxPackage",
      "loadLoaderPackage",
      "loadRealmPackage",
      "loadServletsPackage",
      "loadSessionPackage",
      "loadTomcatPackage",
      "loadUtilPackage",
      "securityClassLoad",
      "securityClassLoad"
    ]
  },
  {
    "className": "org.apache.catalina.security.SecurityConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "setPackageAccess",
      "setPackageDefinition",
      "setSecurityProperty"
    ]
  },
  {
    "className": "org.apache.catalina.security.SecurityListener",
    "sensitiveFields": [
      "UMASK_PROPERTY_NAME"
    ],
    "securityMethods": [
      "checkOsUser",
      "checkUmask",
      "doChecks",
      "lifecycleEvent",
      "setCheckedOsUsers",
      "setMinimumUmask"
    ]
  },
  {
    "className": "org.apache.catalina.security.SecurityUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "createMethodAndCacheIt",
      "doAsPrivilege",
      "doAsPrivilege",
      "doAsPrivilege",
      "doAsPrivilege",
      "doAsPrivilege",
      "doAsPrivilege",
      "execute",
      "findMethod",
      "remove"
    ]
  },
  {
    "className": "org.apache.catalina.servlets.CGIServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "cgiPathPrefix",
      "expandFileLock"
    ],
    "securityMethods": [
      "doGet",
      "doPost",
      "init",
      "printServletEnvironment"
    ]
  },
  {
    "className": "org.apache.catalina.servlets.DefaultServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "factory",
      "localXsltFile",
      "contextXsltFile",
      "globalXsltFile",
      "readmeFile",
      "fileEncoding",
      "fileEncodingCharset",
      "sendfileSize"
    ],
    "securityMethods": [
      "copy",
      "copy",
      "copy",
      "copy",
      "destroy",
      "doDelete",
      "doDirectoryRedirect",
      "doGet",
      "doHead",
      "doOptions",
      "doPost",
      "doPut",
      "executePartialPut",
      "findXsltSource",
      "getAvailablePrecompressedResources",
      "getReadme",
      "getRelativePath",
      "init",
      "pathEndsWithCompressedExtension",
      "render",
      "renderHtml",
      "renderXml",
      "rewriteUrl",
      "sendNotAllowed",
      "serveResource",
      "service",
      "skip",
      "validateGlobalXsltFile",
      "validateGlobalXsltFile"
    ]
  },
  {
    "className": "org.apache.catalina.servlets.WebdavServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "URL_ENCODER_XML",
      "FIND_PROPERTY_NAMES",
      "DEFAULT_NAMESPACE",
      "secret",
      "allowSpecialPaths"
    ],
    "securityMethods": [
      "deleteCollection",
      "deleteResource",
      "doCopy",
      "doDelete",
      "doLock",
      "doMkcol",
      "doMove",
      "doOptions",
      "doPropfind",
      "doProppatch",
      "doPut",
      "doUnlock",
      "generateLockDiscovery",
      "generatePropFindResponse",
      "getRelativePath",
      "init",
      "isLocked",
      "isSpecialPath",
      "parseLockNullProperties",
      "parseProperties",
      "rewriteUrl",
      "sendReport",
      "service"
    ]
  },
  {
    "className": "org.apache.catalina.servlets.WebdavStatus",
    "sensitiveFields": [
      "SC_UNAUTHORIZED",
      "SC_FORBIDDEN"
    ],
    "securityMethods": [
      "addStatusCodeMap"
    ]
  },
  {
    "className": "org.apache.catalina.session.Constants",
    "sensitiveFields": [
      "excludedAttributeNames"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.session.FileStore",
    "sensitiveFields": [
      "FILE_EXT",
      "directory",
      "directoryFile",
      "storeName",
      "threadName"
    ],
    "securityMethods": [
      "clear",
      "directory",
      "file",
      "load",
      "remove",
      "save",
      "setDirectory"
    ]
  },
  {
    "className": "org.apache.catalina.session.JDBCStore",
    "sensitiveFields": [
      "name",
      "storeName",
      "threadName",
      "connectionName",
      "connectionPassword",
      "driverName",
      "dataSourceName",
      "sessionIdCol",
      "sessionValidCol"
    ],
    "securityMethods": [
      "clear",
      "close",
      "getSessionLastAccessedCol",
      "load",
      "release",
      "remove",
      "remove",
      "save",
      "setConnectionName",
      "setConnectionPassword",
      "setConnectionURL",
      "setDataSourceName",
      "setDriverName",
      "setLocalDataSource",
      "setSessionAppCol",
      "setSessionDataCol",
      "setSessionIdCol",
      "setSessionLastAccessedCol",
      "setSessionMaxInactiveCol",
      "setSessionTable",
      "setSessionValidCol",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.session.ManagerBase",
    "sensitiveFields": [
      "name",
      "secureRandomClass",
      "secureRandomProvider",
      "sessionIdGenerator",
      "sessionIdGeneratorClass",
      "sessionAttributeNamePattern",
      "sessionAttributeValueClassNamePattern"
    ],
    "securityMethods": [
      "add",
      "addPropertyChangeListener",
      "backgroundProcess",
      "changeSessionId",
      "changeSessionId",
      "changeSessionId",
      "createSession",
      "expireSession",
      "findSession",
      "getCreationTime",
      "getCreationTimestamp",
      "getLastAccessedTime",
      "getLastAccessedTimestamp",
      "getSession",
      "getSessionAttribute",
      "getSessionIdGenerator",
      "getThisAccessedTime",
      "getThisAccessedTimestamp",
      "initInternal",
      "processExpires",
      "remove",
      "remove",
      "removePropertyChangeListener",
      "setContext",
      "setDuplicates",
      "setExpiredSessions",
      "setMaxActive",
      "setMaxActiveSessions",
      "setNotifyAttributeListenerOnUnchangedValue",
      "setNotifyBindingListenerOnUnchangedValue",
      "setProcessExpiresFrequency",
      "setProcessingTime",
      "setSecureRandomAlgorithm",
      "setSecureRandomClass",
      "setSecureRandomProvider",
      "setSessionAttributeNameFilter",
      "setSessionAttributeValueClassNameFilter",
      "setSessionCounter",
      "setSessionIdGenerator",
      "setSessionMaxAliveTime",
      "setWarnOnSessionAttributeFilterFailure",
      "startInternal",
      "stopInternal",
      "updateSessionMaxAliveTime",
      "willAttributeDistribute"
    ]
  },
  {
    "className": "org.apache.catalina.session.PersistentManager",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.session.PersistentManagerBase",
    "sensitiveFields": [
      "name",
      "maxIdleBackup",
      "minIdleSwap",
      "maxIdleSwap"
    ],
    "securityMethods": [
      "clearStore",
      "findSession",
      "isLoaded",
      "load",
      "loadSessionFromStore",
      "processExpires",
      "processMaxActiveSwaps",
      "processMaxIdleBackups",
      "processMaxIdleSwaps",
      "processPersistenceChecks",
      "reactivateLoadedSession",
      "remove",
      "removeSession",
      "removeSuper",
      "securedStoreLoad",
      "setMaxIdleBackup",
      "setMaxIdleSwap",
      "setMinIdleSwap",
      "setSaveOnRestart",
      "setStore",
      "startInternal",
      "stopInternal",
      "swapIn",
      "swapOut",
      "unload",
      "writeSession"
    ]
  },
  {
    "className": "org.apache.catalina.session.StandardManager",
    "sensitiveFields": [
      "name",
      "pathname"
    ],
    "securityMethods": [
      "doLoad",
      "doUnload",
      "file",
      "load",
      "setPathname",
      "startInternal",
      "stopInternal",
      "unload"
    ]
  },
  {
    "className": "org.apache.catalina.session.StandardSession",
    "sensitiveFields": [
      "serialVersionUID",
      "authType",
      "id",
      "isValid"
    ],
    "securityMethods": [
      "access",
      "activate",
      "addSessionListener",
      "doReadObject",
      "doWriteObject",
      "endAccess",
      "exclude",
      "expire",
      "expire",
      "fireSessionEvent",
      "getAttribute",
      "getAuthType",
      "getLastAccessedTime",
      "getLastAccessedTimeInternal",
      "getNote",
      "getThisAccessedTime",
      "getThisAccessedTimeInternal",
      "getValue",
      "invalidate",
      "isAttributeDistributable",
      "passivate",
      "putValue",
      "readObjectData",
      "recycle",
      "removeAttribute",
      "removeAttribute",
      "removeAttributeInternal",
      "removeNote",
      "removeSessionListener",
      "removeValue",
      "setAttribute",
      "setAttribute",
      "setAuthType",
      "setCreationTime",
      "setId",
      "setId",
      "setManager",
      "setMaxInactiveInterval",
      "setNew",
      "setNote",
      "setPrincipal",
      "setValid",
      "tellChangedSessionId",
      "tellNew",
      "writeObjectData"
    ]
  },
  {
    "className": "org.apache.catalina.session.StandardSessionContext",
    "sensitiveFields": [],
    "securityMethods": [
      "getSession"
    ]
  },
  {
    "className": "org.apache.catalina.session.StandardSessionFacade",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttribute",
      "getLastAccessedTime",
      "getValue",
      "invalidate",
      "putValue",
      "removeAttribute",
      "removeValue",
      "setAttribute",
      "setMaxInactiveInterval"
    ]
  },
  {
    "className": "org.apache.catalina.session.StoreBase",
    "sensitiveFields": [
      "storeName"
    ],
    "securityMethods": [
      "addPropertyChangeListener",
      "destroyInternal",
      "initInternal",
      "processExpires",
      "removePropertyChangeListener",
      "setManager",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.session.TooManyActiveSessionsException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.ssi.ByteArrayServletOutputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "setWriteListener",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.ExpressionParseTree",
    "sensitiveFields": [],
    "securityMethods": [
      "parseExpression",
      "pushOpp",
      "resolveGroup"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.ExpressionTokenizer",
    "sensitiveFields": [
      "TOKEN_STRING",
      "TOKEN_AND",
      "TOKEN_OR",
      "TOKEN_NOT",
      "TOKEN_EQ",
      "TOKEN_NOT_EQ",
      "TOKEN_RBRACE",
      "TOKEN_LBRACE",
      "TOKEN_GE",
      "TOKEN_LE",
      "TOKEN_GT",
      "TOKEN_LT",
      "TOKEN_END",
      "tokenVal"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.ssi.ResponseIncludeWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "addDateHeader",
      "addHeader",
      "flushOutputStreamOrWriter",
      "setContentType",
      "setDateHeader",
      "setHeader"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSICommand",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIConditional",
    "sensitiveFields": [],
    "securityMethods": [
      "evaluateArguments",
      "getExpression",
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIEcho",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIExec",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIExternalResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "addVariableNames",
      "getFileLastModified",
      "getFileSize",
      "getFileText",
      "getVariableValue",
      "log",
      "setVariableValue"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIFilter",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "doFilter",
      "init"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIFlastmod",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIFsize",
    "sensitiveFields": [],
    "securityMethods": [
      "process",
      "repeat"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIInclude",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIMediator",
    "sensitiveFields": [
      "className"
    ],
    "securityMethods": [
      "clearMatchGroups",
      "getFileLastModified",
      "getFileSize",
      "getFileText",
      "getVariableValue",
      "getVariableValue",
      "isNameReserved",
      "log",
      "log",
      "populateMatchGroups",
      "setConfigErrMsg",
      "setConfigSizeFmt",
      "setConfigTimeFmt",
      "setConfigTimeFmt",
      "setDateVariables",
      "setVariableValue"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIPrintenv",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIProcessor",
    "sensitiveFields": [],
    "securityMethods": [
      "addBuiltinCommands",
      "addCommand"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIServlet",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "doGet",
      "doPost",
      "init",
      "processSSI",
      "requestHandler"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIServletExternalResolver",
    "sensitiveFields": [
      "VARIABLE_NAMES"
    ],
    "securityMethods": [
      "addVariableNames",
      "getAbsolutePath",
      "getCGIVariable",
      "getFileLastModified",
      "getFileSize",
      "getFileText",
      "getPathWithoutContext",
      "getPathWithoutFileName",
      "getReqAttributeIgnoreCase",
      "getServletContextAndPath",
      "getServletContextAndPathFromNonVirtualPath",
      "getServletContextAndPathFromVirtualPath",
      "getURLConnection",
      "getVariableValue",
      "isNameReserved",
      "log",
      "setVariableValue"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSISet",
    "sensitiveFields": [],
    "securityMethods": [
      "process"
    ]
  },
  {
    "className": "org.apache.catalina.ssi.SSIStopProcessingException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.startup.Bootstrap",
    "sensitiveFields": [
      "catalinaBaseFile",
      "catalinaHomeFile",
      "PATH_PATTERN"
    ],
    "securityMethods": [
      "createClassLoader",
      "destroy",
      "getCatalinaBaseFile",
      "getCatalinaHomeFile",
      "handleThrowable",
      "init",
      "init",
      "initClassLoaders",
      "load",
      "main",
      "setAwait",
      "start",
      "stop",
      "stopServer",
      "stopServer"
    ]
  },
  {
    "className": "org.apache.catalina.startup.Catalina",
    "sensitiveFields": [
      "configFile"
    ],
    "securityMethods": [
      "addClusterRuleSet",
      "await",
      "configFile",
      "initDirs",
      "initNaming",
      "initStreams",
      "load",
      "load",
      "setAwait",
      "setConfigFile",
      "setParentClassLoader",
      "setSecurityProtection",
      "setServer",
      "setUseNaming",
      "setUseShutdownHook",
      "start",
      "stop",
      "stopServer",
      "stopServer",
      "usage"
    ]
  },
  {
    "className": "org.apache.catalina.startup.CatalinaProperties",
    "sensitiveFields": [],
    "securityMethods": [
      "getProperty",
      "handleThrowable",
      "loadProperties"
    ]
  },
  {
    "className": "org.apache.catalina.startup.CertificateCreateRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin",
      "end"
    ]
  },
  {
    "className": "org.apache.catalina.startup.ClassLoaderFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "buildClassLoaderUrl",
      "validateFile"
    ]
  },
  {
    "className": "org.apache.catalina.startup.ConnectorCreateRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin",
      "end",
      "setExecutor",
      "setSSLImplementationName"
    ]
  },
  {
    "className": "org.apache.catalina.startup.Constants",
    "sensitiveFields": [
      "ApplicationContextXml",
      "ApplicationWebXml",
      "TomcatWebXml",
      "DefaultContextXml",
      "DefaultWebXml",
      "HostContextXml",
      "HostWebXml",
      "NoDefaultWebXml"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.startup.ContextConfig",
    "sensitiveFields": [
      "authenticators",
      "hostWebXmlCache",
      "customAuthenticators",
      "defaultWebXml"
    ],
    "securityMethods": [
      "antiLocking",
      "applicationAnnotationsConfig",
      "authenticatorConfig",
      "beforeStart",
      "checkHandlesTypes",
      "classHierarchyToString",
      "configureContext",
      "configureStart",
      "configureStop",
      "contextConfig",
      "convertJsp",
      "convertJsps",
      "createWebXml",
      "destroy",
      "fixDocBase",
      "getDefaultWebXmlFragment",
      "getHostConfigBase",
      "getSCIsForClass",
      "getTomcatWebXmlFragment",
      "getWebXmlSource",
      "init",
      "lifecycleEvent",
      "populateJavaClassCache",
      "populateJavaClassCache",
      "populateSCIsForCacheEntry",
      "processAnnotationWebFilter",
      "processAnnotationWebServlet",
      "processAnnotations",
      "processAnnotationsFile",
      "processAnnotationsJar",
      "processAnnotationsStream",
      "processAnnotationsUrl",
      "processAnnotationsWebResource",
      "processContextConfig",
      "processJarsForWebFragments",
      "processResourceJARs",
      "processServletContainerInitializers",
      "setCustomAuthenticators",
      "setDefaultWebXml",
      "validateSecurityRoles",
      "webConfig"
    ]
  },
  {
    "className": "org.apache.catalina.startup.ContextRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.startup.CopyParentClassLoaderRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.catalina.startup.CredentialHandlerRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances",
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.startup.EngineConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "lifecycleEvent",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.startup.EngineRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.startup.ExpandWar",
    "sensitiveFields": [],
    "securityMethods": [
      "expand",
      "expand",
      "validate"
    ]
  },
  {
    "className": "org.apache.catalina.startup.FailedContext",
    "sensitiveFields": [
      "configFile",
      "name",
      "path"
    ],
    "securityMethods": [
      "addApplicationListener",
      "addApplicationParameter",
      "addChild",
      "addConstraint",
      "addContainerListener",
      "addErrorPage",
      "addFilterDef",
      "addFilterMap",
      "addFilterMapBefore",
      "addLocaleEncodingMappingParameter",
      "addMimeMapping",
      "addParameter",
      "addPostConstructMethod",
      "addPreDestroyMethod",
      "addPropertyChangeListener",
      "addRoleMapping",
      "addSecurityRole",
      "addServletContainerInitializer",
      "addServletMappingDecoded",
      "addValve",
      "addWatchedResource",
      "addWelcomeFile",
      "addWrapperLifecycle",
      "addWrapperListener",
      "backgroundProcess",
      "findChild",
      "findFilterDef",
      "findParameter",
      "findWelcomeFile",
      "fireContainerEvent",
      "getAccessLog",
      "getAuthenticator",
      "getCatalinaBase",
      "getCatalinaHome",
      "getLoginConfig",
      "getPreemptiveAuthentication",
      "getRealPath",
      "getValidateClientProvidedNewSessionId",
      "isResourceOnlyServlet",
      "logAccess",
      "reload",
      "removeApplicationListener",
      "removeApplicationParameter",
      "removeChild",
      "removeConstraint",
      "removeContainerListener",
      "removeErrorPage",
      "removeFilterDef",
      "removeFilterMap",
      "removeMimeMapping",
      "removeParameter",
      "removePostConstructMethod",
      "removePreDestroyMethod",
      "removePropertyChangeListener",
      "removeRoleMapping",
      "removeSecurityRole",
      "removeServletMapping",
      "removeWatchedResource",
      "removeWelcomeFile",
      "removeWrapperLifecycle",
      "removeWrapperListener",
      "setAddWebinfClassesResources",
      "setAllowCasualMultipartParsing",
      "setAllowMultipleLeadingForwardSlashInPath",
      "setAltDDName",
      "setApplicationEventListeners",
      "setApplicationLifecycleListeners",
      "setBackgroundProcessorDelay",
      "setCluster",
      "setConfigFile",
      "setConfigured",
      "setContainerSciFilter",
      "setCookieProcessor",
      "setCookies",
      "setCrossContext",
      "setDenyUncoveredHttpMethods",
      "setDispatchersUseEncodedPaths",
      "setDisplayName",
      "setDistributable",
      "setDocBase",
      "setEffectiveMajorVersion",
      "setEffectiveMinorVersion",
      "setFireRequestListenersOnForwards",
      "setIgnoreAnnotations",
      "setInstanceManager",
      "setJarScanner",
      "setJspConfigDescriptor",
      "setLoader",
      "setLogEffectiveWebXml",
      "setLoginConfig",
      "setManager",
      "setMapperContextRootRedirectEnabled",
      "setMapperDirectoryRedirectEnabled",
      "setName",
      "setNamingResources",
      "setOverride",
      "setParent",
      "setParentClassLoader",
      "setPath",
      "setPreemptiveAuthentication",
      "setPrivileged",
      "setPublicId",
      "setRealm",
      "setReloadable",
      "setRequestCharacterEncoding",
      "setResourceOnlyServlets",
      "setResources",
      "setResponseCharacterEncoding",
      "setSendRedirectBody",
      "setSessionCookieDomain",
      "setSessionCookieName",
      "setSessionCookiePath",
      "setSessionCookiePathUsesTrailingSlash",
      "setSessionTimeout",
      "setStartStopThreads",
      "setSwallowAbortedUploads",
      "setSwallowOutput",
      "setThreadBindingListener",
      "setTldValidation",
      "setUseHttpOnly",
      "setUseRelativeRedirects",
      "setValidateClientProvidedNewSessionId",
      "setWebappVersion",
      "setWrapperClass",
      "setXmlBlockExternal",
      "setXmlNamespaceAware",
      "setXmlValidation",
      "startInternal",
      "stopInternal",
      "unbind"
    ]
  },
  {
    "className": "org.apache.catalina.startup.HomesUserDatabase",
    "sensitiveFields": [],
    "securityMethods": [
      "init",
      "setUserConfig"
    ]
  },
  {
    "className": "org.apache.catalina.startup.HostConfig",
    "sensitiveFields": [
      "FILE_MODIFICATION_RESOLUTION_MS",
      "oname",
      "deployXML",
      "copyXML",
      "invalidWars"
    ],
    "securityMethods": [
      "addGlobalRedeployResources",
      "addServiced",
      "addWatchedResources",
      "beforeStart",
      "check",
      "check",
      "checkResources",
      "checkUndeploy",
      "createDigester",
      "deleteRedeployResources",
      "deployApps",
      "deployApps",
      "deployDescriptor",
      "deployDescriptors",
      "deployDirectories",
      "deployDirectory",
      "deployWAR",
      "deployWARs",
      "deploymentExists",
      "filterAppPaths",
      "getDeploymentTime",
      "isDeployed",
      "isServiced",
      "lifecycleEvent",
      "manageApp",
      "reload",
      "removeServiced",
      "returnCanonicalPath",
      "setContextClass",
      "setCopyXML",
      "setDeployXML",
      "setUnpackWARs",
      "start",
      "stop",
      "undeploy",
      "unmanageApp",
      "validateContextPath"
    ]
  },
  {
    "className": "org.apache.catalina.startup.HostRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.startup.LifecycleListenerRule",
    "sensitiveFields": [
      "attributeName"
    ],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.catalina.startup.NamingRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.startup.PasswdUserDatabase",
    "sensitiveFields": [
      "PASSWORD_FILE"
    ],
    "securityMethods": [
      "init",
      "setUserConfig"
    ]
  },
  {
    "className": "org.apache.catalina.startup.RealmRuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances",
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.catalina.startup.SetAllPropertiesRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.catalina.startup.SetContextPropertiesRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.catalina.startup.SetNextNamingRule",
    "sensitiveFields": [
      "methodName"
    ],
    "securityMethods": [
      "end"
    ]
  },
  {
    "className": "org.apache.catalina.startup.SetParentClassLoaderRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.catalina.startup.Tomcat",
    "sensitiveFields": [
      "hostname"
    ],
    "securityMethods": [
      "addContext",
      "addContext",
      "addContext",
      "addRole",
      "addServlet",
      "addServlet",
      "addServlet",
      "addServlet",
      "addUser",
      "addWebapp",
      "addWebapp",
      "addWebapp",
      "destroy",
      "enableNaming",
      "getLoggerName",
      "getWebappConfigFile",
      "getWebappConfigFileFromDirectory",
      "getWebappConfigFileFromJar",
      "init",
      "initBaseDir",
      "initWebappDefaults",
      "initWebappDefaults",
      "setBaseDir",
      "setConnector",
      "setHost",
      "setHostname",
      "setPort",
      "setSilent",
      "silence",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.startup.Tool",
    "sensitiveFields": [],
    "securityMethods": [
      "main",
      "usage"
    ]
  },
  {
    "className": "org.apache.catalina.startup.UserConfig",
    "sensitiveFields": [
      "directoryName"
    ],
    "securityMethods": [
      "deploy",
      "deploy",
      "lifecycleEvent",
      "setAllow",
      "setConfigClass",
      "setContextClass",
      "setDeny",
      "setDirectoryName",
      "setHomeBase",
      "setUserClass",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.startup.UserDatabase",
    "sensitiveFields": [],
    "securityMethods": [
      "setUserConfig"
    ]
  },
  {
    "className": "org.apache.catalina.startup.VersionLoggerListener",
    "sensitiveFields": [],
    "securityMethods": [
      "lifecycleEvent",
      "log",
      "setLogArgs",
      "setLogEnv",
      "setLogProps"
    ]
  },
  {
    "className": "org.apache.catalina.startup.WebAnnotationSet",
    "sensitiveFields": [
      "MAPPED_NAME_PROPERTY"
    ],
    "securityMethods": [
      "addResource",
      "addResource",
      "getName",
      "loadApplicationAnnotations",
      "loadApplicationFilterAnnotations",
      "loadApplicationListenerAnnotations",
      "loadApplicationServletAnnotations",
      "loadClassAnnotation",
      "loadFieldsAnnotation",
      "loadMethodsAnnotation"
    ]
  },
  {
    "className": "org.apache.catalina.startup.WebappServiceLoader",
    "sensitiveFields": [],
    "securityMethods": [
      "parseConfigFile"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.CatalinaClusterSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.ChannelSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.ConnectorSF",
    "sensitiveFields": [],
    "securityMethods": [
      "printOpenTag",
      "printTag",
      "storeChildren",
      "storeConnectorAttributes"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.ConnectorStoreAppender",
    "sensitiveFields": [],
    "securityMethods": [
      "getCatalinaBase",
      "getJkHomeBase",
      "isPrintValue",
      "printAttributes",
      "printOpenTag",
      "printTag",
      "printValue",
      "storeConnectorAttributes"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.CredentialHandlerSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store",
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.GlobalNamingResourcesSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.IStoreConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "getRegistry",
      "setRegistry",
      "setServer",
      "store",
      "store",
      "store",
      "store",
      "storeConfig"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.IStoreFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getRegistry",
      "setRegistry",
      "setStoreAppender",
      "store",
      "storeXMLHead"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.InterceptorSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store",
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.JarScannerSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.LoaderSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.ManagerSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store",
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.NamingResourcesSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store",
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.OpenSSLConfSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.PersistentManagerSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.RealmSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store",
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.SSLHostConfigSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.SenderSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StandardContextSF",
    "sensitiveFields": [],
    "securityMethods": [
      "configBase",
      "getConfigFileWriter",
      "store",
      "storeChildren",
      "storeContextSeparate",
      "storeWithBackup"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StandardEngineSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StandardHostSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StandardServerSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store",
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StandardServiceSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreAppender",
    "sensitiveFields": [],
    "securityMethods": [
      "isPrintValue",
      "printAttribute",
      "printAttributes",
      "printAttributes",
      "printCloseTag",
      "printIndent",
      "printOpenTag",
      "printTag",
      "printTagArray",
      "printTagContent",
      "printTagValueArray",
      "printValue"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreConfig",
    "sensitiveFields": [
      "serverFilename",
      "registry"
    ],
    "securityMethods": [
      "getRegistry",
      "setRegistry",
      "setServer",
      "setServerFilename",
      "store",
      "store",
      "store",
      "store",
      "storeConfig",
      "storeContext",
      "storeServer"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreConfigLifecycleListener",
    "sensitiveFields": [
      "registry",
      "storeRegistry",
      "oname"
    ],
    "securityMethods": [
      "createMBean",
      "lifecycleEvent",
      "setStoreConfig",
      "setStoreConfigClass",
      "setStoreRegistry"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreContextAppender",
    "sensitiveFields": [],
    "securityMethods": [
      "getAppBase",
      "getDocBase",
      "isPrintValue",
      "printAttribute"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreDescription",
    "sensitiveFields": [
      "id",
      "storeFactoryClass",
      "storeFactory"
    ],
    "securityMethods": [
      "addTransientAttribute",
      "addTransientChild",
      "getStoreFactory",
      "isTransientChild",
      "removeTransientAttribute",
      "removeTransientChild",
      "setAttributes",
      "setBackup",
      "setChildren",
      "setDefault",
      "setExternalAllowed",
      "setExternalOnly",
      "setId",
      "setStandard",
      "setStoreFactory",
      "setStoreFactoryClass",
      "setStoreSeparate",
      "setStoreWriterClass",
      "setTag",
      "setTagClass",
      "setTransientAttributes",
      "setTransientChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreFactoryBase",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "getRegistry",
      "setRegistry",
      "setStoreAppender",
      "store",
      "storeChildren",
      "storeElement",
      "storeElementArray",
      "storeXMLHead"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreFactoryRule",
    "sensitiveFields": [
      "attributeName",
      "appenderAttributeName",
      "storeFactoryClass"
    ],
    "securityMethods": [
      "begin",
      "newInstance"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreFileMover",
    "sensitiveFields": [
      "filename",
      "basename"
    ],
    "securityMethods": [
      "getConfigNew",
      "getConfigOld",
      "getConfigSave",
      "init",
      "move",
      "setBasename",
      "setEncoding",
      "setFilename"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreLoader",
    "sensitiveFields": [
      "registry",
      "registryResource"
    ],
    "securityMethods": [
      "getRegistry",
      "load",
      "load",
      "serverFile",
      "setRegistry"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.StoreRegistry",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "findDescription",
      "findStoreFactory",
      "findStoreFactory",
      "registerDescription",
      "setEncoding",
      "setName",
      "setVersion"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.WatchedResourceSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.WebResourceRootSF",
    "sensitiveFields": [],
    "securityMethods": [
      "storeChildren"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.WrapperLifecycleSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store"
    ]
  },
  {
    "className": "org.apache.catalina.storeconfig.WrapperListenerSF",
    "sensitiveFields": [],
    "securityMethods": [
      "store"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ByteMessage",
    "sensitiveFields": [],
    "securityMethods": [
      "readExternal",
      "setMessage",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.Channel",
    "sensitiveFields": [],
    "securityMethods": [
      "addChannelListener",
      "addInterceptor",
      "addMembershipListener",
      "heartbeat",
      "removeChannelListener",
      "removeMembershipListener",
      "send",
      "send",
      "setHeartbeat",
      "setName",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ChannelException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.tribes.ChannelInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "fireInterceptorEvent",
      "heartbeat",
      "messageReceived",
      "sendMessage",
      "setChannel",
      "setNext",
      "setOptionFlag",
      "setPrevious",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ChannelListener",
    "sensitiveFields": [],
    "securityMethods": [
      "messageReceived"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ChannelMessage",
    "sensitiveFields": [],
    "securityMethods": [
      "setAddress",
      "setMessage",
      "setOptions",
      "setTimestamp"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ChannelReceiver",
    "sensitiveFields": [],
    "securityMethods": [
      "setChannel",
      "setMessageListener",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ChannelSender",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "heartbeat",
      "remove",
      "sendMessage",
      "setChannel",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ErrorHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "handleCompletion",
      "handleError"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.Heartbeat",
    "sensitiveFields": [],
    "securityMethods": [
      "heartbeat"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.JmxChannel",
    "sensitiveFields": [],
    "securityMethods": [
      "setJmxDomain",
      "setJmxEnabled",
      "setJmxPrefix"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.ManagedChannel",
    "sensitiveFields": [],
    "securityMethods": [
      "setChannelReceiver",
      "setChannelSender",
      "setMembershipService"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.Member",
    "sensitiveFields": [],
    "securityMethods": [
      "setCommand",
      "setLocal",
      "setMemberAliveTime",
      "setPayload"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.MembershipListener",
    "sensitiveFields": [],
    "securityMethods": [
      "memberAdded",
      "memberDisappeared"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.MembershipProvider",
    "sensitiveFields": [],
    "securityMethods": [
      "init",
      "setMembershipListener",
      "start"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.MembershipService",
    "sensitiveFields": [],
    "securityMethods": [
      "broadcast",
      "findMemberByName",
      "getMembershipProvider",
      "removeMembershipListener",
      "setChannel",
      "setDomain",
      "setLocalMemberProperties",
      "setMembershipListener",
      "setPayload",
      "setProperties",
      "start",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.MessageListener",
    "sensitiveFields": [],
    "securityMethods": [
      "messageReceived"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.RemoteProcessException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.tribes.UniqueId",
    "sensitiveFields": [
      "serialVersionUID",
      "id"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.tribes.group.AbsoluteOrder",
    "sensitiveFields": [],
    "securityMethods": [
      "absoluteOrder",
      "absoluteOrder"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.ChannelCoordinator",
    "sensitiveFields": [],
    "securityMethods": [
      "heartbeat",
      "internalStart",
      "internalStop",
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "sendMessage",
      "setClusterReceiver",
      "setClusterSender",
      "setMembershipService",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.ChannelInterceptorBase",
    "sensitiveFields": [
      "oname"
    ],
    "securityMethods": [
      "fireInterceptorEvent",
      "heartbeat",
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "sendMessage",
      "setChannel",
      "setNext",
      "setOptionFlag",
      "setPrevious",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.ExtendedRpcCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "replyFailed",
      "replySucceeded"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.GroupChannel",
    "sensitiveFields": [
      "name",
      "oname"
    ],
    "securityMethods": [
      "addChannelListener",
      "addInterceptor",
      "addMembershipListener",
      "checkOptionFlags",
      "heartbeat",
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "postDeregister",
      "postRegister",
      "preDeregister",
      "preRegister",
      "removeChannelListener",
      "removeMembershipListener",
      "send",
      "send",
      "sendNoRpcChannelReply",
      "setChannelReceiver",
      "setChannelSender",
      "setHeartbeat",
      "setHeartbeatSleeptime",
      "setJmxDomain",
      "setJmxEnabled",
      "setJmxPrefix",
      "setMembershipService",
      "setName",
      "setOptionCheck",
      "setupDefaultStack",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.GroupChannelMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "addChannelListener",
      "addMembershipListener",
      "removeChannelListener",
      "removeMembershipListener",
      "send",
      "send",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.InterceptorPayload",
    "sensitiveFields": [],
    "securityMethods": [
      "setErrorHandler"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.Response",
    "sensitiveFields": [],
    "securityMethods": [
      "setMessage",
      "setSource"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.RpcCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "leftOver"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.RpcChannel",
    "sensitiveFields": [
      "rpcId"
    ],
    "securityMethods": [
      "breakdown",
      "finalize",
      "messageReceived",
      "setCallback",
      "setChannel",
      "setReplyMessageOptions",
      "setRpcId"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.RpcMessage",
    "sensitiveFields": [
      "uuid",
      "rpcId"
    ],
    "securityMethods": [
      "readExternal",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "getLogInterval",
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "setDomain",
      "setDomain",
      "setLogInterval",
      "setupMembership"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptorMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "getLogInterval",
      "setLogInterval"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.FragmentationInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "defrag",
      "frag",
      "heartbeat",
      "messageReceived",
      "removeFragCollection",
      "sendMessage",
      "setExpire",
      "setMaxSize"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.FragmentationInterceptorMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "setExpire",
      "setMaxSize"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.GzipInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "messageReceived",
      "report",
      "reset",
      "sendMessage",
      "setCompressionMinSize",
      "setInterval",
      "setStatsEnabled"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.GzipInterceptorMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "report",
      "reset",
      "setCompressionMinSize",
      "setInterval",
      "setOptionFlag",
      "setStatsEnabled"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "sendAsyncData",
      "sendMessage",
      "setAlwaysSend",
      "setKeepAliveTime",
      "setMaxQueueSize",
      "setMaxSpareThreads",
      "setMaxThreads",
      "setOptionFlag",
      "setUseDeepClone",
      "start",
      "startQueue",
      "stop",
      "stopQueue"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptorMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "setAlwaysSend"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator",
    "sensitiveFields": [
      "viewId",
      "suggestedviewId"
    ],
    "securityMethods": [
      "fireInterceptorEvent",
      "getViewId",
      "halt",
      "handleMyToken",
      "handleOtherToken",
      "handleToken",
      "handleViewConf",
      "heartbeat",
      "memberAdded",
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "processCoordMessage",
      "release",
      "sendElectionMsg",
      "sendElectionMsgToNextInline",
      "sendMessage",
      "setupMembership",
      "start",
      "startElection",
      "stop",
      "waitForRelease"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.OrderInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "processLeftOvers",
      "sendMessage",
      "setExpire",
      "setForwardExpired",
      "setMaxQueue"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.SimpleCoordinator",
    "sensitiveFields": [],
    "securityMethods": [
      "installViewWhenStable",
      "memberAdded",
      "memberDisappeared",
      "membershipChanged",
      "start",
      "stop",
      "viewChange"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "addStaticMember",
      "messageReceived",
      "removeStaticMember",
      "sendLocalMember",
      "sendMemberMessage",
      "sendShutdown",
      "setLocalMember",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.TcpFailureDetector",
    "sensitiveFields": [],
    "securityMethods": [
      "checkMembers",
      "heartbeat",
      "memberAdded",
      "memberDisappeared",
      "messageReceived",
      "performBasicCheck",
      "performForcedCheck",
      "sendMessage",
      "setConnectTimeout",
      "setPerformReadTest",
      "setPerformSendTest",
      "setReadTestTimeout",
      "setRemoveSuspectsTimeout",
      "setupMembership"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.TcpFailureDetectorMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "checkMembers",
      "setConnectTimeout",
      "setPerformReadTest",
      "setPerformSendTest",
      "setReadTestTimeout",
      "setRemoveSuspectsTimeout"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.TcpPingInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "heartbeat",
      "messageReceived",
      "sendPing",
      "sendPingMessage",
      "setInterval",
      "setStaticOnly",
      "setUseThread",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "messageReceived",
      "report",
      "sendMessage",
      "setInterval"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.ThroughputInterceptorMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "report",
      "setInterval"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.group.interceptors.TwoPhaseCommitInterceptor",
    "sensitiveFields": [],
    "securityMethods": [
      "heartbeat",
      "messageReceived",
      "sendMessage",
      "setDeepclone",
      "setExpire"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.BufferPool",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "returnBuffer"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.BufferPool15Impl",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "returnBuffer",
      "setMaxSize"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.ChannelData",
    "sensitiveFields": [
      "serialVersionUID",
      "USE_SECURE_RANDOM_FOR_UUID",
      "uniqueId"
    ],
    "securityMethods": [
      "generateUUID",
      "setAddress",
      "setMessage",
      "setOptions",
      "setTimestamp",
      "setUniqueId"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.DirectByteArrayOutputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.ListenCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "messageDataReceived"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.ObjectReader",
    "sensitiveFields": [],
    "securityMethods": [
      "access",
      "close",
      "finish",
      "getLastAccess",
      "isAccessed",
      "setCancelled",
      "setLastAccess"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.ReplicationStream",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "findExternalClass",
      "findReplicationClass",
      "resolveClass"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.io.XByteBuffer",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "clear",
      "expand",
      "reset",
      "setDiscard",
      "setLength",
      "trim"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.jmx.JmxRegistry",
    "sensitiveFields": [
      "registryCache",
      "baseOname"
    ],
    "securityMethods": [
      "clearMBeans",
      "createBaseObjectName",
      "getRegistry",
      "registerJmx",
      "removeRegistry",
      "unregisterJmx"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.Constants",
    "sensitiveFields": [],
    "securityMethods": [
      "main"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.McastService",
    "sensitiveFields": [
      "mcastSoTimeout",
      "mcastTTL",
      "oname"
    ],
    "securityMethods": [
      "broadcast",
      "getMembershipProvider",
      "hasProperty",
      "main",
      "messageReceived",
      "removeMessageListener",
      "setAddress",
      "setBind",
      "setDefaults",
      "setDomain",
      "setDomain",
      "setDropTime",
      "setFrequency",
      "setLocalLoopbackDisabled",
      "setLocalMemberProperties",
      "setMcastBindAddress",
      "setMcastDropTime",
      "setMessageListener",
      "setPayload",
      "setPort",
      "setProperties",
      "setRecoveryCounter",
      "setRecoveryEnabled",
      "setRecoverySleepTime",
      "setSoTimeout",
      "setTtl",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.McastServiceImpl",
    "sensitiveFields": [
      "mcastTTL",
      "mcastSoTimeout",
      "mcastBindAddress",
      "recoveryCounter",
      "recoverySleepTime",
      "recoveryEnabled"
    ],
    "securityMethods": [
      "checkExpired",
      "init",
      "memberBroadcastsReceived",
      "memberDataReceived",
      "receive",
      "send",
      "send",
      "setChannel",
      "setRecoveryCounter",
      "setRecoveryEnabled",
      "setRecoverySleepTime",
      "setupSocket",
      "start",
      "waitForMembers"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.McastServiceMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "findMemberByName"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.MemberImpl",
    "sensitiveFields": [
      "hostname",
      "uniqueId"
    ],
    "securityMethods": [
      "inc",
      "readExternal",
      "setCommand",
      "setDomain",
      "setHost",
      "setHostname",
      "setLocal",
      "setMemberAliveTime",
      "setMsgCount",
      "setPayload",
      "setPort",
      "setSecurePort",
      "setServiceStartTime",
      "setUdpPort",
      "setUniqueId",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.Membership",
    "sensitiveFields": [],
    "securityMethods": [
      "addMember",
      "removeMember",
      "reset"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.MembershipProviderBase",
    "sensitiveFields": [],
    "securityMethods": [
      "init",
      "setMembershipListener"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.MembershipServiceBase",
    "sensitiveFields": [],
    "securityMethods": [
      "broadcast",
      "findMemberByName",
      "memberAdded",
      "memberDisappeared",
      "removeMembershipListener",
      "setChannel",
      "setMembershipListener",
      "setProperties",
      "start"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.StaticMember",
    "sensitiveFields": [],
    "securityMethods": [
      "setDomain",
      "setHost",
      "setUniqueId"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.StaticMembershipProvider",
    "sensitiveFields": [
      "membershipName",
      "membershipId"
    ],
    "securityMethods": [
      "checkExpired",
      "heartbeat",
      "init",
      "leftOver",
      "memberAdded",
      "memberAlive",
      "memberDisappeared",
      "messageReceived",
      "ping",
      "setChannel",
      "setMembershipService",
      "setStaticMembers",
      "start",
      "startMembership",
      "stopMembership"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.StaticMembershipService",
    "sensitiveFields": [
      "provider",
      "oname"
    ],
    "securityMethods": [
      "addStaticMember",
      "buildMembershipProvider",
      "getMembershipProvider",
      "removeStaticMember",
      "setConnectTimeout",
      "setDefaults",
      "setDomain",
      "setExpirationTime",
      "setLocalMember",
      "setLocalMemberProperties",
      "setPayload",
      "setPingInterval",
      "setProperties",
      "setRpcTimeout",
      "setUseThread",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.membership.StaticMembershipServiceMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "findMemberByName"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.tipis.AbstractReplicatedMap",
    "sensitiveFields": [
      "serialVersionUID",
      "mapContextName",
      "mapname"
    ],
    "securityMethods": [
      "breakdown",
      "broadcast",
      "clear",
      "clear",
      "finalize",
      "getAccessTimeout",
      "getInternal",
      "heartbeat",
      "init",
      "leftOver",
      "mapMemberAdded",
      "memberAdded",
      "memberAlive",
      "memberDisappeared",
      "messageReceived",
      "ping",
      "printMap",
      "putAll",
      "replicate",
      "replicate",
      "setAccessTimeout",
      "setChannelSendOptions",
      "setExternalLoaders",
      "setMapOwner",
      "transferState"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.tipis.LazyReplicatedMap",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.tribes.tipis.ReplicatedMap",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "mapMemberAdded",
      "memberDisappeared"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.tipis.ReplicatedMapEntry",
    "sensitiveFields": [],
    "securityMethods": [
      "accessEntry",
      "applyDiff",
      "isAccessReplicate",
      "lock",
      "resetDiff",
      "setLastTimeReplicated",
      "setOwner",
      "setVersion",
      "unlock"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.AbstractRxTask",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "setCallback",
      "setDoRun",
      "setOptions",
      "setTaskPool",
      "setUseBufferPool"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.AbstractSender",
    "sensitiveFields": [
      "maxRetryAttempts"
    ],
    "securityMethods": [
      "connect",
      "disconnect",
      "setAddress",
      "setAttempt",
      "setConnectTime",
      "setConnected",
      "setDestination",
      "setDirectBuffer",
      "setKeepAliveCount",
      "setKeepAliveTime",
      "setMaxRetryAttempts",
      "setOoBInline",
      "setPort",
      "setRequestCount",
      "setRxBufSize",
      "setSoKeepAlive",
      "setSoLingerOn",
      "setSoLingerTime",
      "setSoReuseAddress",
      "setSoTrafficClass",
      "setTcpNoDelay",
      "setThrowOnFailedAck",
      "setTimeout",
      "setTxBufSize",
      "setUdpBased",
      "setUdpPort",
      "setUdpRxBufSize",
      "setUdpTxBufSize",
      "transferProperties"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.DataSender",
    "sensitiveFields": [],
    "securityMethods": [
      "connect",
      "disconnect",
      "setKeepAliveCount",
      "setKeepAliveTime",
      "setRxBufSize",
      "setTimeout",
      "setTxBufSize"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.MultiPointSender",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "remove",
      "sendMessage",
      "setDirectBuffer",
      "setMaxRetryAttempts"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.PooledSender",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "connect",
      "disconnect",
      "remove",
      "returnSender",
      "setMaxWait",
      "setPoolSize"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.ReceiverBase",
    "sensitiveFields": [
      "maxIdleTime",
      "oname"
    ],
    "securityMethods": [
      "bind",
      "heartbeat",
      "messageDataReceived",
      "setAddress",
      "setAutoBind",
      "setBind",
      "setChannel",
      "setDaemon",
      "setDirect",
      "setExecutor",
      "setHost",
      "setListen",
      "setListener",
      "setMaxIdleTime",
      "setMaxTasks",
      "setMaxThreads",
      "setMessageListener",
      "setMinTasks",
      "setMinThreads",
      "setOoBInline",
      "setPool",
      "setPort",
      "setRxBufSize",
      "setSecurePort",
      "setSelectorTimeout",
      "setSoKeepAlive",
      "setSoLingerOn",
      "setSoLingerTime",
      "setSoReuseAddress",
      "setSoTrafficClass",
      "setTcpNoDelay",
      "setTimeout",
      "setTxBufSize",
      "setUdpPort",
      "setUdpRxBufSize",
      "setUdpTxBufSize",
      "setUseBufferPool",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.ReplicationTransmitter",
    "sensitiveFields": [
      "oname"
    ],
    "securityMethods": [
      "add",
      "heartbeat",
      "remove",
      "sendMessage",
      "setChannel",
      "setTransport",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.RxTaskPool",
    "sensitiveFields": [
      "idle"
    ],
    "securityMethods": [
      "configureTask",
      "returnWorker",
      "setMaxTasks",
      "setMinTasks",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.SenderState",
    "sensitiveFields": [],
    "securityMethods": [
      "removeSenderState",
      "setFailing",
      "setReady",
      "setSuspect"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.bio.BioReceiver",
    "sensitiveFields": [],
    "securityMethods": [
      "bind",
      "listen",
      "run",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.bio.BioReplicationTask",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "drainSocket",
      "execute",
      "run",
      "sendAck",
      "serviceSocket"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.bio.BioSender",
    "sensitiveFields": [],
    "securityMethods": [
      "closeSocket",
      "connect",
      "disconnect",
      "openSocket",
      "pushMessage",
      "sendMessage",
      "waitForAck"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.bio.MultipointBioSender",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "close",
      "connect",
      "disconnect",
      "finalize",
      "remove",
      "sendMessage"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.bio.PooledMultiSender",
    "sensitiveFields": [],
    "securityMethods": [
      "sendMessage"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.nio.NioReceiver",
    "sensitiveFields": [
      "datagramChannel"
    ],
    "securityMethods": [
      "addEvent",
      "bind",
      "cancelledKey",
      "closeSelector",
      "configureDatagraChannel",
      "events",
      "listen",
      "readDataFromSocket",
      "registerChannel",
      "run",
      "socketTimeouts",
      "start",
      "stop",
      "stopListening"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.nio.NioReplicationTask",
    "sensitiveFields": [],
    "securityMethods": [
      "cancelKey",
      "drainChannel",
      "registerForRead",
      "remoteEof",
      "run",
      "sendAck",
      "serviceChannel",
      "setRxBufSize"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.nio.NioSender",
    "sensitiveFields": [],
    "securityMethods": [
      "completeConnect",
      "configureSocket",
      "connect",
      "disconnect",
      "reset",
      "setComplete",
      "setMessage",
      "setMessage",
      "setSelector"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.nio.ParallelNioSender",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "close",
      "connect",
      "connect",
      "disconnect",
      "finalize",
      "remove",
      "sendMessage",
      "setData"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.transport.nio.PooledParallelSender",
    "sensitiveFields": [],
    "securityMethods": [
      "sendMessage"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.util.Arrays",
    "sensitiveFields": [],
    "securityMethods": [
      "fill",
      "getUniqudId",
      "getUniqudId"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.util.ExceptionUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "handleThrowable"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.util.ExecutorFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "newThreadPool",
      "newThreadPool"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.util.StringManager",
    "sensitiveFields": [],
    "securityMethods": [
      "getManager",
      "getManager",
      "getManager"
    ]
  },
  {
    "className": "org.apache.catalina.tribes.util.TcclThreadFactory",
    "sensitiveFields": [
      "namePrefix"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.tribes.util.UUIDGenerator",
    "sensitiveFields": [
      "UUID_LENGTH",
      "UUID_VERSION"
    ],
    "securityMethods": [
      "nextBytes"
    ]
  },
  {
    "className": "org.apache.catalina.users.AbstractGroup",
    "sensitiveFields": [
      "groupname"
    ],
    "securityMethods": [
      "addRole",
      "removeRole",
      "removeRoles",
      "setDescription",
      "setGroupname"
    ]
  },
  {
    "className": "org.apache.catalina.users.AbstractRole",
    "sensitiveFields": [
      "rolename"
    ],
    "securityMethods": [
      "setDescription",
      "setRolename"
    ]
  },
  {
    "className": "org.apache.catalina.users.AbstractUser",
    "sensitiveFields": [
      "fullName",
      "password",
      "username"
    ],
    "securityMethods": [
      "addGroup",
      "addRole",
      "removeGroup",
      "removeGroups",
      "removeRole",
      "removeRoles",
      "setFullName",
      "setPassword",
      "setUsername"
    ]
  },
  {
    "className": "org.apache.catalina.users.MemoryGroup",
    "sensitiveFields": [],
    "securityMethods": [
      "addRole",
      "removeRole",
      "removeRoles"
    ]
  },
  {
    "className": "org.apache.catalina.users.MemoryUser",
    "sensitiveFields": [],
    "securityMethods": [
      "addGroup",
      "addRole",
      "removeGroup",
      "removeGroups",
      "removeRole",
      "removeRoles"
    ]
  },
  {
    "className": "org.apache.catalina.users.MemoryUserDatabase",
    "sensitiveFields": [
      "id",
      "pathname",
      "pathnameOld",
      "pathnameNew"
    ],
    "securityMethods": [
      "close",
      "createGroup",
      "createRole",
      "createUser",
      "findGroup",
      "findRole",
      "findUser",
      "open",
      "removeGroup",
      "removeRole",
      "removeUser",
      "save",
      "setPathname",
      "setReadonly"
    ]
  },
  {
    "className": "org.apache.catalina.users.MemoryUserDatabaseFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.catalina.util.CharsetMapper",
    "sensitiveFields": [],
    "securityMethods": [
      "addCharsetMappingFromDeploymentDescriptor"
    ]
  },
  {
    "className": "org.apache.catalina.util.ContextName",
    "sensitiveFields": [
      "ROOT_NAME",
      "baseName",
      "path",
      "name"
    ],
    "securityMethods": [
      "extractFromPath"
    ]
  },
  {
    "className": "org.apache.catalina.util.CustomObjectInputStream",
    "sensitiveFields": [
      "allowedClassNamePattern",
      "allowedClassNameFilter"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.util.DOMWriter",
    "sensitiveFields": [],
    "securityMethods": [
      "print",
      "printChildren"
    ]
  },
  {
    "className": "org.apache.catalina.util.ErrorPageSupport",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "remove"
    ]
  },
  {
    "className": "org.apache.catalina.util.Extension",
    "sensitiveFields": [
      "extensionName",
      "implementationVendorId"
    ],
    "securityMethods": [
      "setExtensionName",
      "setFulfilled",
      "setImplementationURL",
      "setImplementationVendor",
      "setImplementationVendorId",
      "setImplementationVersion",
      "setSpecificationVendor",
      "setSpecificationVersion"
    ]
  },
  {
    "className": "org.apache.catalina.util.ExtensionValidator",
    "sensitiveFields": [],
    "securityMethods": [
      "addFolderList",
      "addSystemResource",
      "validateApplication",
      "validateManifestResources"
    ]
  },
  {
    "className": "org.apache.catalina.util.IOTools",
    "sensitiveFields": [],
    "securityMethods": [
      "flow",
      "flow",
      "flow"
    ]
  },
  {
    "className": "org.apache.catalina.util.Introspection",
    "sensitiveFields": [],
    "securityMethods": [
      "loadClass"
    ]
  },
  {
    "className": "org.apache.catalina.util.LifecycleBase",
    "sensitiveFields": [],
    "securityMethods": [
      "addLifecycleListener",
      "destroy",
      "destroyInternal",
      "fireLifecycleEvent",
      "handleSubClassException",
      "init",
      "initInternal",
      "invalidTransition",
      "removeLifecycleListener",
      "setState",
      "setState",
      "setStateInternal",
      "setThrowOnFailure",
      "start",
      "startInternal",
      "stop",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.util.LifecycleMBeanBase",
    "sensitiveFields": [
      "oname"
    ],
    "securityMethods": [
      "destroyInternal",
      "getObjectName",
      "initInternal",
      "postDeregister",
      "postRegister",
      "preDeregister",
      "preRegister",
      "register",
      "setDomain",
      "unregister"
    ]
  },
  {
    "className": "org.apache.catalina.util.ManifestResource",
    "sensitiveFields": [
      "resourceName"
    ],
    "securityMethods": [
      "processManifest"
    ]
  },
  {
    "className": "org.apache.catalina.util.ParameterMap",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "checkLocked",
      "clear",
      "putAll",
      "setLocked"
    ]
  },
  {
    "className": "org.apache.catalina.util.ResourceSet",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "clear",
      "setLocked"
    ]
  },
  {
    "className": "org.apache.catalina.util.ServerInfo",
    "sensitiveFields": [],
    "securityMethods": [
      "main"
    ]
  },
  {
    "className": "org.apache.catalina.util.SessionConfig",
    "sensitiveFields": [
      "DEFAULT_SESSION_COOKIE_NAME",
      "DEFAULT_SESSION_PARAMETER_NAME"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.util.SessionIdGeneratorBase",
    "sensitiveFields": [
      "secureRandomClass",
      "secureRandomProvider",
      "sessionIdLength"
    ],
    "securityMethods": [
      "destroyInternal",
      "getRandomBytes",
      "initInternal",
      "setJvmRoute",
      "setSecureRandomAlgorithm",
      "setSecureRandomClass",
      "setSecureRandomProvider",
      "setSessionIdLength",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.util.Strftime",
    "sensitiveFields": [],
    "securityMethods": [
      "quote",
      "setTimeZone",
      "translateCommand"
    ]
  },
  {
    "className": "org.apache.catalina.util.TLSUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "isTLSRequestAttribute"
    ]
  },
  {
    "className": "org.apache.catalina.util.ToStringUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "containedToString"
    ]
  },
  {
    "className": "org.apache.catalina.util.TomcatCSS",
    "sensitiveFields": [
      "TOMCAT_CSS"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.util.URLEncoder",
    "sensitiveFields": [
      "QUERY"
    ],
    "securityMethods": [
      "addSafeCharacter",
      "encode",
      "removeSafeCharacter",
      "setEncodeSpaceAsPlus"
    ]
  },
  {
    "className": "org.apache.catalina.util.XMLWriter",
    "sensitiveFields": [],
    "securityMethods": [
      "sendData",
      "writeData",
      "writeElement",
      "writeElement",
      "writeProperty",
      "writeText",
      "writeXMLHeader"
    ]
  },
  {
    "className": "org.apache.catalina.valves.AbstractAccessLogValve",
    "sensitiveFields": [
      "localeName"
    ],
    "securityMethods": [
      "createAccessLogElement",
      "createAccessLogElement",
      "findLocale",
      "invoke",
      "log",
      "log",
      "setCondition",
      "setConditionIf",
      "setConditionUnless",
      "setEnabled",
      "setIpv6Canonical",
      "setLocale",
      "setPattern",
      "setRequestAttributesEnabled",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.valves.AccessLogValve",
    "sensitiveFields": [
      "directory",
      "renameOnRotate",
      "fileDateFormatter",
      "currentLogFile",
      "fileDateFormat"
    ],
    "securityMethods": [
      "backgroundProcess",
      "close",
      "getDirectoryFile",
      "getLogFile",
      "log",
      "open",
      "restore",
      "rotate",
      "rotate",
      "setBuffered",
      "setCheckExists",
      "setDirectory",
      "setEncoding",
      "setFileDateFormat",
      "setMaxDays",
      "setPrefix",
      "setRenameOnRotate",
      "setRotatable",
      "setSuffix",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.valves.CrawlerSessionManagerValve",
    "sensitiveFields": [
      "clientIdSessionId",
      "sessionIdClientId"
    ],
    "securityMethods": [
      "initInternal",
      "invoke",
      "setContextAware",
      "setCrawlerIps",
      "setCrawlerUserAgents",
      "setHostAware",
      "setSessionInactiveInterval",
      "valueUnbound"
    ]
  },
  {
    "className": "org.apache.catalina.valves.ErrorReportValve",
    "sensitiveFields": [],
    "securityMethods": [
      "getProperty",
      "invoke",
      "report",
      "setProperty",
      "setShowReport",
      "setShowServerInfo"
    ]
  },
  {
    "className": "org.apache.catalina.valves.ExtendedAccessLogValve",
    "sensitiveFields": [],
    "securityMethods": [
      "getClientToServerElement",
      "getLogElement",
      "getProxyElement",
      "getServerToClientElement",
      "getXParameterElement",
      "open"
    ]
  },
  {
    "className": "org.apache.catalina.valves.JDBCAccessLogValve",
    "sensitiveFields": [
      "connectionName",
      "connectionPassword",
      "driverName",
      "tableName",
      "queryField"
    ],
    "securityMethods": [
      "close",
      "invoke",
      "log",
      "open",
      "setBytesField",
      "setConnectionName",
      "setConnectionPassword",
      "setConnectionURL",
      "setDriverName",
      "setMethodField",
      "setPattern",
      "setQueryField",
      "setRefererField",
      "setRemoteHostField",
      "setRequestAttributesEnabled",
      "setResolveHosts",
      "setStatusField",
      "setTableName",
      "setTimestampField",
      "setUseLongContentLength",
      "setUserAgentField",
      "setUserField",
      "setVirtualHostField",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.valves.LoadBalancerDrainingValve",
    "sensitiveFields": [
      "_ignoreCookieName"
    ],
    "securityMethods": [
      "invoke",
      "setIgnoreCookieName",
      "setIgnoreCookieValue",
      "setRedirectStatusCode"
    ]
  },
  {
    "className": "org.apache.catalina.valves.PersistentValve",
    "sensitiveFields": [],
    "securityMethods": [
      "bind",
      "invoke",
      "setContainer",
      "unbind"
    ]
  },
  {
    "className": "org.apache.catalina.valves.RemoteAddrValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke"
    ]
  },
  {
    "className": "org.apache.catalina.valves.RemoteCIDRValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke",
      "setAllow",
      "setDeny"
    ]
  },
  {
    "className": "org.apache.catalina.valves.RemoteHostValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke"
    ]
  },
  {
    "className": "org.apache.catalina.valves.RemoteIpValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke",
      "setChangeLocalPort",
      "setHttpServerPort",
      "setHttpsServerPort",
      "setInternalProxies",
      "setPortHeader",
      "setPorts",
      "setProtocolHeader",
      "setProtocolHeaderHttpsValue",
      "setProxiesHeader",
      "setRemoteIpHeader",
      "setRequestAttributesEnabled",
      "setTrustedProxies"
    ]
  },
  {
    "className": "org.apache.catalina.valves.RequestFilterValve",
    "sensitiveFields": [
      "allowValid",
      "denyValid",
      "invalidAuthenticationWhenDeny"
    ],
    "securityMethods": [
      "denyRequest",
      "getInvalidAuthenticationWhenDeny",
      "initInternal",
      "invoke",
      "process",
      "setAddConnectorPort",
      "setAllow",
      "setDeny",
      "setDenyStatus",
      "setInvalidAuthenticationWhenDeny",
      "startInternal"
    ]
  },
  {
    "className": "org.apache.catalina.valves.SSLValve",
    "sensitiveFields": [
      "sslSessionIdHeader"
    ],
    "securityMethods": [
      "invoke",
      "setSslCipherHeader",
      "setSslCipherUserKeySizeHeader",
      "setSslClientCertHeader",
      "setSslSessionIdHeader"
    ]
  },
  {
    "className": "org.apache.catalina.valves.SemaphoreValve",
    "sensitiveFields": [],
    "securityMethods": [
      "invoke",
      "permitDenied",
      "setBlock",
      "setConcurrency",
      "setFairness",
      "setInterruptible",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.valves.StuckThreadDetectionValve",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "initInternal",
      "invoke",
      "notifyStuckThreadCompleted",
      "notifyStuckThreadDetected",
      "setInterruptThreadThreshold",
      "setThreshold"
    ]
  },
  {
    "className": "org.apache.catalina.valves.ValveBase",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "initInternal",
      "setAsyncSupported",
      "setContainer",
      "setNext",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.valves.rewrite.Resolver",
    "sensitiveFields": [],
    "securityMethods": [
      "resolveResource"
    ]
  },
  {
    "className": "org.apache.catalina.valves.rewrite.ResolverImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "resolveResource"
    ]
  },
  {
    "className": "org.apache.catalina.valves.rewrite.RewriteCond",
    "sensitiveFields": [],
    "securityMethods": [
      "parse",
      "setCondPattern",
      "setNocase",
      "setOrnext",
      "setPositive",
      "setTestString"
    ]
  },
  {
    "className": "org.apache.catalina.valves.rewrite.RewriteRule",
    "sensitiveFields": [
      "cookieName",
      "cookiePath",
      "envName",
      "forbidden"
    ],
    "securityMethods": [
      "addCondition",
      "addEnvName",
      "addEnvValue",
      "parse",
      "setChain",
      "setConditions",
      "setCookie",
      "setCookieDomain",
      "setCookieHttpOnly",
      "setCookieLifetime",
      "setCookieName",
      "setCookiePath",
      "setCookieSecure",
      "setCookieValue",
      "setEnv",
      "setEscapeBackReferences",
      "setForbidden",
      "setGone",
      "setHost",
      "setLast",
      "setNext",
      "setNocase",
      "setNoescape",
      "setNosubreq",
      "setPatternString",
      "setQsappend",
      "setRedirect",
      "setRedirectCode",
      "setSkip",
      "setSubstitution",
      "setSubstitutionString",
      "setType",
      "setTypeValue"
    ]
  },
  {
    "className": "org.apache.catalina.valves.rewrite.RewriteValve",
    "sensitiveFields": [
      "resourcePath"
    ],
    "securityMethods": [
      "getConfigBase",
      "getHostConfigPath",
      "initInternal",
      "invoke",
      "parse",
      "parseCondFlag",
      "parseRuleFlag",
      "setConfiguration",
      "setEnabled",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.valves.rewrite.Substitution",
    "sensitiveFields": [],
    "securityMethods": [
      "parse",
      "setEscapeBackReferences",
      "setSub"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.AbstractArchiveResource",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "getResource"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.AbstractArchiveResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "closeJarFile",
      "createArchiveResource",
      "gc",
      "getArchiveEntry",
      "getResource",
      "list",
      "listWebAppPaths",
      "mkdir",
      "openJarFile",
      "setBaseUrl",
      "setReadOnly",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.AbstractFileResourceSet",
    "sensitiveFields": [
      "fileBase"
    ],
    "securityMethods": [
      "checkType",
      "file",
      "gc",
      "getFileBase",
      "initInternal",
      "isInvalidWindowsFilename",
      "normalize",
      "setReadOnly"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.AbstractResource",
    "sensitiveFields": [
      "webAppPath"
    ],
    "securityMethods": [
      "setMimeType"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.AbstractResourceSet",
    "sensitiveFields": [
      "internalPath"
    ],
    "securityMethods": [
      "checkPath",
      "destroyInternal",
      "setBase",
      "setClassLoaderOnly",
      "setInternalPath",
      "setManifest",
      "setRoot",
      "setStaticOnly",
      "setWebAppMount",
      "startInternal",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.AbstractSingleArchiveResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "getArchiveEntry",
      "initInternal"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.Cache",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "clear",
      "enforceObjectMaxSizeLimit",
      "getResource",
      "getResources",
      "noCache",
      "removeCacheEntry",
      "setMaxSize",
      "setObjectMaxSize",
      "setTtl"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.CachedResource",
    "sensitiveFields": [
      "CACHE_ENTRY_SIZE",
      "webAppPath",
      "cachedIsFile",
      "cachedIsDirectory"
    ],
    "securityMethods": [
      "setMimeType",
      "validateResource",
      "validateResources"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.DirResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "checkType",
      "getResource",
      "initInternal",
      "list",
      "listWebAppPaths",
      "mkdir",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.EmptyResource",
    "sensitiveFields": [
      "webAppPath",
      "file"
    ],
    "securityMethods": [
      "setMimeType"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.EmptyResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "destroyInternal",
      "gc",
      "getResource",
      "initInternal",
      "list",
      "listWebAppPaths",
      "mkdir",
      "setClassLoaderOnly",
      "setReadOnly",
      "setRoot",
      "setStaticOnly",
      "startInternal",
      "stopInternal",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.ExtractingRoot",
    "sensitiveFields": [],
    "securityMethods": [
      "getExpansionTarget",
      "processWebInfLib",
      "stopInternal"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.FileResource",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.webresources.FileResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "checkType",
      "getResource",
      "list",
      "listWebAppPaths",
      "mkdir",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.JarResourceRoot",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.webresources.JarResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "createArchiveResource"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.JarWarResource",
    "sensitiveFields": [
      "archivePath"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.webresources.JarWarResourceSet",
    "sensitiveFields": [
      "archivePath"
    ],
    "securityMethods": [
      "createArchiveResource",
      "getArchiveEntry",
      "initInternal",
      "processArchivesEntriesForMultiRelease"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.StandardRoot",
    "sensitiveFields": [
      "cacheJmxName",
      "trackLockedFiles"
    ],
    "securityMethods": [
      "addClassResources",
      "addJarResources",
      "addPostResources",
      "addPreResources",
      "backgroundProcess",
      "createWebResourceSet",
      "createWebResourceSet",
      "deregisterTrackedResource",
      "destroyInternal",
      "gc",
      "getClassLoaderResource",
      "getClassLoaderResources",
      "getResource",
      "getResource",
      "getResourceInternal",
      "getResources",
      "getResources",
      "getResourcesInternal",
      "initInternal",
      "list",
      "list",
      "listResources",
      "listResources",
      "listWebAppPaths",
      "mkdir",
      "preResourceExists",
      "processWebInfLib",
      "registerTrackedResource",
      "registerURLStreamHandlerFactory",
      "setAllowLinking",
      "setCacheMaxSize",
      "setCacheObjectMaxSize",
      "setCacheTtl",
      "setCachingAllowed",
      "setContext",
      "setMainResources",
      "setTrackLockedFiles",
      "startInternal",
      "stopInternal",
      "validate",
      "write"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.TomcatJarInputStream",
    "sensitiveFields": [
      "metaInfEntry",
      "manifestEntry"
    ],
    "securityMethods": [
      "createZipEntry",
      "getManifestEntry",
      "getMetaInfEntry"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.TomcatURLStreamHandlerFactory",
    "sensitiveFields": [
      "CLASSPATH_PROTOCOL"
    ],
    "securityMethods": [
      "addUserFactory",
      "getInstance",
      "getInstanceInternal",
      "release"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.TrackedInputStream",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "close",
      "mark",
      "reset"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.VirtualResource",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.catalina.webresources.WarResourceSet",
    "sensitiveFields": [],
    "securityMethods": [
      "createArchiveResource"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.war.Handler",
    "sensitiveFields": [],
    "securityMethods": [
      "setURL"
    ]
  },
  {
    "className": "org.apache.catalina.webresources.war.WarURLConnection",
    "sensitiveFields": [],
    "securityMethods": [
      "connect"
    ]
  },
  {
    "className": "org.apache.coyote.AbstractProcessor",
    "sensitiveFields": [
      "hostNameC"
    ],
    "securityMethods": [
      "ack",
      "action",
      "disableSwallowRequest",
      "dispatchNonBlockingRead",
      "doHttpUpgrade",
      "doPush",
      "doTimeoutAsync",
      "execute",
      "executeDispatches",
      "finishResponse",
      "flush",
      "getUpgradeToken",
      "parseHost",
      "populateHost",
      "populateRequestAttributeRemoteHost",
      "populateSslRequestAttributes",
      "prepareResponse",
      "processSocketEvent",
      "recycle",
      "registerReadInterest",
      "setAsyncTimeout",
      "setErrorState",
      "setRequestBody",
      "setSocketWrapper",
      "setSslSupport",
      "setSwallowResponse",
      "sslReHandShake",
      "timeoutAsync"
    ]
  },
  {
    "className": "org.apache.coyote.AbstractProcessorLight",
    "sensitiveFields": [],
    "securityMethods": [
      "addDispatch",
      "clearDispatches"
    ]
  },
  {
    "className": "org.apache.coyote.AbstractProtocol",
    "sensitiveFields": [
      "nameCounter",
      "rgOname",
      "nameIndex",
      "clientCertProvider",
      "oname"
    ],
    "securityMethods": [
      "addWaitingProcessor",
      "closeServerSocketGraceful",
      "createObjectName",
      "createUpgradeProcessor",
      "destroy",
      "getNegotiatedProtocol",
      "getObjectName",
      "getProperty",
      "getUpgradeProtocol",
      "init",
      "pause",
      "postDeregister",
      "postRegister",
      "preDeregister",
      "preRegister",
      "removeWaitingProcessor",
      "resume",
      "setAcceptCount",
      "setAcceptorThreadCount",
      "setAcceptorThreadPriority",
      "setAdapter",
      "setAddress",
      "setClientCertProvider",
      "setConnectionLinger",
      "setConnectionTimeout",
      "setExecutor",
      "setHandler",
      "setKeepAliveTimeout",
      "setMaxConnections",
      "setMaxHeaderCount",
      "setMaxThreads",
      "setMinSpareThreads",
      "setPort",
      "setProcessorCache",
      "setProperty",
      "setTcpNoDelay",
      "setThreadPriority",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.coyote.ActionCode",
    "sensitiveFields": [
      "REQ_LOCAL_NAME_ATTRIBUTE"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.ActionHook",
    "sensitiveFields": [],
    "securityMethods": [
      "action"
    ]
  },
  {
    "className": "org.apache.coyote.Adapter",
    "sensitiveFields": [],
    "securityMethods": [
      "checkRecycled",
      "log",
      "service"
    ]
  },
  {
    "className": "org.apache.coyote.AsyncContextCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "fireOnComplete"
    ]
  },
  {
    "className": "org.apache.coyote.AsyncStateMachine",
    "sensitiveFields": [],
    "securityMethods": [
      "asyncDispatched",
      "asyncError",
      "asyncMustError",
      "asyncOperation",
      "asyncRun",
      "asyncStart",
      "clearNonBlockingListeners",
      "recycle"
    ]
  },
  {
    "className": "org.apache.coyote.CloseNowException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.CompressionConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "setCompressibleMimeType",
      "setCompression",
      "setCompressionMinSize",
      "setNoCompressionUserAgents"
    ]
  },
  {
    "className": "org.apache.coyote.Constants",
    "sensitiveFields": [
      "SENDFILE_SUPPORTED_ATTR",
      "SENDFILE_FILENAME_ATTR",
      "SENDFILE_FILE_START_ATTR",
      "SENDFILE_FILE_END_ATTR"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.ContainerThreadMarker",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "set"
    ]
  },
  {
    "className": "org.apache.coyote.Processor",
    "sensitiveFields": [],
    "securityMethods": [
      "getUpgradeToken",
      "pause",
      "recycle",
      "setSslSupport",
      "timeoutAsync"
    ]
  },
  {
    "className": "org.apache.coyote.ProtocolException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.ProtocolHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "addSslHostConfig",
      "addUpgradeProtocol",
      "closeServerSocketGraceful",
      "destroy",
      "init",
      "pause",
      "resume",
      "setAdapter",
      "start",
      "stop"
    ]
  },
  {
    "className": "org.apache.coyote.Request",
    "sensitiveFields": [
      "serverNameMB",
      "queryMB",
      "localNameMB",
      "pathParameters",
      "remoteUserNeedsAuthorization",
      "authType",
      "sendfile"
    ],
    "securityMethods": [
      "action",
      "addPathParameter",
      "getAttribute",
      "getAuthType",
      "getHeader",
      "getPathParameter",
      "getRemoteUserNeedsAuthorization",
      "recycle",
      "setAttribute",
      "setAvailable",
      "setCharset",
      "setContentLength",
      "setContentType",
      "setContentType",
      "setExpectation",
      "setHook",
      "setInputBuffer",
      "setLocalPort",
      "setNote",
      "setReadListener",
      "setRemotePort",
      "setRemoteUserNeedsAuthorization",
      "setResponse",
      "setSendfile",
      "setServerPort",
      "setStartTime",
      "updateCounters"
    ]
  },
  {
    "className": "org.apache.coyote.RequestGroupInfo",
    "sensitiveFields": [],
    "securityMethods": [
      "addRequestProcessor",
      "removeRequestProcessor",
      "resetCounters",
      "setBytesReceived",
      "setBytesSent",
      "setErrorCount",
      "setMaxTime",
      "setProcessingTime",
      "setRequestCount"
    ]
  },
  {
    "className": "org.apache.coyote.RequestInfo",
    "sensitiveFields": [
      "workerThreadName",
      "rpName"
    ],
    "securityMethods": [
      "getRpName",
      "setBytesReceived",
      "setBytesSent",
      "setErrorCount",
      "setGlobalProcessor",
      "setLastRequestProcessingTime",
      "setMaxRequestUri",
      "setMaxTime",
      "setProcessingTime",
      "setRequestCount",
      "setRpName",
      "setStage",
      "setWorkerThreadName",
      "updateCounters"
    ]
  },
  {
    "className": "org.apache.coyote.Response",
    "sensitiveFields": [],
    "securityMethods": [
      "action",
      "addHeader",
      "addHeader",
      "checkSpecialHeader",
      "containsHeader",
      "doWrite",
      "onWritePossible",
      "recycle",
      "reset",
      "sendHeaders",
      "setCharacterEncoding",
      "setCommitted",
      "setContentLength",
      "setContentType",
      "setContentTypeNoCharset",
      "setErrorException",
      "setHeader",
      "setHook",
      "setLocale",
      "setMessage",
      "setNote",
      "setOutputBuffer",
      "setRequest",
      "setStatus",
      "setTrailerFields",
      "setWriteListener"
    ]
  },
  {
    "className": "org.apache.coyote.ajp.AbstractAjpProtocol",
    "sensitiveFields": [
      "tomcatAuthentication",
      "tomcatAuthorization",
      "requiredSecret"
    ],
    "securityMethods": [
      "addSslHostConfig",
      "addUpgradeProtocol",
      "createUpgradeProcessor",
      "getNegotiatedProtocol",
      "getTomcatAuthentication",
      "getTomcatAuthorization",
      "getUpgradeProtocol",
      "setAjpFlush",
      "setPacketSize",
      "setRequiredSecret",
      "setTomcatAuthentication",
      "setTomcatAuthorization"
    ]
  },
  {
    "className": "org.apache.coyote.ajp.AjpAprProtocol",
    "sensitiveFields": [],
    "securityMethods": [
      "setPollTime"
    ]
  },
  {
    "className": "org.apache.coyote.ajp.AjpMessage",
    "sensitiveFields": [],
    "securityMethods": [
      "appendByte",
      "appendByteChunk",
      "appendBytes",
      "appendBytes",
      "appendBytes",
      "appendInt",
      "doGetBytes",
      "dump",
      "end",
      "getBodyBytes",
      "getBytes",
      "reset",
      "validatePos"
    ]
  },
  {
    "className": "org.apache.coyote.ajp.AjpProcessor",
    "sensitiveFields": [],
    "securityMethods": [
      "ack",
      "disableSwallowRequest",
      "dispatchNonBlockingRead",
      "finishResponse",
      "flush",
      "pause",
      "populateHost",
      "populateRequestAttributeRemoteHost",
      "populateSslRequestAttributes",
      "prepareRequest",
      "prepareResponse",
      "recycle",
      "registerReadInterest",
      "setRequestBody",
      "setSwallowResponse",
      "writeData"
    ]
  },
  {
    "className": "org.apache.coyote.ajp.Constants",
    "sensitiveFields": [
      "SC_RESP_WWW_AUTHENTICATE",
      "SC_A_SERVLET_PATH",
      "SC_A_AUTH_TYPE",
      "SC_A_QUERY_STRING",
      "SC_A_SECRET",
      "SC_REQ_AUTHORIZATION"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http11.AbstractHttp11JsseProtocol",
    "sensitiveFields": [],
    "securityMethods": [
      "setSniParseLimit",
      "setSslImplementationName"
    ]
  },
  {
    "className": "org.apache.coyote.http11.AbstractHttp11Protocol",
    "sensitiveFields": [
      "relaxedPathChars",
      "relaxedQueryChars",
      "rejectIllegalHeaderName",
      "connectionUploadTimeout",
      "disableUploadTimeout",
      "serverRemoveAppProvidedValues"
    ],
    "securityMethods": [
      "addAllowedTrailerHeader",
      "addSslHostConfig",
      "addUpgradeProtocol",
      "configureUpgradeProtocol",
      "createUpgradeProcessor",
      "getClientAuth",
      "getNegotiatedProtocol",
      "getSSLVerifyClient",
      "getSSLVerifyDepth",
      "getUpgradeProtocol",
      "init",
      "registerDefaultSSLHostConfig",
      "reloadSslHostConfig",
      "reloadSslHostConfigs",
      "removeAllowedTrailerHeader",
      "setAlgorithm",
      "setAllowHostHeaderMismatch",
      "setAllowedTrailerHeaders",
      "setCiphers",
      "setClientAuth",
      "setCompressibleMimeType",
      "setCompression",
      "setCompressionMinSize",
      "setConnectionUploadTimeout",
      "setCrlFile",
      "setDefaultSSLHostConfigName",
      "setDisableUploadTimeout",
      "setKeyAlias",
      "setKeyPass",
      "setKeystoreFile",
      "setKeystorePass",
      "setKeystoreProvider",
      "setKeystoreType",
      "setMaxExtensionSize",
      "setMaxHttpHeaderSize",
      "setMaxKeepAliveRequests",
      "setMaxSavePostSize",
      "setMaxSwallowSize",
      "setMaxTrailerSize",
      "setNoCompressionUserAgents",
      "setRejectIllegalHeaderName",
      "setRelaxedPathChars",
      "setRelaxedQueryChars",
      "setRestrictedUserAgents",
      "setSSLCACertificateFile",
      "setSSLCACertificatePath",
      "setSSLCARevocationFile",
      "setSSLCARevocationPath",
      "setSSLCertificateChainFile",
      "setSSLCertificateFile",
      "setSSLCertificateKeyFile",
      "setSSLCipherSuite",
      "setSSLDisableCompression",
      "setSSLDisableSessionTickets",
      "setSSLEnabled",
      "setSSLHonorCipherOrder",
      "setSSLPassword",
      "setSSLProtocol",
      "setSSLVerifyClient",
      "setSSLVerifyDepth",
      "setSecure",
      "setServer",
      "setServerRemoveAppProvidedValues",
      "setSessionCacheSize",
      "setSessionTimeout",
      "setSslEnabledProtocols",
      "setSslProtocol",
      "setTrustManagerClassName",
      "setTrustMaxCertLength",
      "setTruststoreAlgorithm",
      "setTruststoreFile",
      "setTruststorePass",
      "setTruststoreProvider",
      "setTruststoreType",
      "setUseSendfile",
      "setUseServerCipherSuitesOrder"
    ]
  },
  {
    "className": "org.apache.coyote.http11.Constants",
    "sensitiveFields": [
      "IDENTITY_FILTER",
      "VOID_FILTER"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http11.HeadersTooLargeException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http11.Http11AprProtocol",
    "sensitiveFields": [],
    "securityMethods": [
      "setDeferAccept",
      "setPollTime",
      "setSendfileSize"
    ]
  },
  {
    "className": "org.apache.coyote.http11.Http11InputBuffer",
    "sensitiveFields": [
      "rejectIllegalHeaderName",
      "filterLibrary"
    ],
    "securityMethods": [
      "addActiveFilter",
      "addFilter",
      "endRequest",
      "expand",
      "init",
      "nextRequest",
      "recycle",
      "setByteBuffer",
      "setSwallowInput"
    ]
  },
  {
    "className": "org.apache.coyote.http11.Http11NioProtocol",
    "sensitiveFields": [],
    "securityMethods": [
      "setPollerThreadCount",
      "setPollerThreadPriority",
      "setSelectorTimeout"
    ]
  },
  {
    "className": "org.apache.coyote.http11.Http11OutputBuffer",
    "sensitiveFields": [
      "filterLibrary"
    ],
    "securityMethods": [
      "addActiveFilter",
      "addFilter",
      "checkLengthBeforeWrite",
      "commit",
      "end",
      "endHeaders",
      "flush",
      "init",
      "nextRequest",
      "recycle",
      "registerWriteInterest",
      "resetHeaderBuffer",
      "sendAck",
      "sendHeader",
      "sendStatus",
      "write",
      "write",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.coyote.http11.Http11Processor",
    "sensitiveFields": [
      "upgradeToken",
      "sendfileData"
    ],
    "securityMethods": [
      "ack",
      "addInputFilter",
      "checkExpectationAndResponseStatus",
      "disableSwallowRequest",
      "doHttpUpgrade",
      "endRequest",
      "finishResponse",
      "flush",
      "getUpgradeToken",
      "pause",
      "populateHost",
      "prepareRequest",
      "prepareResponse",
      "prepareSendfile",
      "processSendfile",
      "recycle",
      "registerReadInterest",
      "setRequestBody",
      "setSwallowResponse",
      "sslReHandShake"
    ]
  },
  {
    "className": "org.apache.coyote.http11.HttpOutputBuffer",
    "sensitiveFields": [],
    "securityMethods": [
      "end",
      "flush"
    ]
  },
  {
    "className": "org.apache.coyote.http11.InputFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "recycle",
      "setBuffer",
      "setRequest"
    ]
  },
  {
    "className": "org.apache.coyote.http11.OutputFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "recycle",
      "setBuffer",
      "setResponse"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.BufferedInputFilter",
    "sensitiveFields": [
      "ENCODING_NAME"
    ],
    "securityMethods": [
      "expand",
      "recycle",
      "setBuffer",
      "setByteBuffer",
      "setLimit",
      "setRequest"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.ChunkedInputFilter",
    "sensitiveFields": [
      "ENCODING_NAME"
    ],
    "securityMethods": [
      "checkError",
      "expand",
      "parseCRLF",
      "parseEndChunk",
      "recycle",
      "setBuffer",
      "setByteBuffer",
      "setRequest",
      "throwEOFException",
      "throwIOException"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.ChunkedOutputFilter",
    "sensitiveFields": [
      "disallowedTrailerFieldNames"
    ],
    "securityMethods": [
      "end",
      "flush",
      "recycle",
      "setBuffer",
      "setResponse"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.GzipOutputFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "end",
      "flush",
      "recycle",
      "setBuffer",
      "setResponse"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.IdentityInputFilter",
    "sensitiveFields": [
      "ENCODING_NAME"
    ],
    "securityMethods": [
      "expand",
      "recycle",
      "setBuffer",
      "setByteBuffer",
      "setRequest"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.IdentityOutputFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "end",
      "flush",
      "recycle",
      "setBuffer",
      "setResponse"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.SavedRequestInputFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "recycle",
      "setBuffer",
      "setRequest"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.VoidInputFilter",
    "sensitiveFields": [
      "ENCODING_NAME"
    ],
    "securityMethods": [
      "recycle",
      "setBuffer",
      "setRequest"
    ]
  },
  {
    "className": "org.apache.coyote.http11.filters.VoidOutputFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "end",
      "flush",
      "recycle",
      "setBuffer",
      "setResponse"
    ]
  },
  {
    "className": "org.apache.coyote.http11.upgrade.InternalHttpUpgradeHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "pause",
      "setSocketWrapper",
      "setSslSupport"
    ]
  },
  {
    "className": "org.apache.coyote.http11.upgrade.UpgradeProcessorBase",
    "sensitiveFields": [
      "upgradeToken"
    ],
    "securityMethods": [
      "getUpgradeToken",
      "recycle",
      "timeoutAsync"
    ]
  },
  {
    "className": "org.apache.coyote.http11.upgrade.UpgradeProcessorExternal",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "pause",
      "setSslSupport"
    ]
  },
  {
    "className": "org.apache.coyote.http11.upgrade.UpgradeProcessorInternal",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "pause",
      "setSslSupport"
    ]
  },
  {
    "className": "org.apache.coyote.http11.upgrade.UpgradeServletInputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "onDataAvailable",
      "onError",
      "preReadChecks",
      "setReadListener"
    ]
  },
  {
    "className": "org.apache.coyote.http11.upgrade.UpgradeServletOutputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "flush",
      "flushInternal",
      "onError",
      "onWritePossible",
      "preWriteChecks",
      "setWriteListener",
      "write",
      "write",
      "writeInternal"
    ]
  },
  {
    "className": "org.apache.coyote.http2.AbstractStream",
    "sensitiveFields": [
      "identifier"
    ],
    "securityMethods": [
      "addChild",
      "decrementWindowSize",
      "detachFromParent",
      "incrementWindowSize",
      "setParentStream",
      "setWindowSize"
    ]
  },
  {
    "className": "org.apache.coyote.http2.ByteUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "set31Bits",
      "setFourBytes",
      "setThreeBytes",
      "setTwoBytes"
    ]
  },
  {
    "className": "org.apache.coyote.http2.ConnectionException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http2.ConnectionSettingsBase",
    "sensitiveFields": [
      "connectionId"
    ],
    "securityMethods": [
      "set",
      "set",
      "throwException",
      "validateEnablePush",
      "validateHeaderTableSize",
      "validateInitialWindowSize",
      "validateMaxFrameSize"
    ]
  },
  {
    "className": "org.apache.coyote.http2.ConnectionSettingsLocal",
    "sensitiveFields": [],
    "securityMethods": [
      "checkSend",
      "set",
      "throwException"
    ]
  },
  {
    "className": "org.apache.coyote.http2.ConnectionSettingsRemote",
    "sensitiveFields": [],
    "securityMethods": [
      "throwException"
    ]
  },
  {
    "className": "org.apache.coyote.http2.FrameType",
    "sensitiveFields": [
      "id",
      "payloadSizeValidator"
    ],
    "securityMethods": [
      "check"
    ]
  },
  {
    "className": "org.apache.coyote.http2.HPackHuffman",
    "sensitiveFields": [],
    "securityMethods": [
      "decode"
    ]
  },
  {
    "className": "org.apache.coyote.http2.HeaderSink",
    "sensitiveFields": [],
    "securityMethods": [
      "emitHeader",
      "setHeaderException",
      "validateHeaders"
    ]
  },
  {
    "className": "org.apache.coyote.http2.Hpack",
    "sensitiveFields": [],
    "securityMethods": [
      "encodeInteger"
    ]
  },
  {
    "className": "org.apache.coyote.http2.HpackDecoder",
    "sensitiveFields": [
      "currentMemorySize",
      "maxMemorySizeHard",
      "maxMemorySizeSoft"
    ],
    "securityMethods": [
      "addEntryToHeaderTable",
      "addStaticTableEntry",
      "decode",
      "emitHeader",
      "handleIndex",
      "resizeIfRequired",
      "setHeaderEmitter",
      "setMaxHeaderCount",
      "setMaxHeaderSize"
    ]
  },
  {
    "className": "org.apache.coyote.http2.HpackEncoder",
    "sensitiveFields": [
      "entryPositionCounter"
    ],
    "securityMethods": [
      "addToDynamicTable",
      "findInTable",
      "handleTableSizeChange",
      "preventPositionRollover",
      "runEvictionIfRequired",
      "setMaxTableSize",
      "writeHuffmanEncodableName",
      "writeHuffmanEncodableValue",
      "writeValueString"
    ]
  },
  {
    "className": "org.apache.coyote.http2.HpackException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http2.Http2AsyncParser",
    "sensitiveFields": [],
    "securityMethods": [
      "handleAsyncException"
    ]
  },
  {
    "className": "org.apache.coyote.http2.Http2AsyncUpgradeHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "getParser",
      "handleAsyncException",
      "processSendfile",
      "processWrites",
      "sendStreamReset",
      "settingsEnd",
      "writeBody",
      "writeGoAwayFrame",
      "writeHeaders",
      "writeSettings",
      "writeWindowUpdate"
    ]
  },
  {
    "className": "org.apache.coyote.http2.Http2Exception",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http2.Http2OutputBuffer",
    "sensitiveFields": [],
    "securityMethods": [
      "addFilter",
      "end",
      "flush"
    ]
  },
  {
    "className": "org.apache.coyote.http2.Http2Parser",
    "sensitiveFields": [
      "connectionId"
    ],
    "securityMethods": [
      "onHeadersComplete",
      "readConnectionPreface",
      "readContinuationFrame",
      "readDataFrame",
      "readGoawayFrame",
      "readHeaderPayload",
      "readHeadersFrame",
      "readPingFrame",
      "readPriorityFrame",
      "readPushPromiseFrame",
      "readRstFrame",
      "readSettingsFrame",
      "readUnknownFrame",
      "readWindowUpdateFrame",
      "swallow",
      "validateFrame"
    ]
  },
  {
    "className": "org.apache.coyote.http2.Http2Protocol",
    "sensitiveFields": [
      "HTTP_UPGRADE_NAME",
      "ALPN_NAME",
      "ALPN_IDENTIFIER",
      "useSendfile"
    ],
    "securityMethods": [
      "isTrailerHeaderAllowed",
      "setAllowedTrailerHeaders",
      "setCompressibleMimeType",
      "setCompression",
      "setCompressionMinSize",
      "setInitialWindowSize",
      "setInitiatePingDisabled",
      "setKeepAliveTimeout",
      "setMaxConcurrentStreamExecution",
      "setMaxConcurrentStreams",
      "setMaxHeaderCount",
      "setMaxHeaderSize",
      "setMaxTrailerCount",
      "setMaxTrailerSize",
      "setNoCompressionUserAgents",
      "setReadTimeout",
      "setUseSendfile",
      "setWriteTimeout"
    ]
  },
  {
    "className": "org.apache.coyote.http2.Http2UpgradeHandler",
    "sensitiveFields": [
      "connectionIdGenerator",
      "STREAM_ID_ZERO",
      "connectionId",
      "activeRemoteStreamCount",
      "maxActiveRemoteStreamId",
      "maxProcessedStreamId",
      "nextLocalStreamId",
      "streamConcurrency"
    ],
    "securityMethods": [
      "checkPauseState",
      "close",
      "closeConnection",
      "closeIdleStreams",
      "createRemoteStream",
      "destroy",
      "doWriteHeaders",
      "endRequestBodyFrame",
      "executeQueuedStream",
      "getParser",
      "getStream",
      "goaway",
      "handleAppInitiatedIOException",
      "headersEnd",
      "headersStart",
      "incrementWindowSize",
      "incrementWindowSize",
      "init",
      "pause",
      "pingReceive",
      "processSendfile",
      "processStreamOnContainerThread",
      "processStreamOnContainerThread",
      "processWrites",
      "pruneClosedStreams",
      "push",
      "receivedEndOfStream",
      "removeStreamFromPriorityTree",
      "reprioritise",
      "reset",
      "sendStreamReset",
      "setMaxProcessedStream",
      "setSocketWrapper",
      "setSslSupport",
      "setting",
      "settingsEnd",
      "startRequestBodyFrame",
      "swallowed",
      "swallowedPadding",
      "writeBody",
      "writeGoAwayFrame",
      "writeHeaders",
      "writeSettings",
      "writeWindowUpdate"
    ]
  },
  {
    "className": "org.apache.coyote.http2.SendfileData",
    "sensitiveFields": [
      "path"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http2.Setting",
    "sensitiveFields": [
      "id"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http2.Stream",
    "sensitiveFields": [],
    "securityMethods": [
      "addOutputFilter",
      "checkState",
      "close",
      "closeIfIdle",
      "emitHeader",
      "incrementWindowSize",
      "push",
      "push",
      "rePrioritise",
      "rePrioritise",
      "receiveReset",
      "receivedData",
      "receivedEndOfStream",
      "receivedStartOfHeaders",
      "sentEndOfStream",
      "sentPushPromise",
      "setHeaderException",
      "validateHeaders",
      "writeAck",
      "writeHeaders",
      "writeTrailers"
    ]
  },
  {
    "className": "org.apache.coyote.http2.StreamException",
    "sensitiveFields": [
      "serialVersionUID",
      "streamId"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.coyote.http2.StreamProcessor",
    "sensitiveFields": [
      "sendfileData",
      "sendfileState"
    ],
    "securityMethods": [
      "ack",
      "disableSwallowRequest",
      "doPush",
      "executeDispatches",
      "finishResponse",
      "flush",
      "pause",
      "prepareHeaders",
      "prepareResponse",
      "prepareSendfile",
      "process",
      "processSocketEvent",
      "recycle",
      "registerReadInterest",
      "setRequestBody",
      "setSwallowResponse"
    ]
  },
  {
    "className": "org.apache.coyote.http2.StreamRunnable",
    "sensitiveFields": [],
    "securityMethods": [
      "run"
    ]
  },
  {
    "className": "org.apache.coyote.http2.StreamStateMachine",
    "sensitiveFields": [],
    "securityMethods": [
      "checkFrameType",
      "closeIfIdle",
      "receivedEndOfStream",
      "receivedReset",
      "receivedStartOfHeaders",
      "sendReset",
      "sentEndOfStream",
      "sentPushPromise",
      "stateChange"
    ]
  },
  {
    "className": "org.apache.el.MethodExpressionImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "readExternal",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.el.MethodExpressionLiteral",
    "sensitiveFields": [],
    "securityMethods": [
      "readExternal",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.el.ValueExpressionImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "readExternal",
      "setValue",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.el.ValueExpressionLiteral",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "readExternal",
      "setValue",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.el.lang.EvaluationContext",
    "sensitiveFields": [],
    "securityMethods": [
      "addEvaluationListener",
      "enterLambdaScope",
      "exitLambdaScope",
      "getLambdaArgument",
      "isLambdaArgument",
      "notifyAfterEvaluation",
      "notifyBeforeEvaluation",
      "notifyPropertyResolved",
      "putContext",
      "setLocale",
      "setPropertyResolved",
      "setPropertyResolved"
    ]
  },
  {
    "className": "org.apache.el.lang.ExpressionBuilder",
    "sensitiveFields": [],
    "securityMethods": [
      "prepare",
      "visit"
    ]
  },
  {
    "className": "org.apache.el.lang.FunctionMapperFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "mapFunction",
      "resolveFunction"
    ]
  },
  {
    "className": "org.apache.el.lang.FunctionMapperImpl",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "mapFunction",
      "readExternal",
      "resolveFunction",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.el.lang.VariableMapperImpl",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "readExternal",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.el.parser.AstDeferredExpression",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "org.apache.el.parser.AstDotSuffix",
    "sensitiveFields": [],
    "securityMethods": [
      "setImage"
    ]
  },
  {
    "className": "org.apache.el.parser.AstDynamicExpression",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "org.apache.el.parser.AstFunction",
    "sensitiveFields": [
      "localName"
    ],
    "securityMethods": [
      "setLocalName",
      "setPrefix"
    ]
  },
  {
    "className": "org.apache.el.parser.AstIdentifier",
    "sensitiveFields": [],
    "securityMethods": [
      "setImage",
      "setValue"
    ]
  },
  {
    "className": "org.apache.el.parser.AstLambdaExpression",
    "sensitiveFields": [],
    "securityMethods": [
      "setNestedState"
    ]
  },
  {
    "className": "org.apache.el.parser.AstLiteralExpression",
    "sensitiveFields": [],
    "securityMethods": [
      "setImage"
    ]
  },
  {
    "className": "org.apache.el.parser.AstString",
    "sensitiveFields": [],
    "securityMethods": [
      "setImage"
    ]
  },
  {
    "className": "org.apache.el.parser.AstValue",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "org.apache.el.parser.ELParser",
    "sensitiveFields": [
      "token_source",
      "token",
      "jj_expentry",
      "jj_lasttokens"
    ],
    "securityMethods": [
      "And",
      "Assignment",
      "Boolean",
      "BracketSuffix",
      "Choice",
      "Compare",
      "Concatenation",
      "DeferredExpression",
      "DotSuffix",
      "DynamicExpression",
      "Equality",
      "Expression",
      "FloatingPoint",
      "Function",
      "Identifier",
      "Integer",
      "LambdaExpression",
      "LambdaExpressionOrInvocation",
      "LambdaParameters",
      "ListData",
      "Literal",
      "LiteralExpression",
      "MapData",
      "MapEntry",
      "Math",
      "MethodParameters",
      "Multiplication",
      "NonLiteral",
      "Null",
      "Or",
      "ReInit",
      "ReInit",
      "ReInit",
      "ReInit",
      "Semicolon",
      "SetData",
      "String",
      "Unary",
      "Value",
      "ValuePrefix",
      "ValueSuffix",
      "disable_tracing",
      "enable_tracing",
      "getNextToken",
      "getToken",
      "jj_add_error_token",
      "jj_consume_token",
      "jj_la1_init_0",
      "jj_la1_init_1",
      "jj_rescan_token",
      "jj_save"
    ]
  },
  {
    "className": "org.apache.el.parser.ELParserConstants",
    "sensitiveFields": [
      "IDENTIFIER",
      "tokenImage"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.el.parser.ELParserTokenManager",
    "sensitiveFields": [
      "lexStateNames",
      "jjtoToken"
    ],
    "securityMethods": [
      "ReInit",
      "ReInit",
      "ReInitRounds",
      "SwitchTo",
      "TokenLexicalActions",
      "getNextToken",
      "jjAddStates",
      "jjCheckNAdd",
      "jjCheckNAddStates",
      "jjCheckNAddTwoStates",
      "jjFillToken",
      "setDebugStream"
    ]
  },
  {
    "className": "org.apache.el.parser.ELParserTreeConstants",
    "sensitiveFields": [
      "JJTVOID",
      "JJTMAPENTRY",
      "JJTIDENTIFIER",
      "jjtNodeName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.el.parser.JJTELParserState",
    "sensitiveFields": [],
    "securityMethods": [
      "clearNodeScope",
      "closeNodeScope",
      "closeNodeScope",
      "openNodeScope",
      "pushNode",
      "reset"
    ]
  },
  {
    "className": "org.apache.el.parser.Node",
    "sensitiveFields": [],
    "securityMethods": [
      "accept",
      "jjtAddChild",
      "jjtClose",
      "jjtOpen",
      "jjtSetParent",
      "setValue"
    ]
  },
  {
    "className": "org.apache.el.parser.NodeVisitor",
    "sensitiveFields": [],
    "securityMethods": [
      "visit"
    ]
  },
  {
    "className": "org.apache.el.parser.ParseException",
    "sensitiveFields": [
      "serialVersionUID",
      "currentToken",
      "expectedTokenSequences",
      "tokenImage"
    ],
    "securityMethods": [
      "initialise"
    ]
  },
  {
    "className": "org.apache.el.parser.SimpleCharStream",
    "sensitiveFields": [
      "tokenBegin"
    ],
    "securityMethods": [
      "Done",
      "ExpandBuff",
      "FillBuff",
      "ReInit",
      "ReInit",
      "ReInit",
      "ReInit",
      "ReInit",
      "ReInit",
      "ReInit",
      "ReInit",
      "ReInit",
      "UpdateLineColumn",
      "adjustBeginLineColumn",
      "backup",
      "setTabSize"
    ]
  },
  {
    "className": "org.apache.el.parser.SimpleNode",
    "sensitiveFields": [
      "id"
    ],
    "securityMethods": [
      "accept",
      "jjtAddChild",
      "jjtClose",
      "jjtOpen",
      "jjtSetParent",
      "setImage",
      "setValue"
    ]
  },
  {
    "className": "org.apache.el.parser.Token",
    "sensitiveFields": [
      "serialVersionUID",
      "specialToken"
    ],
    "securityMethods": [
      "newToken",
      "newToken"
    ]
  },
  {
    "className": "org.apache.el.parser.TokenMgrError",
    "sensitiveFields": [
      "serialVersionUID",
      "INVALID_LEXICAL_STATE"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.el.stream.Optional",
    "sensitiveFields": [],
    "securityMethods": [
      "ifPresent"
    ]
  },
  {
    "className": "org.apache.el.stream.StreamELResolverImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "org.apache.el.util.ConcurrentCache",
    "sensitiveFields": [],
    "securityMethods": [
      "put"
    ]
  },
  {
    "className": "org.apache.el.util.ReflectionUtil",
    "sensitiveFields": [
      "PRIMITIVE_NAMES"
    ],
    "securityMethods": [
      "forName",
      "forNamePrimitive",
      "resolveAmbiguousMethod"
    ]
  },
  {
    "className": "org.apache.el.util.Validation",
    "sensitiveFields": [
      "invalidIdentifiers",
      "SKIP_IDENTIFIER_CHECK"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.Constants",
    "sensitiveFields": [
      "SERVICE_METHOD_NAME",
      "SERVLET_CLASSPATH",
      "JSP_PACKAGE_NAME",
      "TAG_FILE_PACKAGE_NAME",
      "TEMP_VARIABLE_NAME_PREFIX",
      "SESSION_PARAMETER_NAME",
      "XML_VALIDATION_TLD_INIT_PARAM",
      "XML_BLOCK_EXTERNAL_INIT_PARAM"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.EmbeddedServletOptions",
    "sensitiveFields": [
      "mappedFile",
      "errorOnUseBeanInvalidClassAttribute",
      "ieClassId",
      "classpath",
      "compilerClassName",
      "jspIdleTimeout"
    ],
    "securityMethods": [
      "getProperty",
      "getScratchDir",
      "setErrorOnUseBeanInvalidClassAttribute",
      "setProperty",
      "setQuoteAttributeEL",
      "setTldCache"
    ]
  },
  {
    "className": "org.apache.jasper.JasperException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.JspC",
    "sensitiveFields": [
      "DEFAULT_IE_CLASS_ID",
      "SWITCH_PACKAGE_NAME",
      "SWITCH_CLASS_NAME",
      "SWITCH_FILE_WEBAPP",
      "SWITCH_WEBAPP_XML",
      "SWITCH_WEBAPP_XML_ENCODING",
      "SWITCH_ADD_WEBAPP_XML_MAPPINGS",
      "SWITCH_CLASSPATH",
      "SWITCH_VALIDATE_TLD",
      "SWITCH_VALIDATE_XML",
      "INC_WEBXML",
      "FRG_WEBXML",
      "ALL_WEBXML",
      "classPath",
      "validateTld",
      "validateXml",
      "mappedFile",
      "ieClassId",
      "targetClassName",
      "errorOnUseBeanInvalidClassAttribute",
      "webxmlFile",
      "webxmlLevel",
      "webxmlEncoding",
      "addWebXmlMappings"
    ],
    "securityMethods": [
      "addExtension",
      "completeWebXml",
      "execute",
      "generateWebMapping",
      "getScratchDir",
      "initServletContext",
      "initTldScanner",
      "initWebXml",
      "isValidateTld",
      "isValidateXml",
      "locateUriRoot",
      "main",
      "mergeIntoWebXml",
      "newTldScanner",
      "openWebxmlReader",
      "openWebxmlWriter",
      "processFile",
      "resolveFile",
      "scanFiles",
      "setAddWebXmlMappings",
      "setArgs",
      "setBlockExternal",
      "setCaching",
      "setClassDebugInfo",
      "setClassName",
      "setClassPath",
      "setCompile",
      "setCompiler",
      "setCompilerSourceVM",
      "setCompilerTargetVM",
      "setErrorOnUseBeanInvalidClassAttribute",
      "setFailOnError",
      "setFork",
      "setGenStringAsCharArray",
      "setIeClassId",
      "setJavaEncoding",
      "setJspFiles",
      "setListErrors",
      "setMappedFile",
      "setOutputDir",
      "setPackage",
      "setPoolingEnabled",
      "setQuoteAttributeEL",
      "setSmapDumped",
      "setSmapSuppressed",
      "setStrictQuoteEscaping",
      "setThreadCount",
      "setTrimSpaces",
      "setTrimSpaces",
      "setTrimSpaces",
      "setUriroot",
      "setValidateTld",
      "setValidateXml",
      "setVerbose",
      "setWebFragmentXml",
      "setWebXml",
      "setWebXmlEncoding",
      "setWebXmlFragment",
      "setWebXmlInclude",
      "setXpoweredBy"
    ]
  },
  {
    "className": "org.apache.jasper.JspCompilationContext",
    "sensitiveFields": [
      "className",
      "basePackageName",
      "derivedPackageName",
      "servletJavaFileName",
      "javaPath",
      "classFileName",
      "classPath",
      "isTagFile"
    ],
    "securityMethods": [
      "checkOutputDir",
      "clearJspLoader",
      "compile",
      "createCompiler",
      "createOutputDir",
      "getRealPath",
      "getResourcePaths",
      "getTldResourcePath",
      "incrementRemoved",
      "setBasePackageName",
      "setClassLoader",
      "setClassPath",
      "setPrototypeMode",
      "setServletClassName",
      "setTagFileJar",
      "setTagInfo",
      "setWriter"
    ]
  },
  {
    "className": "org.apache.jasper.Options",
    "sensitiveFields": [],
    "securityMethods": [
      "getScratchDir"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.AntCompiler",
    "sensitiveFields": [],
    "securityMethods": [
      "generateClass"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.AttributeParser",
    "sensitiveFields": [],
    "securityMethods": [
      "parseEL",
      "parseLiteral"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.BeanRepository",
    "sensitiveFields": [],
    "securityMethods": [
      "addBean"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.Collector",
    "sensitiveFields": [],
    "securityMethods": [
      "collect"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.Compiler",
    "sensitiveFields": [],
    "securityMethods": [
      "compile",
      "compile",
      "compile",
      "generateClass",
      "getSmap",
      "init",
      "removeGeneratedClassFiles",
      "removeGeneratedFiles",
      "setupContextWriter"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.DefaultErrorHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "javacError",
      "javacError",
      "jspError",
      "jspError"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ELFunctionMapper",
    "sensitiveFields": [],
    "securityMethods": [
      "map"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ELInterpreter",
    "sensitiveFields": [],
    "securityMethods": [
      "interpreterCall"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ELInterpreterFactory",
    "sensitiveFields": [
      "EL_INTERPRETER_CLASS_NAME"
    ],
    "securityMethods": [
      "createInstance"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ELNode",
    "sensitiveFields": [],
    "securityMethods": [
      "accept"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ELParser",
    "sensitiveFields": [
      "curToken",
      "prevToken"
    ],
    "securityMethods": [
      "isELReserved",
      "nextToken",
      "parseQuotedChars",
      "setIndex",
      "skipSpaces"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.EncodingDetector",
    "sensitiveFields": [
      "XML_INPUT_FACTORY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.compiler.ErrorDispatcher",
    "sensitiveFields": [],
    "securityMethods": [
      "createJavacError",
      "createJavacError",
      "dispatch",
      "javacError",
      "javacError",
      "jspError",
      "jspError",
      "jspError",
      "jspError",
      "jspError",
      "jspError",
      "jspError",
      "parseJavacErrors",
      "parseJavacMessage"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ErrorHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "javacError",
      "javacError",
      "jspError",
      "jspError"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.Generator",
    "sensitiveFields": [
      "VAR_EXPRESSIONFACTORY",
      "varInfoNames",
      "jspIdPrefix",
      "jspId",
      "tagHandlerPoolNames"
    ],
    "securityMethods": [
      "compileTagHandlerPoolList",
      "declareTemporaryScriptingVars",
      "genCommonPostamble",
      "genPreambleClassVariableDeclarations",
      "genPreambleImports",
      "genPreambleMethods",
      "genPreamblePackage",
      "genPreambleStaticInitializers",
      "generate",
      "generateCommentHeader",
      "generateDeclarations",
      "generateDestroy",
      "generateGetters",
      "generateInit",
      "generateLocalVariables",
      "generatePageScopedVariables",
      "generatePostamble",
      "generatePreamble",
      "generateSetDynamicAttribute",
      "generateSetJspContext",
      "generateTagHandlerAttributes",
      "generateTagHandlerPostamble",
      "generateTagHandlerPreamble",
      "generateXmlProlog",
      "toGetterMethod",
      "toSetterMethodName"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ImplicitTagLibraryInfo",
    "sensitiveFields": [
      "TAG_FILE_SUFFIX",
      "TAGX_FILE_SUFFIX",
      "TAGS_SHORTNAME",
      "tagFileMap"
    ],
    "securityMethods": [
      "getTagFile",
      "getTagLibraryInfos"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.JDTCompiler",
    "sensitiveFields": [],
    "securityMethods": [
      "generateClass"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.JasperTagInfo",
    "sensitiveFields": [
      "dynamicAttrsMapName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.compiler.JavacErrorDetail",
    "sensitiveFields": [
      "javaFileName",
      "jspFileName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.compiler.JspConfig",
    "sensitiveFields": [
      "defaultIsXml",
      "defaultIsScriptingInvalid",
      "defaultErrorOnUndeclaredNamespace"
    ],
    "securityMethods": [
      "init",
      "processWebDotXml"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.JspDocumentParser",
    "sensitiveFields": [
      "path",
      "isValidating",
      "isTagFile"
    ],
    "securityMethods": [
      "addInclude",
      "characters",
      "checkPrefix",
      "checkPrefixes",
      "checkScriptingBody",
      "comment",
      "endCDATA",
      "endDTD",
      "endElement",
      "endEntity",
      "endPrefixMapping",
      "error",
      "fatalError",
      "getExternalSubset",
      "getPrefix",
      "getSAXParser",
      "getTaglibInfo",
      "parse",
      "parseCustomAction",
      "parseStandardAction",
      "processChars",
      "processIncludeDirective",
      "resolveEntity",
      "resolveEntity",
      "setDocumentLocator",
      "startCDATA",
      "startDTD",
      "startElement",
      "startEntity",
      "startPrefixMapping"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.JspReader",
    "sensitiveFields": [],
    "securityMethods": [
      "matchesETag",
      "matchesETagWithoutLessThan",
      "pushChar",
      "reset",
      "setCurrent"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.JspRuntimeContext",
    "sensitiveFields": [
      "classpath",
      "jspIdleTimeout"
    ],
    "securityMethods": [
      "addWrapper",
      "checkCompile",
      "checkUnload",
      "destroy",
      "incrementJspReloadCount",
      "makeYoungest",
      "push",
      "removeWrapper",
      "setJspReloadCount",
      "unloadJspServletWrapper"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.JspUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "checkAttributes",
      "checkScope",
      "coerceToBoolean",
      "coerceToByte",
      "coerceToChar",
      "coerceToCharacter",
      "coerceToDouble",
      "coerceToFloat",
      "coerceToInt",
      "coerceToInteger",
      "coerceToLong",
      "coerceToPrimitiveBoolean",
      "coerceToPrimitiveByte",
      "coerceToPrimitiveDouble",
      "coerceToPrimitiveFloat",
      "coerceToPrimitiveLong",
      "coerceToPrimitiveShort",
      "coerceToShort",
      "getInputSource",
      "getInputStream",
      "getReader",
      "getReader",
      "getTagHandlerClassName",
      "interpreterCall",
      "makeJavaIdentifier",
      "makeJavaIdentifier",
      "makeJavaIdentifierForAttribute",
      "makeJavaPackage",
      "split"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.Mark",
    "sensitiveFields": [
      "fileName"
    ],
    "securityMethods": [
      "init",
      "update"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.Node",
    "sensitiveFields": [
      "nonTaglibXmlnsAttrs",
      "namedAttributeNodes",
      "qName",
      "localName",
      "innerClassName"
    ],
    "securityMethods": [
      "accept",
      "addToParent",
      "getAttributeValue",
      "getNamedAttributeNode",
      "getTextAttribute",
      "setAttributes",
      "setBeginJavaLine",
      "setBody",
      "setEndJavaLine",
      "setInnerClassName"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.PageInfo",
    "sensitiveFields": [
      "beanRepository",
      "varInfoNames",
      "jspPrefixMapper",
      "xmlPrefixMapper",
      "nonCustomTagPrefixMap",
      "jspFile",
      "scriptingInvalid",
      "expressionFactory",
      "omitXmlDecl",
      "doctypeName",
      "errorOnUndeclaredNamespace",
      "isTagFile"
    ],
    "securityMethods": [
      "addDependant",
      "addImport",
      "addImports",
      "addPrefix",
      "addPrefixMapping",
      "addTaglib",
      "getBeanRepository",
      "getExpressionFactory",
      "getTaglib",
      "isPluginDeclared",
      "popPrefixMapping",
      "pushPrefixMapping",
      "putNonCustomTagPrefix",
      "setAutoFlush",
      "setBufferValue",
      "setContentType",
      "setDeferredSyntaxAllowedAsLiteral",
      "setDeferredSyntaxAllowedAsLiteral",
      "setDoctypeName",
      "setDoctypePublic",
      "setDoctypeSystem",
      "setELIgnored",
      "setErrorOnUndeclaredNamespace",
      "setErrorPage",
      "setExtends",
      "setHasJspRoot",
      "setIncludeCoda",
      "setIncludePrelude",
      "setInfo",
      "setIsELIgnored",
      "setIsErrorPage",
      "setIsJspPrefixHijacked",
      "setIsThreadSafe",
      "setLanguage",
      "setOmitXmlDecl",
      "setScriptingInvalid",
      "setScriptless",
      "setSession",
      "setTrimDirectiveWhitespaces",
      "setTrimDirectiveWhitespaces"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.Parser",
    "sensitiveFields": [
      "isTagFile"
    ],
    "securityMethods": [
      "addInclude",
      "checkUnbalancedEndTag",
      "getAttributeBodyType",
      "parse",
      "parseAttributeDirective",
      "parseAttributeValue",
      "parseBody",
      "parseComment",
      "parseDeclaration",
      "parseDirective",
      "parseDoBody",
      "parseELExpression",
      "parseElement",
      "parseElements",
      "parseElementsScriptless",
      "parseElementsTemplateText",
      "parseEmptyBody",
      "parseExpression",
      "parseFallBack",
      "parseFileDirectives",
      "parseForward",
      "parseGetProperty",
      "parseInclude",
      "parseIncludeDirective",
      "parseInvoke",
      "parseJspBody",
      "parseJspParams",
      "parseNamedAttributes",
      "parseOptionalBody",
      "parsePageDirective",
      "parseParam",
      "parsePlugin",
      "parsePluginTags",
      "parseScriptlet",
      "parseSetProperty",
      "parseStandardAction",
      "parseTagDependentBody",
      "parseTagDirective",
      "parseTaglibDirective",
      "parseTemplateText",
      "parseUseBean",
      "parseVariableDirective",
      "parseXMLDeclaration",
      "parseXMLDirective",
      "parseXMLExpression",
      "parseXMLScriptlet",
      "parseXMLTemplateText",
      "processIncludeDirective"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ParserController",
    "sensitiveFields": [
      "isXml",
      "isTagFile"
    ],
    "securityMethods": [
      "determineSyntaxAndEncoding",
      "doParse",
      "getJspConfigPageEncoding",
      "getPageEncodingFromDirective",
      "parse",
      "parse",
      "parseDirectives",
      "parseTagFileDirectives",
      "resolveFileName"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ScriptingVariabler",
    "sensitiveFields": [],
    "securityMethods": [
      "set"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.ServletWriter",
    "sensitiveFields": [
      "TAB_WIDTH"
    ],
    "securityMethods": [
      "close",
      "popIndent",
      "print",
      "print",
      "print",
      "printMultiLn",
      "printil",
      "printin",
      "printin",
      "println",
      "println",
      "pushIndent"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.SmapInput",
    "sensitiveFields": [
      "fileName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.compiler.SmapStratum",
    "sensitiveFields": [
      "fileNameList",
      "filePathList",
      "lastFileID",
      "outputFileName",
      "classFileName"
    ],
    "securityMethods": [
      "addFile",
      "addFile",
      "addLineData",
      "addLineInfo",
      "optimizeLineSection",
      "setClassFileName",
      "setOutputFileName"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.SmapUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "evaluateNodes",
      "getSmap",
      "installSmap",
      "loadSmap",
      "unqualify"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.TagFileProcessor",
    "sensitiveFields": [],
    "securityMethods": [
      "loadTagFile",
      "loadTagFiles",
      "parseTagFileDirectives",
      "removeProtoTypeFiles"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.TagLibraryInfoImpl",
    "sensitiveFields": [
      "tagLibraryValidator"
    ],
    "securityMethods": [
      "createTagFileInfo",
      "createTagInfo",
      "createValidator",
      "generateTldResourcePath",
      "getTagLibraryInfos",
      "getTagLibraryValidator",
      "print",
      "validate"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.TagPluginManager",
    "sensitiveFields": [
      "META_INF_JASPER_TAG_PLUGINS_XML",
      "TAG_PLUGINS_XML"
    ],
    "securityMethods": [
      "apply",
      "init",
      "invokePlugin"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.TextOptimizer",
    "sensitiveFields": [],
    "securityMethods": [
      "concatenate"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.TldCache",
    "sensitiveFields": [
      "SERVLET_CONTEXT_ATTRIBUTE_NAME",
      "uriTldResourcePathMap",
      "tldResourcePathTaglibXmlMap"
    ],
    "securityMethods": [
      "getLastModified",
      "getTaglibXml",
      "getTldResourcePath"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.Validator",
    "sensitiveFields": [],
    "securityMethods": [
      "validateDirectives",
      "validateExDirectives",
      "validateXmlView"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.tagplugin.TagPlugin",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.compiler.tagplugin.TagPluginContext",
    "sensitiveFields": [],
    "securityMethods": [
      "dontUseTagPlugin",
      "generateAttribute",
      "generateBody",
      "generateDeclaration",
      "generateImport",
      "generateJavaSource",
      "setPluginAttribute"
    ]
  },
  {
    "className": "org.apache.jasper.el.ELContextImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "getDefaultResolver",
      "setFunctionMapper",
      "setVariableMapper"
    ]
  },
  {
    "className": "org.apache.jasper.el.ELContextWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "putContext",
      "setLocale",
      "setPropertyResolved"
    ]
  },
  {
    "className": "org.apache.jasper.el.ELResolverImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "setValue"
    ]
  },
  {
    "className": "org.apache.jasper.el.ExpressionEvaluatorImpl",
    "sensitiveFields": [
      "factory"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.el.ExpressionImpl",
    "sensitiveFields": [
      "factory"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.el.FunctionMapperImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "resolveFunction"
    ]
  },
  {
    "className": "org.apache.jasper.el.JasperELResolver",
    "sensitiveFields": [],
    "securityMethods": [
      "add"
    ]
  },
  {
    "className": "org.apache.jasper.el.JspELException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.el.JspMethodExpression",
    "sensitiveFields": [],
    "securityMethods": [
      "readExternal",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.jasper.el.JspMethodNotFoundException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.el.JspPropertyNotFoundException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.el.JspPropertyNotWritableException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.jasper.el.JspValueExpression",
    "sensitiveFields": [],
    "securityMethods": [
      "readExternal",
      "setValue",
      "writeExternal"
    ]
  },
  {
    "className": "org.apache.jasper.el.VariableResolverImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "resolveVariable"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.BodyContentImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "clearBuffer",
      "close",
      "ensureOpen",
      "newLine",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "reAllocBuff",
      "recycle",
      "setWriter",
      "write",
      "write",
      "write",
      "write",
      "write",
      "writeOut"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.ExceptionUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "handleThrowable"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.HttpJspBase",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "_jspDestroy",
      "_jspInit",
      "_jspService",
      "destroy",
      "init",
      "jspDestroy",
      "jspInit",
      "service"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.JspApplicationContextImpl",
    "sensitiveFields": [
      "expressionFactory"
    ],
    "securityMethods": [
      "addELContextListener",
      "addELResolver",
      "fireListeners",
      "getExpressionFactory"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.JspContextWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "copyTagToPageScope",
      "findAlias",
      "findAttribute",
      "forward",
      "getAttribute",
      "getAttribute",
      "getAttributesScope",
      "handlePageException",
      "handlePageException",
      "include",
      "include",
      "initialize",
      "release",
      "removeAttribute",
      "removeAttribute",
      "resolveVariable",
      "restoreNestedVariables",
      "saveNestedVariables",
      "setAttribute",
      "setAttribute",
      "syncBeforeInvoke",
      "syncBeginTagFile",
      "syncEndTagFile"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.JspFactoryImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "internalReleasePageContext",
      "releasePageContext"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.JspRuntimeLibrary",
    "sensitiveFields": [],
    "securityMethods": [
      "convert",
      "createTypedArray",
      "getContextRelativePath",
      "getValueFromBeanInfoPropertyEditor",
      "getValueFromPropertyEditorManager",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetProperty",
      "handleSetPropertyExpression",
      "include",
      "introspect",
      "introspecthelper",
      "releaseTag",
      "releaseTag"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.JspWriterImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "bufferOverflow",
      "clear",
      "clearBuffer",
      "close",
      "ensureOpen",
      "flush",
      "flushBuffer",
      "init",
      "initOut",
      "newLine",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "recycle",
      "write",
      "write",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.PageContextImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "findAttribute",
      "forward",
      "getAbsolutePathRelativeToContext",
      "getAttribute",
      "getAttribute",
      "getAttributesScope",
      "handlePageException",
      "handlePageException",
      "include",
      "include",
      "initialize",
      "release",
      "removeAttribute",
      "removeAttribute",
      "setAttribute",
      "setAttribute"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.ProtectedFunctionMapper",
    "sensitiveFields": [],
    "securityMethods": [
      "getMapForFunction",
      "mapFunction",
      "resolveFunction"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.ServletResponseWrapperInclude",
    "sensitiveFields": [],
    "securityMethods": [
      "resetBuffer"
    ]
  },
  {
    "className": "org.apache.jasper.runtime.TagHandlerPool",
    "sensitiveFields": [],
    "securityMethods": [
      "getOption",
      "init",
      "release",
      "reuse"
    ]
  },
  {
    "className": "org.apache.jasper.security.SecurityClassLoad",
    "sensitiveFields": [],
    "securityMethods": [
      "securityClassLoad"
    ]
  },
  {
    "className": "org.apache.jasper.servlet.JasperInitializer",
    "sensitiveFields": [],
    "securityMethods": [
      "newTldScanner",
      "onStartup"
    ]
  },
  {
    "className": "org.apache.jasper.servlet.JasperLoader",
    "sensitiveFields": [],
    "securityMethods": [
      "getResourceAsStream",
      "loadClass",
      "loadClass"
    ]
  },
  {
    "className": "org.apache.jasper.servlet.JspCServletContext",
    "sensitiveFields": [
      "webXml"
    ],
    "securityMethods": [
      "addFilter",
      "addFilter",
      "addFilter",
      "addJspFile",
      "addListener",
      "addListener",
      "addListener",
      "addServlet",
      "addServlet",
      "addServlet",
      "buildMergedWebXml",
      "declareRoles",
      "getAttribute",
      "getContext",
      "getFilterRegistration",
      "getInitParameter",
      "getMimeType",
      "getNamedDispatcher",
      "getRealPath",
      "getRequestDispatcher",
      "getResource",
      "getResourceAsStream",
      "getResourcePaths",
      "getServlet",
      "getServletRegistration",
      "log",
      "log",
      "log",
      "removeAttribute",
      "scanForFragments",
      "setAttribute",
      "setInitParameter",
      "setRequestCharacterEncoding",
      "setResponseCharacterEncoding",
      "setSessionTimeout",
      "setSessionTrackingModes"
    ]
  },
  {
    "className": "org.apache.jasper.servlet.JspServlet",
    "sensitiveFields": [
      "serialVersionUID",
      "jspFile"
    ],
    "securityMethods": [
      "destroy",
      "handleMissingResource",
      "init",
      "periodicEvent",
      "service",
      "serviceJspFile",
      "setJspReloadCount"
    ]
  },
  {
    "className": "org.apache.jasper.servlet.JspServletWrapper",
    "sensitiveFields": [
      "isTagFile",
      "unloadByIdle"
    ],
    "securityMethods": [
      "destroy",
      "getUnloadHandle",
      "service",
      "setCompilationException",
      "setLastModificationTest",
      "setReload",
      "setServletClassLastModifiedTime"
    ]
  },
  {
    "className": "org.apache.jasper.servlet.TldPreScanned",
    "sensitiveFields": [],
    "securityMethods": [
      "scanJars"
    ]
  },
  {
    "className": "org.apache.jasper.servlet.TldScanner",
    "sensitiveFields": [
      "uriTldResourcePathMap",
      "tldResourcePathTaglibXmlMap"
    ],
    "securityMethods": [
      "parseTld",
      "parseTld",
      "scan",
      "scanJars",
      "scanJspConfig",
      "scanPlatform",
      "scanResourcePaths",
      "setClassLoader"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.Util",
    "sensitiveFields": [
      "VALID_SCHEME_CHAR"
    ],
    "securityMethods": [
      "getContentTypeAttribute"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Catch",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Choose",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.ForEach",
    "sensitiveFields": [],
    "securityMethods": [
      "doCollection",
      "doTag",
      "generateIterators"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.ForTokens",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.If",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Import",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Otherwise",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Out",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag",
      "output"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Param",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Redirect",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Remove",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Set",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.Url",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.tagplugins.jstl.core.When",
    "sensitiveFields": [],
    "securityMethods": [
      "doTag"
    ]
  },
  {
    "className": "org.apache.jasper.util.FastRemovalDequeue",
    "sensitiveFields": [],
    "securityMethods": [
      "moveFirst",
      "moveLast",
      "push",
      "remove",
      "unpop"
    ]
  },
  {
    "className": "org.apache.jasper.util.UniqueAttributesImpl",
    "sensitiveFields": [
      "qNames"
    ],
    "securityMethods": [
      "addAttribute",
      "clear",
      "handleDuplicate",
      "removeAttribute",
      "setAttribute",
      "setAttributes",
      "setQName"
    ]
  },
  {
    "className": "org.apache.juli.AsyncFileHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "open",
      "publish",
      "publishInternal"
    ]
  },
  {
    "className": "org.apache.juli.ClassLoaderLogManager",
    "sensitiveFields": [],
    "securityMethods": [
      "doSetParentLogger",
      "findProperty",
      "getLogger",
      "getProperty",
      "readConfiguration",
      "readConfiguration",
      "readConfiguration",
      "readConfiguration",
      "replaceWebApplicationProperties",
      "reset",
      "resetLoggers",
      "setUseShutdownHook",
      "shutdown"
    ]
  },
  {
    "className": "org.apache.juli.FileHandler",
    "sensitiveFields": [
      "DELETE_FILES_SERVICE",
      "directory"
    ],
    "securityMethods": [
      "clean",
      "close",
      "closeWriter",
      "configure",
      "flush",
      "getProperty",
      "obtainDateFromPath",
      "open",
      "openWriter",
      "publish",
      "streamFilesForDelete"
    ]
  },
  {
    "className": "org.apache.juli.OneLineFormatter",
    "sensitiveFields": [
      "UNKNOWN_THREAD_NAME",
      "THREAD_NAME_CACHE_SIZE",
      "threadNameCache"
    ],
    "securityMethods": [
      "addTimestamp",
      "getThreadName",
      "setTimeFormat"
    ]
  },
  {
    "className": "org.apache.juli.logging.DirectJDKLog",
    "sensitiveFields": [],
    "securityMethods": [
      "debug",
      "debug",
      "error",
      "error",
      "fatal",
      "fatal",
      "getInstance",
      "info",
      "info",
      "log",
      "trace",
      "trace",
      "warn",
      "warn"
    ]
  },
  {
    "className": "org.apache.juli.logging.Log",
    "sensitiveFields": [],
    "securityMethods": [
      "debug",
      "debug",
      "error",
      "error",
      "fatal",
      "fatal",
      "info",
      "info",
      "trace",
      "trace",
      "warn",
      "warn"
    ]
  },
  {
    "className": "org.apache.juli.logging.LogConfigurationException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.juli.logging.LogFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getFactory",
      "getInstance",
      "getLog",
      "release"
    ]
  },
  {
    "className": "org.apache.naming.AbstractRef",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.ContextAccessController",
    "sensitiveFields": [
      "securityTokens"
    ],
    "securityMethods": [
      "checkSecurityToken",
      "isWritable",
      "setReadOnly",
      "setSecurityToken",
      "setWritable",
      "unsetSecurityToken"
    ]
  },
  {
    "className": "org.apache.naming.ContextBindings",
    "sensitiveFields": [],
    "securityMethods": [
      "bindClassLoader",
      "bindContext",
      "bindContext",
      "bindThread",
      "unbindClassLoader",
      "unbindContext",
      "unbindThread"
    ]
  },
  {
    "className": "org.apache.naming.EjbRef",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_FACTORY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.HandlerRef",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_FACTORY",
      "HANDLER_NAME",
      "HANDLER_NAMESPACE",
      "HANDLER_PARAMNAME",
      "HANDLER_PORTNAME"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.LookupRef",
    "sensitiveFields": [
      "serialVersionUID",
      "LOOKUP_NAME"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.NameParserImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "parse"
    ]
  },
  {
    "className": "org.apache.naming.NamingContext",
    "sensitiveFields": [
      "nameParser",
      "name"
    ],
    "securityMethods": [
      "addToEnvironment",
      "bind",
      "bind",
      "bind",
      "close",
      "composeName",
      "composeName",
      "createSubcontext",
      "createSubcontext",
      "destroySubcontext",
      "destroySubcontext",
      "getNameParser",
      "getNameParser",
      "list",
      "list",
      "listBindings",
      "listBindings",
      "lookup",
      "lookup",
      "lookup",
      "lookupLink",
      "lookupLink",
      "rebind",
      "rebind",
      "removeFromEnvironment",
      "rename",
      "rename",
      "setExceptionOnFailedWrite",
      "unbind",
      "unbind"
    ]
  },
  {
    "className": "org.apache.naming.NamingContextBindingsEnumeration",
    "sensitiveFields": [],
    "securityMethods": [
      "close"
    ]
  },
  {
    "className": "org.apache.naming.NamingContextEnumeration",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "next",
      "nextElement"
    ]
  },
  {
    "className": "org.apache.naming.NamingEntry",
    "sensitiveFields": [
      "ENTRY",
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.ResourceEnvRef",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_FACTORY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.ResourceLinkRef",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_FACTORY",
      "GLOBALNAME"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.ResourceRef",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_FACTORY",
      "AUTH"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.SelectorContext",
    "sensitiveFields": [],
    "securityMethods": [
      "addToEnvironment",
      "bind",
      "bind",
      "close",
      "composeName",
      "composeName",
      "createSubcontext",
      "createSubcontext",
      "destroySubcontext",
      "destroySubcontext",
      "getNameParser",
      "getNameParser",
      "list",
      "list",
      "listBindings",
      "listBindings",
      "lookup",
      "lookup",
      "lookupLink",
      "lookupLink",
      "parseName",
      "parseName",
      "rebind",
      "rebind",
      "removeFromEnvironment",
      "rename",
      "rename",
      "unbind",
      "unbind"
    ]
  },
  {
    "className": "org.apache.naming.ServiceRef",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_FACTORY",
      "SERVICE_NAMESPACE"
    ],
    "securityMethods": [
      "addHandler"
    ]
  },
  {
    "className": "org.apache.naming.StringManager",
    "sensitiveFields": [],
    "securityMethods": [
      "getManager"
    ]
  },
  {
    "className": "org.apache.naming.TransactionRef",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_FACTORY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.factory.BeanFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.naming.factory.Constants",
    "sensitiveFields": [
      "DEFAULT_RESOURCE_FACTORY",
      "DEFAULT_RESOURCE_LINK_FACTORY",
      "DEFAULT_TRANSACTION_FACTORY",
      "DEFAULT_RESOURCE_ENV_FACTORY",
      "DEFAULT_EJB_FACTORY",
      "DEFAULT_SERVICE_FACTORY",
      "DEFAULT_HANDLER_FACTORY",
      "DBCP_DATASOURCE_FACTORY",
      "OPENEJB_EJB_FACTORY",
      "DEFAULT_LOOKUP_JNDI_FACTORY",
      "FACTORY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.naming.factory.DataSourceLinkFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getObjectInstance",
      "setGlobalContext",
      "wrapDataSource"
    ]
  },
  {
    "className": "org.apache.naming.factory.EjbFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getDefaultFactory"
    ]
  },
  {
    "className": "org.apache.naming.factory.FactoryBase",
    "sensitiveFields": [],
    "securityMethods": [
      "getDefaultFactory",
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.naming.factory.LookupFactory",
    "sensitiveFields": [
      "names"
    ],
    "securityMethods": [
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.naming.factory.MailSessionFactory",
    "sensitiveFields": [
      "factoryType"
    ],
    "securityMethods": [
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.naming.factory.OpenEjbFactory",
    "sensitiveFields": [
      "DEFAULT_OPENEJB_FACTORY"
    ],
    "securityMethods": [
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.naming.factory.ResourceEnvFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getDefaultFactory"
    ]
  },
  {
    "className": "org.apache.naming.factory.ResourceFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getDefaultFactory"
    ]
  },
  {
    "className": "org.apache.naming.factory.ResourceLinkFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "deregisterGlobalResourceAccess",
      "deregisterGlobalResourceAccess",
      "getObjectInstance",
      "registerGlobalResourceAccess",
      "setGlobalContext",
      "validateGlobalContext",
      "validateGlobalResourceAccess"
    ]
  },
  {
    "className": "org.apache.naming.factory.SendMailFactory",
    "sensitiveFields": [
      "DataSourceClassName"
    ],
    "securityMethods": [
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.naming.factory.TransactionFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getDefaultFactory"
    ]
  },
  {
    "className": "org.apache.naming.factory.webservices.ServiceProxy",
    "sensitiveFields": [
      "portQNameClass"
    ],
    "securityMethods": [
      "setPortComponentRef"
    ]
  },
  {
    "className": "org.apache.naming.factory.webservices.ServiceRefFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getObjectInstance",
      "initHandlerChain"
    ]
  },
  {
    "className": "org.apache.naming.java.javaURLContextFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getObjectInstance"
    ]
  },
  {
    "className": "org.apache.tomcat.ContextBind",
    "sensitiveFields": [],
    "securityMethods": [
      "unbind"
    ]
  },
  {
    "className": "org.apache.tomcat.InstanceManager",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "destroyInstance",
      "newInstance",
      "newInstance"
    ]
  },
  {
    "className": "org.apache.tomcat.InstanceManagerBindings",
    "sensitiveFields": [],
    "securityMethods": [
      "bind",
      "unbind"
    ]
  },
  {
    "className": "org.apache.tomcat.InstrumentableClassLoader",
    "sensitiveFields": [],
    "securityMethods": [
      "addTransformer",
      "removeTransformer"
    ]
  },
  {
    "className": "org.apache.tomcat.Jar",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "getInputStream",
      "getLastModified",
      "getURL",
      "nextEntry",
      "reset"
    ]
  },
  {
    "className": "org.apache.tomcat.JarScanFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "check"
    ]
  },
  {
    "className": "org.apache.tomcat.JarScanner",
    "sensitiveFields": [],
    "securityMethods": [
      "scan",
      "setJarScanFilter"
    ]
  },
  {
    "className": "org.apache.tomcat.JarScannerCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "scan",
      "scan",
      "scanWebInfClasses"
    ]
  },
  {
    "className": "org.apache.tomcat.PeriodicEventListener",
    "sensitiveFields": [],
    "securityMethods": [
      "periodicEvent"
    ]
  },
  {
    "className": "org.apache.tomcat.SimpleInstanceManager",
    "sensitiveFields": [],
    "securityMethods": [
      "destroyInstance",
      "newInstance",
      "newInstance"
    ]
  },
  {
    "className": "org.apache.tomcat.buildutil.CheckEol",
    "sensitiveFields": [
      "filesets"
    ],
    "securityMethods": [
      "addFileset",
      "check",
      "execute"
    ]
  },
  {
    "className": "org.apache.tomcat.buildutil.SignCode",
    "sensitiveFields": [
      "SOAP_MSG_FACTORY",
      "filesets",
      "userName",
      "password",
      "keyStorePassword",
      "applicationName"
    ],
    "securityMethods": [
      "addCredentials",
      "addFileset",
      "downloadSignedFiles",
      "execute",
      "extractFilesFromApplicationString",
      "getApplicationString",
      "getFileNames",
      "makeSigningRequest",
      "populateEnvelope",
      "setApplicationName",
      "setApplicationVersion",
      "setDebug",
      "setKeyStore",
      "setKeyStorePassword",
      "setPartnerCode",
      "setPassword",
      "setSigningService",
      "setUserName"
    ]
  },
  {
    "className": "org.apache.tomcat.buildutil.Txt2Html",
    "sensitiveFields": [
      "filesets"
    ],
    "securityMethods": [
      "addFileset",
      "convert",
      "execute",
      "setTodir"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.AbandonedTrace",
    "sensitiveFields": [],
    "securityMethods": [
      "addTrace",
      "clearTrace",
      "init",
      "removeTrace",
      "setLastUsed",
      "setLastUsed"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.BasicDataSource",
    "sensitiveFields": [
      "defaultQueryTimeoutSeconds",
      "driverClassName",
      "maxIdle",
      "minIdle",
      "minEvictableIdleTimeMillis",
      "softMinEvictableIdleTimeMillis",
      "evictionPolicyClassName",
      "testWhileIdle",
      "password",
      "userName",
      "validationQuery",
      "validationQueryTimeoutSeconds",
      "jmxName",
      "fastFailValidation",
      "registeredJmxObjectName"
    ],
    "securityMethods": [
      "addConnectionProperty",
      "close",
      "closeConnectionPool",
      "createConnectionFactory",
      "createConnectionPool",
      "createObjectPool",
      "createPoolableConnectionFactory",
      "getLoginTimeout",
      "getRegisteredJmxName",
      "invalidateConnection",
      "isAccessToUnderlyingConnectionAllowed",
      "jmxRegister",
      "log",
      "postDeregister",
      "postRegister",
      "preDeregister",
      "preRegister",
      "removeConnectionProperty",
      "setAbandonedLogWriter",
      "setAbandonedUsageTracking",
      "setAccessToUnderlyingConnectionAllowed",
      "setCacheState",
      "setConnectionInitSqls",
      "setConnectionProperties",
      "setDefaultAutoCommit",
      "setDefaultCatalog",
      "setDefaultQueryTimeout",
      "setDefaultReadOnly",
      "setDefaultSchema",
      "setDefaultTransactionIsolation",
      "setDisconnectionSqlCodes",
      "setDriver",
      "setDriverClassLoader",
      "setDriverClassName",
      "setEnableAutoCommitOnReturn",
      "setEvictionPolicyClassName",
      "setFastFailValidation",
      "setInitialSize",
      "setJmxName",
      "setLifo",
      "setLogAbandoned",
      "setLogExpiredConnections",
      "setLogWriter",
      "setLoginTimeout",
      "setMaxConnLifetimeMillis",
      "setMaxIdle",
      "setMaxOpenPreparedStatements",
      "setMaxTotal",
      "setMaxWaitMillis",
      "setMinEvictableIdleTimeMillis",
      "setMinIdle",
      "setNumTestsPerEvictionRun",
      "setPassword",
      "setPoolPreparedStatements",
      "setRemoveAbandonedOnBorrow",
      "setRemoveAbandonedOnMaintenance",
      "setRemoveAbandonedTimeout",
      "setRollbackOnReturn",
      "setSoftMinEvictableIdleTimeMillis",
      "setTestOnBorrow",
      "setTestOnCreate",
      "setTestOnReturn",
      "setTestWhileIdle",
      "setTimeBetweenEvictionRunsMillis",
      "setUrl",
      "setUsername",
      "setValidationQuery",
      "setValidationQueryTimeout",
      "startPoolMaintenance",
      "updateJmxName",
      "validateConnectionFactory"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory",
    "sensitiveFields": [
      "PROP_DRIVERCLASSNAME",
      "PROP_MAXIDLE",
      "PROP_MINIDLE",
      "PROP_MINEVICTABLEIDLETIMEMILLIS",
      "PROP_SOFTMINEVICTABLEIDLETIMEMILLIS",
      "PROP_EVICTIONPOLICYCLASSNAME",
      "PROP_TESTWHILEIDLE",
      "PROP_PASSWORD",
      "PROP_USERNAME",
      "PROP_VALIDATIONQUERY",
      "PROP_VALIDATIONQUERY_TIMEOUT",
      "PROP_JMX_NAME",
      "PROP_DEFAULT_QUERYTIMEOUT",
      "PROP_FASTFAIL_VALIDATION",
      "SILENTPROP_FACTORY",
      "SILENTPROP_AUTH"
    ],
    "securityMethods": [
      "getObjectInstance",
      "validatePropertyNames"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.BasicDataSourceMXBean",
    "sensitiveFields": [],
    "securityMethods": [
      "isAccessToUnderlyingConnectionAllowed"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DataSourceConnectionFactory",
    "sensitiveFields": [
      "userName",
      "userPassword"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DelegatingCallableStatement",
    "sensitiveFields": [],
    "securityMethods": [
      "getArray",
      "getBigDecimal",
      "getBlob",
      "getBoolean",
      "getByte",
      "getBytes",
      "getCharacterStream",
      "getClob",
      "getDate",
      "getDate",
      "getDouble",
      "getFloat",
      "getInt",
      "getLong",
      "getNCharacterStream",
      "getNClob",
      "getNString",
      "getObject",
      "getObject",
      "getObject",
      "getRef",
      "getRowId",
      "getRowId",
      "getSQLXML",
      "getSQLXML",
      "getShort",
      "getString",
      "getTime",
      "getTime",
      "getTimestamp",
      "getTimestamp",
      "getURL",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "registerOutParameter",
      "setAsciiStream",
      "setAsciiStream",
      "setAsciiStream",
      "setBigDecimal",
      "setBinaryStream",
      "setBinaryStream",
      "setBinaryStream",
      "setBlob",
      "setBlob",
      "setBlob",
      "setBoolean",
      "setByte",
      "setBytes",
      "setCharacterStream",
      "setCharacterStream",
      "setCharacterStream",
      "setClob",
      "setClob",
      "setClob",
      "setDate",
      "setDate",
      "setDouble",
      "setFloat",
      "setInt",
      "setLong",
      "setNCharacterStream",
      "setNCharacterStream",
      "setNClob",
      "setNClob",
      "setNClob",
      "setNString",
      "setNull",
      "setNull",
      "setObject",
      "setObject",
      "setObject",
      "setObject",
      "setObject",
      "setRowId",
      "setSQLXML",
      "setShort",
      "setString",
      "setTime",
      "setTime",
      "setTimestamp",
      "setTimestamp",
      "setURL"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DelegatingConnection",
    "sensitiveFields": [
      "defaultQueryTimeoutSeconds"
    ],
    "securityMethods": [
      "abort",
      "activate",
      "checkOpen",
      "clearCachedState",
      "clearWarnings",
      "close",
      "closeInternal",
      "commit",
      "createArrayOf",
      "createSQLXML",
      "createStruct",
      "getClientInfo",
      "handleException",
      "initializeStatement",
      "passivate",
      "prepareStatement",
      "releaseSavepoint",
      "rollback",
      "rollback",
      "setAutoCommit",
      "setCacheState",
      "setCatalog",
      "setClientInfo",
      "setClientInfo",
      "setClosedInternal",
      "setDefaultQueryTimeout",
      "setDelegate",
      "setHoldability",
      "setNetworkTimeout",
      "setReadOnly",
      "setSavepoint",
      "setSchema",
      "setTransactionIsolation",
      "setTypeMap"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DelegatingDatabaseMetaData",
    "sensitiveFields": [],
    "securityMethods": [
      "getAttributes",
      "getColumnPrivileges",
      "getColumns",
      "getFunctionColumns",
      "getFunctions",
      "getProcedureColumns",
      "getProcedures",
      "getPseudoColumns",
      "getRowIdLifetime",
      "getSuperTables",
      "getSuperTypes",
      "getTablePrivileges",
      "getTables",
      "getUDTs",
      "handleException"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DelegatingPreparedStatement",
    "sensitiveFields": [],
    "securityMethods": [
      "addBatch",
      "clearParameters",
      "setArray",
      "setAsciiStream",
      "setAsciiStream",
      "setAsciiStream",
      "setBigDecimal",
      "setBinaryStream",
      "setBinaryStream",
      "setBinaryStream",
      "setBlob",
      "setBlob",
      "setBlob",
      "setBoolean",
      "setByte",
      "setBytes",
      "setCharacterStream",
      "setCharacterStream",
      "setCharacterStream",
      "setClob",
      "setClob",
      "setClob",
      "setDate",
      "setDate",
      "setDouble",
      "setFloat",
      "setInt",
      "setLong",
      "setNCharacterStream",
      "setNCharacterStream",
      "setNClob",
      "setNClob",
      "setNClob",
      "setNString",
      "setNull",
      "setNull",
      "setObject",
      "setObject",
      "setObject",
      "setObject",
      "setObject",
      "setRef",
      "setRowId",
      "setSQLXML",
      "setShort",
      "setString",
      "setTime",
      "setTime",
      "setTimestamp",
      "setTimestamp",
      "setURL",
      "setUnicodeStream"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DelegatingResultSet",
    "sensitiveFields": [],
    "securityMethods": [
      "afterLast",
      "beforeFirst",
      "cancelRowUpdates",
      "clearWarnings",
      "close",
      "deleteRow",
      "findColumn",
      "getArray",
      "getAsciiStream",
      "getBigDecimal",
      "getBigDecimal",
      "getBinaryStream",
      "getBlob",
      "getBoolean",
      "getByte",
      "getBytes",
      "getCharacterStream",
      "getClob",
      "getDate",
      "getDate",
      "getDouble",
      "getFloat",
      "getInt",
      "getLong",
      "getObject",
      "getObject",
      "getRef",
      "getRowId",
      "getRowId",
      "getSQLXML",
      "getSQLXML",
      "getShort",
      "getString",
      "getTime",
      "getTime",
      "getTimestamp",
      "getTimestamp",
      "getURL",
      "getUnicodeStream",
      "handleException",
      "insertRow",
      "moveToCurrentRow",
      "moveToInsertRow",
      "refreshRow",
      "setFetchDirection",
      "setFetchSize",
      "updateArray",
      "updateArray",
      "updateAsciiStream",
      "updateAsciiStream",
      "updateAsciiStream",
      "updateAsciiStream",
      "updateAsciiStream",
      "updateAsciiStream",
      "updateBigDecimal",
      "updateBigDecimal",
      "updateBinaryStream",
      "updateBinaryStream",
      "updateBinaryStream",
      "updateBinaryStream",
      "updateBinaryStream",
      "updateBinaryStream",
      "updateBlob",
      "updateBlob",
      "updateBlob",
      "updateBlob",
      "updateBlob",
      "updateBlob",
      "updateBoolean",
      "updateBoolean",
      "updateByte",
      "updateByte",
      "updateBytes",
      "updateBytes",
      "updateCharacterStream",
      "updateCharacterStream",
      "updateCharacterStream",
      "updateCharacterStream",
      "updateCharacterStream",
      "updateCharacterStream",
      "updateClob",
      "updateClob",
      "updateClob",
      "updateClob",
      "updateClob",
      "updateClob",
      "updateDate",
      "updateDate",
      "updateDouble",
      "updateDouble",
      "updateFloat",
      "updateFloat",
      "updateInt",
      "updateInt",
      "updateLong",
      "updateLong",
      "updateNCharacterStream",
      "updateNCharacterStream",
      "updateNCharacterStream",
      "updateNCharacterStream",
      "updateNClob",
      "updateNClob",
      "updateNClob",
      "updateNClob",
      "updateNClob",
      "updateNClob",
      "updateNString",
      "updateNString",
      "updateNull",
      "updateNull",
      "updateObject",
      "updateObject",
      "updateObject",
      "updateObject",
      "updateObject",
      "updateObject",
      "updateObject",
      "updateObject",
      "updateRef",
      "updateRef",
      "updateRow",
      "updateRowId",
      "updateRowId",
      "updateSQLXML",
      "updateSQLXML",
      "updateShort",
      "updateShort",
      "updateString",
      "updateString",
      "updateTime",
      "updateTime",
      "updateTimestamp",
      "updateTimestamp"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DelegatingStatement",
    "sensitiveFields": [],
    "securityMethods": [
      "activate",
      "addBatch",
      "cancel",
      "checkOpen",
      "clearBatch",
      "clearWarnings",
      "close",
      "closeOnCompletion",
      "execute",
      "executeLargeUpdate",
      "executeUpdate",
      "finalize",
      "handleException",
      "passivate",
      "setClosedInternal",
      "setCursorName",
      "setDelegate",
      "setEscapeProcessing",
      "setFetchDirection",
      "setFetchSize",
      "setLargeMaxRows",
      "setLastUsedInParent",
      "setMaxFieldSize",
      "setMaxRows",
      "setPoolable",
      "setQueryTimeout"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.DriverManagerConnectionFactory",
    "sensitiveFields": [
      "userName",
      "userPassword"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.LifetimeExceededException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.ListException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.ObjectNameWrapper",
    "sensitiveFields": [
      "objectName"
    ],
    "securityMethods": [
      "registerMBean",
      "unregisterMBean",
      "unwrap",
      "unwrap",
      "wrap",
      "wrap"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PStmtKey",
    "sensitiveFields": [
      "columnNames"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolableCallableStatement",
    "sensitiveFields": [],
    "securityMethods": [
      "activate",
      "close",
      "passivate"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolableConnection",
    "sensitiveFields": [
      "jmxObjectName",
      "validationPreparedStatement",
      "lastValidationSql",
      "fastFailValidation"
    ],
    "securityMethods": [
      "close",
      "handleException",
      "passivate",
      "reallyClose",
      "validate"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory",
    "sensitiveFields": [
      "connectionFactory",
      "dataSourceJmxObjectName",
      "validationQuery",
      "validationQueryTimeoutSeconds",
      "fastFailValidation",
      "defaultQueryTimeoutSeconds"
    ],
    "securityMethods": [
      "activateObject",
      "destroyObject",
      "getConnectionFactory",
      "getDataSourceJmxName",
      "initializeConnection",
      "passivateObject",
      "setCacheState",
      "setConnectionInitSql",
      "setDefaultAutoCommit",
      "setDefaultCatalog",
      "setDefaultQueryTimeout",
      "setDefaultReadOnly",
      "setDefaultSchema",
      "setDefaultTransactionIsolation",
      "setDisconnectionSqlCodes",
      "setEnableAutoCommitOnReturn",
      "setFastFailValidation",
      "setMaxConnLifetimeMillis",
      "setMaxOpenPreparedStatements",
      "setMaxOpenPrepatedStatements",
      "setPool",
      "setPoolStatements",
      "setRollbackOnReturn",
      "setValidationQuery",
      "setValidationQueryTimeout",
      "validateConnection",
      "validateLifetime",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolableConnectionMXBean",
    "sensitiveFields": [],
    "securityMethods": [
      "clearCachedState",
      "clearWarnings",
      "close",
      "reallyClose",
      "setAutoCommit",
      "setCacheState",
      "setCatalog",
      "setHoldability",
      "setReadOnly",
      "setSchema",
      "setTransactionIsolation"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolablePreparedStatement",
    "sensitiveFields": [],
    "securityMethods": [
      "activate",
      "addBatch",
      "clearBatch",
      "close",
      "passivate"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolingConnection",
    "sensitiveFields": [],
    "securityMethods": [
      "activateObject",
      "close",
      "createKey",
      "destroyObject",
      "passivateObject",
      "prepareStatement",
      "setStatementPool",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolingDataSource",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "getConnection",
      "getLoginTimeout",
      "isAccessToUnderlyingConnectionAllowed",
      "setAccessToUnderlyingConnectionAllowed",
      "setLogWriter",
      "setLoginTimeout"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.PoolingDriver",
    "sensitiveFields": [],
    "securityMethods": [
      "closePool",
      "getConnectionPool",
      "invalidateConnection",
      "isAccessToUnderlyingConnectionAllowed",
      "registerPool"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.SwallowedExceptionLogger",
    "sensitiveFields": [],
    "securityMethods": [
      "onSwallowException"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.Utils",
    "sensitiveFields": [],
    "securityMethods": [
      "closeQuietly",
      "closeQuietly",
      "closeQuietly"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.cpdsadapter.ConnectionImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "isAccessToUnderlyingConnectionAllowed",
      "prepareStatement"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS",
    "sensitiveFields": [
      "KEY_PASSWORD",
      "serialVersionUID",
      "userName",
      "userPassword",
      "maxIdle",
      "minEvictableIdleTimeMillis"
    ],
    "securityMethods": [
      "assertInitializationAllowed",
      "getLoginTimeout",
      "getObjectInstance",
      "getPooledConnection",
      "isAccessToUnderlyingConnectionAllowed",
      "setAccessToUnderlyingConnectionAllowed",
      "setConnectionProperties",
      "setDescription",
      "setDriver",
      "setLogWriter",
      "setLoginTimeout",
      "setMaxIdle",
      "setMaxPreparedStatements",
      "setMinEvictableIdleTimeMillis",
      "setNumTestsPerEvictionRun",
      "setPassword",
      "setPassword",
      "setPoolPreparedStatements",
      "setTimeBetweenEvictionRunsMillis",
      "setUrl",
      "setUser",
      "update"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.cpdsadapter.PooledConnectionImpl",
    "sensitiveFields": [],
    "securityMethods": [
      "activateObject",
      "addConnectionEventListener",
      "addStatementEventListener",
      "assertOpen",
      "close",
      "createKey",
      "destroyObject",
      "finalize",
      "isAccessToUnderlyingConnectionAllowed",
      "notifyListeners",
      "passivateObject",
      "prepareStatement",
      "removeConnectionEventListener",
      "removeStatementEventListener",
      "setAccessToUnderlyingConnectionAllowed",
      "setStatementPool",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.CPDSConnectionFactory",
    "sensitiveFields": [
      "validationQuery",
      "validationQueryTimeoutSeconds",
      "rollbackAfterValidation",
      "userName",
      "userPassword",
      "validatingSet"
    ],
    "securityMethods": [
      "activateObject",
      "closePool",
      "connectionClosed",
      "connectionErrorOccurred",
      "destroyObject",
      "doDestroyObject",
      "invalidate",
      "passivateObject",
      "setMaxConnLifetimeMillis",
      "setPassword",
      "setPassword",
      "setPool",
      "validateLifetime",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.InstanceKeyDataSource",
    "sensitiveFields": [
      "serialVersionUID",
      "dataSourceName",
      "defaultEvictionPolicyClassName",
      "defaultMaxIdle",
      "defaultMinEvictableIdleTimeMillis",
      "defaultMinIdle",
      "defaultSoftMinEvictableIdleTimeMillis",
      "defaultTestWhileIdle",
      "validationQuery",
      "validationQueryTimeoutSeconds",
      "rollbackAfterValidation"
    ],
    "securityMethods": [
      "assertInitializationAllowed",
      "close",
      "closeDueToException",
      "getConnection",
      "getLoginTimeout",
      "getPooledConnectionAndInfo",
      "setConnectionPoolDataSource",
      "setDataSourceName",
      "setDefaultAutoCommit",
      "setDefaultBlockWhenExhausted",
      "setDefaultEvictionPolicyClassName",
      "setDefaultLifo",
      "setDefaultMaxIdle",
      "setDefaultMaxTotal",
      "setDefaultMaxWaitMillis",
      "setDefaultMinEvictableIdleTimeMillis",
      "setDefaultMinIdle",
      "setDefaultNumTestsPerEvictionRun",
      "setDefaultReadOnly",
      "setDefaultSoftMinEvictableIdleTimeMillis",
      "setDefaultTestOnBorrow",
      "setDefaultTestOnCreate",
      "setDefaultTestOnReturn",
      "setDefaultTestWhileIdle",
      "setDefaultTimeBetweenEvictionRunsMillis",
      "setDefaultTransactionIsolation",
      "setDescription",
      "setJndiEnvironment",
      "setJndiEnvironment",
      "setLogWriter",
      "setLoginTimeout",
      "setMaxConnLifetimeMillis",
      "setRollbackAfterValidation",
      "setValidationQuery",
      "setValidationQueryTimeout",
      "setupDefaults",
      "testCPDS"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.InstanceKeyDataSourceFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "closeAll",
      "getObjectInstance",
      "isCorrectClass",
      "removeInstance",
      "setCommonProperties"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.KeyedCPDSConnectionFactory",
    "sensitiveFields": [
      "validationQuery",
      "validationQueryTimeoutSeconds",
      "rollbackAfterValidation",
      "validatingSet"
    ],
    "securityMethods": [
      "activateObject",
      "closePool",
      "connectionClosed",
      "connectionErrorOccurred",
      "destroyObject",
      "invalidate",
      "passivateObject",
      "setMaxConnLifetimeMillis",
      "setPassword",
      "setPool",
      "validateLifetime",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource",
    "sensitiveFields": [
      "serialVersionUID",
      "perUserEvictionPolicyClassName",
      "perUserMaxIdle",
      "perUserMinEvictableIdleTimeMillis",
      "perUserMinIdle",
      "perUserSoftMinEvictableIdleTimeMillis",
      "perUserTestWhileIdle"
    ],
    "securityMethods": [
      "clear",
      "close",
      "getNumActive",
      "getNumIdle",
      "getPerUserBlockWhenExhausted",
      "getPerUserDefaultAutoCommit",
      "getPerUserDefaultReadOnly",
      "getPerUserDefaultTransactionIsolation",
      "getPerUserEvictionPolicyClassName",
      "getPerUserLifo",
      "getPerUserMaxIdle",
      "getPerUserMaxTotal",
      "getPerUserMaxWaitMillis",
      "getPerUserMinEvictableIdleTimeMillis",
      "getPerUserMinIdle",
      "getPerUserNumTestsPerEvictionRun",
      "getPerUserSoftMinEvictableIdleTimeMillis",
      "getPerUserTestOnBorrow",
      "getPerUserTestOnCreate",
      "getPerUserTestOnReturn",
      "getPerUserTestWhileIdle",
      "getPerUserTimeBetweenEvictionRunsMillis",
      "getPoolKey",
      "getPooledConnectionAndInfo",
      "readObject",
      "registerPool",
      "setPerUserBlockWhenExhausted",
      "setPerUserBlockWhenExhausted",
      "setPerUserDefaultAutoCommit",
      "setPerUserDefaultAutoCommit",
      "setPerUserDefaultReadOnly",
      "setPerUserDefaultReadOnly",
      "setPerUserDefaultTransactionIsolation",
      "setPerUserDefaultTransactionIsolation",
      "setPerUserEvictionPolicyClassName",
      "setPerUserEvictionPolicyClassName",
      "setPerUserLifo",
      "setPerUserLifo",
      "setPerUserMaxIdle",
      "setPerUserMaxIdle",
      "setPerUserMaxTotal",
      "setPerUserMaxTotal",
      "setPerUserMaxWaitMillis",
      "setPerUserMaxWaitMillis",
      "setPerUserMinEvictableIdleTimeMillis",
      "setPerUserMinEvictableIdleTimeMillis",
      "setPerUserMinIdle",
      "setPerUserMinIdle",
      "setPerUserNumTestsPerEvictionRun",
      "setPerUserNumTestsPerEvictionRun",
      "setPerUserSoftMinEvictableIdleTimeMillis",
      "setPerUserSoftMinEvictableIdleTimeMillis",
      "setPerUserTestOnBorrow",
      "setPerUserTestOnBorrow",
      "setPerUserTestOnCreate",
      "setPerUserTestOnCreate",
      "setPerUserTestOnReturn",
      "setPerUserTestOnReturn",
      "setPerUserTestWhileIdle",
      "setPerUserTestWhileIdle",
      "setPerUserTimeBetweenEvictionRunsMillis",
      "setPerUserTimeBetweenEvictionRunsMillis",
      "setupDefaults"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSourceFactory",
    "sensitiveFields": [
      "PER_USER_POOL_CLASSNAME"
    ],
    "securityMethods": [
      "isCorrectClass"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.PoolKey",
    "sensitiveFields": [
      "serialVersionUID",
      "dataSourceName",
      "userName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.PooledConnectionAndInfo",
    "sensitiveFields": [
      "userPassword",
      "userName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.PooledConnectionManager",
    "sensitiveFields": [],
    "securityMethods": [
      "closePool",
      "invalidate",
      "setPassword"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSource",
    "sensitiveFields": [
      "serialVersionUID",
      "factory"
    ],
    "securityMethods": [
      "close",
      "getPooledConnectionAndInfo",
      "readObject",
      "registerPool",
      "setMaxTotal",
      "setupDefaults"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.SharedPoolDataSourceFactory",
    "sensitiveFields": [
      "SHARED_POOL_CLASSNAME"
    ],
    "securityMethods": [
      "isCorrectClass"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.datasources.UserPassKey",
    "sensitiveFields": [
      "serialVersionUID",
      "userName",
      "userPassword"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.BasicManagedDataSource",
    "sensitiveFields": [
      "transactionRegistry",
      "transactionSynchronizationRegistry"
    ],
    "securityMethods": [
      "createConnectionFactory",
      "createPoolableConnectionFactory",
      "getTransactionRegistry",
      "getTransactionSynchronizationRegistry",
      "setTransactionManager",
      "setTransactionSynchronizationRegistry",
      "setXADataSource",
      "setXaDataSourceInstance"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.DataSourceXAConnectionFactory",
    "sensitiveFields": [
      "transactionRegistry",
      "userName",
      "userPassword"
    ],
    "securityMethods": [
      "getTransactionRegistry",
      "setPassword",
      "setPassword",
      "setUsername"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.LocalXAConnectionFactory",
    "sensitiveFields": [
      "transactionRegistry",
      "connectionFactory"
    ],
    "securityMethods": [
      "getTransactionRegistry"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.ManagedConnection",
    "sensitiveFields": [
      "transactionRegistry"
    ],
    "securityMethods": [
      "checkOpen",
      "close",
      "commit",
      "isAccessToUnderlyingConnectionAllowed",
      "rollback",
      "setAutoCommit",
      "setReadOnly",
      "transactionComplete",
      "updateTransactionStatus"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.ManagedDataSource",
    "sensitiveFields": [
      "transactionRegistry"
    ],
    "securityMethods": [
      "setTransactionRegistry"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.PoolableManagedConnection",
    "sensitiveFields": [
      "transactionRegistry"
    ],
    "securityMethods": [
      "reallyClose"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.PoolableManagedConnectionFactory",
    "sensitiveFields": [
      "transactionRegistry"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.TransactionContext",
    "sensitiveFields": [
      "transactionRegistry",
      "transactionSynchronizationRegistry"
    ],
    "securityMethods": [
      "addTransactionContextListener",
      "completeTransaction",
      "setSharedConnection"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.TransactionContextListener",
    "sensitiveFields": [],
    "securityMethods": [
      "afterCompletion"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.TransactionRegistry",
    "sensitiveFields": [
      "transactionSynchronizationRegistry"
    ],
    "securityMethods": [
      "registerConnection",
      "unregisterConnection"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.dbcp2.managed.XAConnectionFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getTransactionRegistry"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.BaseKeyedPooledObjectFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "activateObject",
      "destroyObject",
      "passivateObject",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.BaseObject",
    "sensitiveFields": [],
    "securityMethods": [
      "toStringAppendFields"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.BaseObjectPool",
    "sensitiveFields": [],
    "securityMethods": [
      "addObject",
      "assertOpen",
      "clear",
      "close",
      "invalidateObject",
      "returnObject",
      "toStringAppendFields"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.BasePooledObjectFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "activateObject",
      "destroyObject",
      "passivateObject",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.KeyedObjectPool",
    "sensitiveFields": [],
    "securityMethods": [
      "addObject",
      "clear",
      "clear",
      "close",
      "invalidateObject",
      "returnObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.KeyedPooledObjectFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "activateObject",
      "destroyObject",
      "passivateObject",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.ObjectPool",
    "sensitiveFields": [],
    "securityMethods": [
      "addObject",
      "clear",
      "close",
      "invalidateObject",
      "returnObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.PoolUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "checkMinIdle",
      "checkMinIdle",
      "checkMinIdle",
      "checkRethrow",
      "prefill",
      "prefill",
      "prefill",
      "synchronizedKeyedPooledFactory",
      "synchronizedPooledFactory"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.PooledObject",
    "sensitiveFields": [],
    "securityMethods": [
      "endEvictionTest",
      "invalidate",
      "markAbandoned",
      "markReturning",
      "printStackTrace",
      "setLogAbandoned",
      "use"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.PooledObjectFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "activateObject",
      "destroyObject",
      "passivateObject",
      "validateObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.PooledObjectState",
    "sensitiveFields": [
      "IDLE",
      "VALIDATION",
      "VALIDATION_PREALLOCATED",
      "VALIDATION_RETURN_TO_HEAD",
      "INVALID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.SwallowedExceptionListener",
    "sensitiveFields": [],
    "securityMethods": [
      "onSwallowException"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.UsageTracking",
    "sensitiveFields": [],
    "securityMethods": [
      "use"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.AbandonedConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "setLogAbandoned",
      "setLogWriter",
      "setRemoveAbandonedOnBorrow",
      "setRemoveAbandonedOnMaintenance",
      "setRemoveAbandonedTimeout",
      "setRequireFullStackTrace",
      "setUseUsageTracking"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.BaseGenericObjectPool",
    "sensitiveFields": [
      "EVICTION_POLICY_TYPE_NAME",
      "testWhileIdle",
      "minEvictableIdleTimeMillis",
      "softMinEvictableIdleTimeMillis",
      "factoryClassLoader",
      "objectName",
      "destroyedByBorrowValidationCount",
      "idleTimes"
    ],
    "securityMethods": [
      "assertOpen",
      "close",
      "ensureMinIdle",
      "evict",
      "getJmxName",
      "jmxRegister",
      "jmxUnregister",
      "markReturningState",
      "setBlockWhenExhausted",
      "setConfig",
      "setEvictionPolicy",
      "setEvictionPolicy",
      "setEvictionPolicyClassName",
      "setEvictionPolicyClassName",
      "setEvictorShutdownTimeoutMillis",
      "setLifo",
      "setMaxTotal",
      "setMaxWaitMillis",
      "setMinEvictableIdleTimeMillis",
      "setNumTestsPerEvictionRun",
      "setSoftMinEvictableIdleTimeMillis",
      "setSwallowedExceptionListener",
      "setTestOnBorrow",
      "setTestOnCreate",
      "setTestOnReturn",
      "setTestWhileIdle",
      "setTimeBetweenEvictionRunsMillis",
      "startEvictor",
      "swallowException",
      "toStringAppendFields",
      "updateStatsBorrow",
      "updateStatsReturn"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.BaseObjectPoolConfig",
    "sensitiveFields": [
      "DEFAULT_MIN_EVICTABLE_IDLE_TIME_MILLIS",
      "DEFAULT_SOFT_MIN_EVICTABLE_IDLE_TIME_MILLIS",
      "DEFAULT_TEST_WHILE_IDLE",
      "DEFAULT_JMX_NAME_PREFIX",
      "DEFAULT_JMX_NAME_BASE",
      "DEFAULT_EVICTION_POLICY_CLASS_NAME",
      "minEvictableIdleTimeMillis",
      "softMinEvictableIdleTimeMillis",
      "evictionPolicyClassName",
      "testWhileIdle",
      "jmxNamePrefix",
      "jmxNameBase"
    ],
    "securityMethods": [
      "setBlockWhenExhausted",
      "setEvictionPolicy",
      "setEvictionPolicyClassName",
      "setEvictorShutdownTimeoutMillis",
      "setFairness",
      "setJmxEnabled",
      "setJmxNameBase",
      "setJmxNamePrefix",
      "setLifo",
      "setMaxWaitMillis",
      "setMinEvictableIdleTimeMillis",
      "setNumTestsPerEvictionRun",
      "setSoftMinEvictableIdleTimeMillis",
      "setTestOnBorrow",
      "setTestOnCreate",
      "setTestOnReturn",
      "setTestWhileIdle",
      "setTimeBetweenEvictionRunsMillis",
      "toStringAppendFields"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.CallStack",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "fillInStackTrace"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.DefaultEvictionPolicy",
    "sensitiveFields": [],
    "securityMethods": [
      "evict"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.DefaultPooledObject",
    "sensitiveFields": [],
    "securityMethods": [
      "endEvictionTest",
      "invalidate",
      "markAbandoned",
      "markReturning",
      "printStackTrace",
      "setLogAbandoned",
      "setRequireFullStackTrace",
      "use"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.EvictionConfig",
    "sensitiveFields": [
      "idleEvictTime",
      "idleSoftEvictTime",
      "minIdle"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.EvictionPolicy",
    "sensitiveFields": [],
    "securityMethods": [
      "evict"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.EvictionTimer",
    "sensitiveFields": [],
    "securityMethods": [
      "cancel",
      "schedule"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.GenericKeyedObjectPool",
    "sensitiveFields": [
      "maxIdlePerKey",
      "minIdlePerKey",
      "factory",
      "ONAME_BASE"
    ],
    "securityMethods": [
      "addIdleObject",
      "addObject",
      "clear",
      "clear",
      "clearOldest",
      "close",
      "deregister",
      "ensureMinIdle",
      "ensureMinIdle",
      "evict",
      "getFactory",
      "invalidateObject",
      "preparePool",
      "returnObject",
      "reuseCapacity",
      "setConfig",
      "setMaxIdlePerKey",
      "setMaxTotalPerKey",
      "setMinIdlePerKey",
      "toStringAppendFields",
      "whenWaitersAddObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.GenericKeyedObjectPoolConfig",
    "sensitiveFields": [
      "DEFAULT_MIN_IDLE_PER_KEY",
      "DEFAULT_MAX_IDLE_PER_KEY",
      "minIdlePerKey",
      "maxIdlePerKey"
    ],
    "securityMethods": [
      "setMaxIdlePerKey",
      "setMaxTotal",
      "setMaxTotalPerKey",
      "setMinIdlePerKey",
      "toStringAppendFields"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.GenericObjectPool",
    "sensitiveFields": [
      "factoryType",
      "maxIdle",
      "minIdle",
      "factory",
      "idleObjects",
      "ONAME_BASE"
    ],
    "securityMethods": [
      "addIdleObject",
      "addObject",
      "clear",
      "close",
      "destroy",
      "ensureIdle",
      "ensureMinIdle",
      "evict",
      "getFactory",
      "invalidateObject",
      "preparePool",
      "removeAbandoned",
      "returnObject",
      "setAbandonedConfig",
      "setConfig",
      "setMaxIdle",
      "setMinIdle",
      "toStringAppendFields",
      "use"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.GenericObjectPoolConfig",
    "sensitiveFields": [
      "DEFAULT_MAX_IDLE",
      "DEFAULT_MIN_IDLE",
      "maxIdle",
      "minIdle"
    ],
    "securityMethods": [
      "setMaxIdle",
      "setMaxTotal",
      "setMinIdle",
      "toStringAppendFields"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.InterruptibleReentrantLock",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "interruptWaiters"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.LinkedBlockingDeque",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "addFirst",
      "addLast",
      "clear",
      "interuptTakeWaiters",
      "push",
      "put",
      "putFirst",
      "putLast",
      "readObject",
      "unlink",
      "writeObject"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.NoOpCallStack",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "fillInStackTrace"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.PoolImplUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "getFactoryType"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.PooledSoftReference",
    "sensitiveFields": [],
    "securityMethods": [
      "setReference"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.SecurityManagerCallStack",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "fillInStackTrace"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.SoftReferenceObjectPool",
    "sensitiveFields": [
      "factory",
      "idleReferences"
    ],
    "securityMethods": [
      "addObject",
      "clear",
      "close",
      "destroy",
      "getFactory",
      "invalidateObject",
      "pruneClearedReferences",
      "removeClearedReferences",
      "returnObject",
      "toStringAppendFields"
    ]
  },
  {
    "className": "org.apache.tomcat.dbcp.pool2.impl.ThrowableCallStack",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "fillInStackTrace"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Address",
    "sensitiveFields": [],
    "securityMethods": [
      "getservbyname",
      "info"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Buffer",
    "sensitiveFields": [],
    "securityMethods": [
      "free"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.CertificateVerifier",
    "sensitiveFields": [],
    "securityMethods": [
      "verify"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Directory",
    "sensitiveFields": [],
    "securityMethods": [
      "make",
      "makeRecursive",
      "open",
      "remove"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Error",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.jni.File",
    "sensitiveFields": [
      "APR_FOPEN_BINARY",
      "APR_FOPEN_SENDFILE_ENABLED",
      "APR_FOPEN_LARGEFILE",
      "APR_FILE_ATTR_READONLY",
      "APR_FILE_ATTR_EXECUTABLE",
      "APR_FILE_ATTR_HIDDEN",
      "APR_NOFILE",
      "APR_UNKFILE",
      "APR_FPROT_USETID",
      "APR_FPROT_GSETID",
      "APR_FINFO_NAME",
      "APR_FINFO_IDENT"
    ],
    "securityMethods": [
      "append",
      "attrsSet",
      "close",
      "copy",
      "dup",
      "dup2",
      "flagsGet",
      "flush",
      "getInfo",
      "getStat",
      "getc",
      "gets",
      "infoGet",
      "lock",
      "mtimeSet",
      "nameGet",
      "open",
      "permsSet",
      "putc",
      "puts",
      "read",
      "readFull",
      "readFullb",
      "readb",
      "remove",
      "rename",
      "seek",
      "stat",
      "ungetc",
      "unlock",
      "write",
      "writeFull",
      "writeFullb",
      "writeb",
      "writev",
      "writevFull"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.FileInfo",
    "sensitiveFields": [
      "valid",
      "filetype",
      "fname",
      "name",
      "filehand"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.jni.Global",
    "sensitiveFields": [],
    "securityMethods": [
      "childInit",
      "create"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Library",
    "sensitiveFields": [
      "NAMES",
      "APR_HAS_SHARED_MEMORY",
      "APR_HAS_SENDFILE",
      "APR_HAS_LARGE_FILES",
      "APR_HAS_XTHREAD_FILES",
      "APR_HAS_OS_UUID",
      "APR_FILES_AS_SOCKETS",
      "APR_SIZEOF_VOIDP",
      "APR_PATH_MAX"
    ],
    "securityMethods": [
      "initialize",
      "terminate"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.LibraryNotFoundError",
    "sensitiveFields": [
      "serialVersionUID",
      "libraryNames"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.jni.Local",
    "sensitiveFields": [],
    "securityMethods": [
      "create"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Lock",
    "sensitiveFields": [],
    "securityMethods": [
      "childInit",
      "create"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Mmap",
    "sensitiveFields": [],
    "securityMethods": [
      "create"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.OS",
    "sensitiveFields": [],
    "securityMethods": [
      "syslog",
      "sysloginit"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Poll",
    "sensitiveFields": [
      "APR_POLL_FILE"
    ],
    "securityMethods": [
      "setTtl"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Pool",
    "sensitiveFields": [],
    "securityMethods": [
      "cleanupForExec",
      "cleanupKill",
      "clear",
      "destroy",
      "noteSubprocess"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Proc",
    "sensitiveFields": [
      "APR_PROGRAM_PATH",
      "APR_LIMIT_NOFILE"
    ],
    "securityMethods": [
      "create"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.ProcErrorCallback",
    "sensitiveFields": [],
    "securityMethods": [
      "callback"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Procattr",
    "sensitiveFields": [],
    "securityMethods": [
      "errfnSet",
      "groupSet",
      "userSet"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Registry",
    "sensitiveFields": [
      "KEY_QUERY_VALUE",
      "REG_BINARY"
    ],
    "securityMethods": [
      "create",
      "deleteKey",
      "deleteValue",
      "getSize",
      "getType",
      "getValueA",
      "getValueB",
      "getValueI",
      "getValueJ",
      "getValueS",
      "open",
      "setValueA",
      "setValueB",
      "setValueE",
      "setValueI",
      "setValueJ",
      "setValueS"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.SSL",
    "sensitiveFields": [
      "SSL_AIDX_RSA",
      "SSL_AIDX_DSA",
      "SSL_AIDX_ECC",
      "SSL_AIDX_MAX",
      "SSL_OPT_FAKEBASICAUTH",
      "SSL_OP_MICROSOFT_SESS_ID_BUG",
      "SSL_CONF_FLAG_FILE",
      "SSL_CONF_TYPE_FILE",
      "SSL_INFO_SESSION_ID",
      "SSL_INFO_DN_COUNTRYNAME",
      "SSL_INFO_DN_STATEORPROVINCENAME",
      "SSL_INFO_DN_LOCALITYNAME",
      "SSL_INFO_DN_ORGANIZATIONNAME",
      "SSL_INFO_DN_ORGANIZATIONALUNITNAME",
      "SSL_INFO_DN_COMMONNAME",
      "SSL_INFO_DN_GIVENNAME",
      "SSL_INFO_DN_SURNAME",
      "SSL_INFO_DN_UNIQUEIDENTIFIER"
    ],
    "securityMethods": [
      "freeBIO",
      "freeSSL",
      "randLoad",
      "randMake",
      "randSave",
      "randSet",
      "setBIO",
      "setOptions",
      "setPassword",
      "setPasswordCallback",
      "setShutdown",
      "setVerify"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.SSLConf",
    "sensitiveFields": [],
    "securityMethods": [
      "apply",
      "assign",
      "check",
      "free"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.SSLContext",
    "sensitiveFields": [
      "DEFAULT_SESSION_ID_CONTEXT"
    ],
    "securityMethods": [
      "clearOptions",
      "registerDefault",
      "setAlpnProtos",
      "setBIO",
      "setCACertificate",
      "setCARevocation",
      "setCertVerifyCallback",
      "setCertificate",
      "setCertificateChainFile",
      "setCertificateRaw",
      "setContextId",
      "setNextProtos",
      "setNpnProtos",
      "setOptions",
      "setQuietShutdown",
      "setRandom",
      "setSessionIdContext",
      "setSessionTicketKeys",
      "setShutdownType",
      "setTmpDH",
      "setTmpECDHByCurveName",
      "setVerify",
      "sniCallBack",
      "unregisterDefault"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.SSLSocket",
    "sensitiveFields": [],
    "securityMethods": [
      "getInfoB",
      "getInfoI",
      "getInfoS",
      "setVerify"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Shm",
    "sensitiveFields": [],
    "securityMethods": [
      "attach",
      "create",
      "remove"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Sockaddr",
    "sensitiveFields": [
      "hostname",
      "servname"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.jni.Socket",
    "sensitiveFields": [],
    "securityMethods": [
      "acceptfilter",
      "destroy",
      "sendfile",
      "sendfilen",
      "setrbb",
      "setsbb"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Status",
    "sensitiveFields": [
      "APR_EBADPATH",
      "APR_EPATHWILD",
      "APR_FILEBASED"
    ],
    "securityMethods": [
      "is"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Stdlib",
    "sensitiveFields": [],
    "securityMethods": [
      "free"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.Time",
    "sensitiveFields": [],
    "securityMethods": [
      "sleep"
    ]
  },
  {
    "className": "org.apache.tomcat.jni.User",
    "sensitiveFields": [],
    "securityMethods": [
      "gid",
      "groupname",
      "homepath",
      "uid",
      "usergid",
      "username"
    ]
  },
  {
    "className": "org.apache.tomcat.util.Diagnostics",
    "sensitiveFields": [
      "memoryMXBean",
      "memoryManagerMXBeans",
      "memoryPoolMXBeans"
    ],
    "securityMethods": [
      "formatMemoryUsage",
      "gc",
      "resetPeakThreadCount",
      "resetPeakUsage",
      "setCollectionUsageThreshold",
      "setLoggerLevel",
      "setThreadContentionMonitoringEnabled",
      "setThreadCpuTimeEnabled",
      "setUsageThreshold",
      "setVerboseClassLoading",
      "setVerboseGarbageCollection"
    ]
  },
  {
    "className": "org.apache.tomcat.util.ExceptionUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "handleThrowable",
      "preload"
    ]
  },
  {
    "className": "org.apache.tomcat.util.IntrospectionUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "capitalize",
      "clear",
      "findMethod",
      "getProperty",
      "setProperty",
      "setProperty"
    ]
  },
  {
    "className": "org.apache.tomcat.util.MultiThrowable",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "add"
    ]
  },
  {
    "className": "org.apache.tomcat.util.bcel.Const",
    "sensitiveFields": [
      "CONSTANT_NameAndType",
      "CONSTANT_NAMES"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.AnnotationElementValue",
    "sensitiveFields": [
      "annotationEntry"
    ],
    "securityMethods": [
      "getAnnotationEntry"
    ]
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.Annotations",
    "sensitiveFields": [],
    "securityMethods": [
      "getAnnotationEntries"
    ]
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.ClassElementValue",
    "sensitiveFields": [
      "idx"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.ClassFormatException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.ClassParser",
    "sensitiveFields": [
      "class_name",
      "superclass_name",
      "interface_names"
    ],
    "securityMethods": [
      "readAttributes",
      "readClassInfo",
      "readConstantPool",
      "readFields",
      "readID",
      "readInterfaces",
      "readMethods",
      "readVersion"
    ]
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.ConstantClass",
    "sensitiveFields": [
      "name_index"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.ElementValuePair",
    "sensitiveFields": [
      "elementNameIndex"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.EnumElementValue",
    "sensitiveFields": [
      "valueIdx"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.JavaClass",
    "sensitiveFields": [
      "class_name",
      "superclass_name",
      "interface_names"
    ],
    "securityMethods": [
      "getAccessFlags",
      "getAnnotationEntries"
    ]
  },
  {
    "className": "org.apache.tomcat.util.bcel.classfile.Utility",
    "sensitiveFields": [],
    "securityMethods": [
      "skipFully",
      "swallowAttribute",
      "swallowFieldOrMethod"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.AbstractChunk",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "recycle",
      "setEnd",
      "setLimit",
      "setOffset"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.B2CConverter",
    "sensitiveFields": [],
    "securityMethods": [
      "convert",
      "convert",
      "recycle"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.ByteBufferUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "cleanDirectBuffer"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.ByteChunk",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "allocate",
      "append",
      "append",
      "append",
      "append",
      "flushBuffer",
      "makeSpace",
      "readObject",
      "recycle",
      "setByteInputChannel",
      "setByteOutputChannel",
      "setBytes",
      "setCharset",
      "writeObject"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.C2BConverter",
    "sensitiveFields": [],
    "securityMethods": [
      "convert",
      "convert",
      "recycle"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.CharChunk",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "allocate",
      "append",
      "append",
      "append",
      "append",
      "append",
      "flushBuffer",
      "makeSpace",
      "setCharInputChannel",
      "setCharOutputChannel",
      "setChars",
      "setOptimizedWrite"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.MessageBytes",
    "sensitiveFields": [
      "serialVersionUID",
      "factory"
    ],
    "securityMethods": [
      "duplicate",
      "recycle",
      "setBytes",
      "setChars",
      "setCharset",
      "setLong",
      "setString",
      "toBytes",
      "toChars"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.StringCache",
    "sensitiveFields": [],
    "securityMethods": [
      "compare",
      "compare",
      "find",
      "find",
      "findClosest",
      "findClosest",
      "getAccessCount",
      "reset",
      "setByteEnabled",
      "setCacheSize",
      "setCharEnabled",
      "setTrainThreshold"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.StringUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "join",
      "join",
      "join",
      "join"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.UDecoder",
    "sensitiveFields": [],
    "securityMethods": [
      "convert",
      "convert",
      "convert",
      "convert"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.UEncoder",
    "sensitiveFields": [],
    "securityMethods": [
      "urlEncode"
    ]
  },
  {
    "className": "org.apache.tomcat.util.buf.UriUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "buildJarSafeUrl",
      "buildJarUrl",
      "buildJarUrl",
      "buildJarUrl",
      "buildJarUrl"
    ]
  },
  {
    "className": "org.apache.tomcat.util.codec.binary.Base64",
    "sensitiveFields": [],
    "securityMethods": [
      "decode",
      "encode",
      "encodeBase64",
      "encodeBase64",
      "encodeBase64",
      "encodeBase64",
      "encodeBase64Chunked",
      "encodeBase64String",
      "encodeBase64URLSafe",
      "encodeBase64URLSafeString"
    ]
  },
  {
    "className": "org.apache.tomcat.util.codec.binary.BaseNCodec",
    "sensitiveFields": [],
    "securityMethods": [
      "decode",
      "encode"
    ]
  },
  {
    "className": "org.apache.tomcat.util.collections.CaseInsensitiveKeyMap",
    "sensitiveFields": [],
    "securityMethods": [
      "putAll"
    ]
  },
  {
    "className": "org.apache.tomcat.util.collections.ConcurrentCache",
    "sensitiveFields": [],
    "securityMethods": [
      "put"
    ]
  },
  {
    "className": "org.apache.tomcat.util.collections.ManagedConcurrentWeakHashMap",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "maintain"
    ]
  },
  {
    "className": "org.apache.tomcat.util.collections.SynchronizedQueue",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "expand"
    ]
  },
  {
    "className": "org.apache.tomcat.util.collections.SynchronizedStack",
    "sensitiveFields": [],
    "securityMethods": [
      "clear",
      "expand"
    ]
  },
  {
    "className": "org.apache.tomcat.util.compat.Jre9Compat",
    "sensitiveFields": [
      "jarFileConstructor"
    ],
    "securityMethods": [
      "addBootModulePath",
      "disableCachingForJarUrlConnections",
      "isInstanceOfInaccessibleObjectException",
      "jarFileIsMultiRelease",
      "jarFileNewInstance",
      "setApplicationProtocols"
    ]
  },
  {
    "className": "org.apache.tomcat.util.compat.JreCompat",
    "sensitiveFields": [],
    "securityMethods": [
      "addBootModulePath",
      "disableCachingForJarUrlConnections",
      "isInstanceOfInaccessibleObjectException",
      "jarFileIsMultiRelease",
      "jarFileNewInstance",
      "jarFileNewInstance",
      "setApplicationProtocols"
    ]
  },
  {
    "className": "org.apache.tomcat.util.compat.JrePlatform",
    "sensitiveFields": [
      "OS_NAME_PROPERTY",
      "OS_NAME_WINDOWS_PREFIX"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.descriptor.Constants",
    "sensitiveFields": [
      "PACKAGE_NAME"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.descriptor.DigesterFactory",
    "sensitiveFields": [
      "SERVLET_API_PUBLIC_IDS",
      "SERVLET_API_SYSTEM_IDS"
    ],
    "securityMethods": [
      "add",
      "addSelf",
      "locationFor",
      "newDigester"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.InputSourceUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "close"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.LocalResolver",
    "sensitiveFields": [
      "JAVA_EE_NAMESPACES",
      "publicIds",
      "systemIds"
    ],
    "securityMethods": [
      "getExternalSubset",
      "resolveEntity",
      "resolveEntity"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.XmlErrorHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "error",
      "fatalError",
      "logFindings",
      "warning"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.XmlIdentifiers",
    "sensitiveFields": [
      "XML_2001_XSD"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser",
    "sensitiveFields": [],
    "securityMethods": [
      "addPlugin",
      "parse"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.ImplicitTldRuleSet",
    "sensitiveFields": [
      "VALIDATOR_PREFIX",
      "TAGFILE_PREFIX"
    ],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.TagFileXml",
    "sensitiveFields": [
      "name",
      "path",
      "displayName"
    ],
    "securityMethods": [
      "setDisplayName",
      "setInfo",
      "setLargeIcon",
      "setName",
      "setPath",
      "setSmallIcon"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.TagXml",
    "sensitiveFields": [
      "name",
      "displayName"
    ],
    "securityMethods": [
      "setBodyContent",
      "setDisplayName",
      "setDynamicAttributes",
      "setInfo",
      "setLargeIcon",
      "setName",
      "setSmallIcon",
      "setTagClass",
      "setTeiClass"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.TaglibXml",
    "sensitiveFields": [
      "shortName",
      "validator",
      "tagFiles"
    ],
    "securityMethods": [
      "addFunction",
      "addListener",
      "addTag",
      "addTagFile",
      "getValidator",
      "setInfo",
      "setJspVersion",
      "setShortName",
      "setTlibVersion",
      "setUri",
      "setValidator"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.TldParser",
    "sensitiveFields": [],
    "securityMethods": [
      "parse",
      "setClassLoader"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.TldResourcePath",
    "sensitiveFields": [
      "webappPath",
      "entryName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.TldRuleSet",
    "sensitiveFields": [
      "VALIDATOR_PREFIX",
      "TAGFILE_PREFIX"
    ],
    "securityMethods": [
      "addDescriptionGroup",
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.tld.ValidatorXml",
    "sensitiveFields": [
      "validatorClass"
    ],
    "securityMethods": [
      "addInitParam",
      "setValidatorClass"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.AbsoluteOrderingRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ApplicationParameter",
    "sensitiveFields": [
      "serialVersionUID",
      "name",
      "override"
    ],
    "securityMethods": [
      "setDescription",
      "setName",
      "setOverride",
      "setValue"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.CallMethodMultiRule",
    "sensitiveFields": [],
    "securityMethods": [
      "end"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.CallParamMultiRule",
    "sensitiveFields": [],
    "securityMethods": [
      "end"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.Constants",
    "sensitiveFields": [
      "PACKAGE_NAME",
      "WEB_XML_LOCATION"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextEjb",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "setHome",
      "setLink",
      "setRemote"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextEnvironment",
    "sensitiveFields": [
      "serialVersionUID",
      "override"
    ],
    "securityMethods": [
      "setOverride",
      "setValue"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextHandler",
    "sensitiveFields": [
      "serialVersionUID",
      "portNames"
    ],
    "securityMethods": [
      "addPortName",
      "addSoapHeaders",
      "addSoapRole",
      "setHandlerclass",
      "setProperty"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextLocalEjb",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "setHome",
      "setLink",
      "setLocal"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextResource",
    "sensitiveFields": [
      "serialVersionUID",
      "auth"
    ],
    "securityMethods": [
      "getAuth",
      "setAuth",
      "setCloseMethod",
      "setScope",
      "setSingleton"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef",
    "sensitiveFields": [
      "serialVersionUID",
      "override"
    ],
    "securityMethods": [
      "setOverride"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextResourceLink",
    "sensitiveFields": [
      "serialVersionUID",
      "factory"
    ],
    "securityMethods": [
      "setFactory",
      "setGlobal"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextService",
    "sensitiveFields": [
      "serialVersionUID",
      "displayname",
      "wsdlfile",
      "jaxrpcmappingfile",
      "serviceqname"
    ],
    "securityMethods": [
      "addHandler",
      "addPortcomponent",
      "getHandler",
      "setDisplayname",
      "setInterface",
      "setJaxrpcmappingfile",
      "setLargeIcon",
      "setServiceqname",
      "setServiceqname",
      "setServiceqnameLocalpart",
      "setServiceqnameNamespaceURI",
      "setSmallIcon",
      "setWsdlfile"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ContextTransaction",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "getProperty",
      "removeProperty",
      "setProperty"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ErrorPage",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "setErrorCode",
      "setErrorCode",
      "setExceptionType",
      "setLocation"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.FilterDef",
    "sensitiveFields": [
      "serialVersionUID",
      "displayName",
      "filterName"
    ],
    "securityMethods": [
      "addInitParameter",
      "setAsyncSupported",
      "setDescription",
      "setDisplayName",
      "setFilter",
      "setFilterClass",
      "setFilterName",
      "setLargeIcon",
      "setSmallIcon"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.FilterMap",
    "sensitiveFields": [
      "serialVersionUID",
      "filterName",
      "servletNames",
      "matchAllServletNames"
    ],
    "securityMethods": [
      "addServletName",
      "addURLPattern",
      "addURLPatternDecoded",
      "setDispatcher",
      "setFilterName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback",
    "sensitiveFields": [
      "webXmlParser"
    ],
    "securityMethods": [
      "scan",
      "scan",
      "scanWebInfClasses"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.IgnoreAnnotationsRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.Injectable",
    "sensitiveFields": [],
    "securityMethods": [
      "addInjectionTarget"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.InjectionTarget",
    "sensitiveFields": [
      "serialVersionUID",
      "targetName"
    ],
    "securityMethods": [
      "setTargetClass",
      "setTargetName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.JspPropertyGroup",
    "sensitiveFields": [
      "isXml",
      "scriptingInvalid",
      "errorOnUndeclaredNamespace"
    ],
    "securityMethods": [
      "addIncludeCoda",
      "addIncludePrelude",
      "addUrlPattern",
      "addUrlPatternDecoded",
      "setBuffer",
      "setDefaultContentType",
      "setDeferredSyntax",
      "setElIgnored",
      "setErrorOnUndeclaredNamespace",
      "setIsXml",
      "setPageEncoding",
      "setScriptingInvalid",
      "setTrimWhitespace"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.LifecycleCallbackRule",
    "sensitiveFields": [],
    "securityMethods": [
      "end"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.LoginConfig",
    "sensitiveFields": [
      "serialVersionUID",
      "authMethod",
      "realmName"
    ],
    "securityMethods": [
      "getAuthMethod",
      "getLoginPage",
      "setAuthMethod",
      "setErrorPage",
      "setLoginPage",
      "setRealmName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.MappedNameRule",
    "sensitiveFields": [],
    "securityMethods": [
      "body"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.MessageDestination",
    "sensitiveFields": [
      "serialVersionUID",
      "displayName"
    ],
    "securityMethods": [
      "setDisplayName",
      "setLargeIcon",
      "setSmallIcon"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.MessageDestinationRef",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "setLink",
      "setUsage"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.MultipartDef",
    "sensitiveFields": [
      "serialVersionUID",
      "maxFileSize",
      "fileSizeThreshold"
    ],
    "securityMethods": [
      "setFileSizeThreshold",
      "setLocation",
      "setMaxFileSize",
      "setMaxRequestSize"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.NameRule",
    "sensitiveFields": [
      "isNameSet"
    ],
    "securityMethods": [
      "begin",
      "body"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.NamingResources",
    "sensitiveFields": [],
    "securityMethods": [
      "addEnvironment",
      "addResource",
      "addResourceLink",
      "removeEnvironment",
      "removeResource",
      "removeResourceLink"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.RelativeOrderingRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ResourceBase",
    "sensitiveFields": [
      "serialVersionUID",
      "name",
      "lookupName"
    ],
    "securityMethods": [
      "addInjectionTarget",
      "getProperty",
      "removeProperty",
      "setDescription",
      "setLookupName",
      "setName",
      "setNamingResources",
      "setProperty",
      "setType"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SecurityCollection",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": [
      "addMethod",
      "addOmittedMethod",
      "addPattern",
      "addPatternDecoded",
      "removeMethod",
      "removeOmittedMethod",
      "removePattern",
      "setDescription",
      "setFromDescriptor",
      "setName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SecurityConstraint",
    "sensitiveFields": [
      "serialVersionUID",
      "ROLE_ALL_AUTHENTICATED_USERS",
      "authenticatedUsers",
      "authConstraint",
      "authRoles",
      "displayName"
    ],
    "securityMethods": [
      "addAuthRole",
      "addCollection",
      "findAuthRole",
      "findAuthRoles",
      "findCollection",
      "getAuthConstraint",
      "getAuthenticatedUsers",
      "handleOmittedMethods",
      "matchPattern",
      "removeAuthRole",
      "removeCollection",
      "setAuthConstraint",
      "setDisplayName",
      "setUserConstraint",
      "treatAllAuthenticatedUsersAsApplicationRole"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SecurityRoleRef",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": [
      "setLink",
      "setName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ServiceQnameRule",
    "sensitiveFields": [],
    "securityMethods": [
      "body"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ServletDef",
    "sensitiveFields": [
      "serialVersionUID",
      "displayName",
      "servletName",
      "jspFile",
      "overridable"
    ],
    "securityMethods": [
      "addInitParameter",
      "addSecurityRoleRef",
      "setAsyncSupported",
      "setDescription",
      "setDisplayName",
      "setEnabled",
      "setJspFile",
      "setLargeIcon",
      "setLoadOnStartup",
      "setMultipartDef",
      "setOverridable",
      "setRunAs",
      "setServletClass",
      "setServletName",
      "setSmallIcon"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.ServletDefCreateRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin",
      "end"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SessionConfig",
    "sensitiveFields": [
      "cookieName",
      "cookiePath"
    ],
    "securityMethods": [
      "addSessionTrackingMode",
      "setCookieComment",
      "setCookieDomain",
      "setCookieHttpOnly",
      "setCookieMaxAge",
      "setCookieName",
      "setCookiePath",
      "setCookieSecure",
      "setSessionTimeout"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetAuthConstraintRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetDenyUncoveredHttpMethodsRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetDistributableRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetJspConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetLoginConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetOverrideRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetPublicIdRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SetSessionConfig",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.SoapHeaderRule",
    "sensitiveFields": [],
    "securityMethods": [
      "body"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.TaglibLocationRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.VersionRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.WebRuleSet",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "addRuleInstances",
      "configureInjectionRules",
      "configureNamingRules",
      "recycle"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.WebXml",
    "sensitiveFields": [
      "overridable",
      "publicId",
      "name",
      "displayName",
      "filterMappingNames",
      "servletMappingNames",
      "replaceWelcomeFiles",
      "alwaysAddWelcomeFiles",
      "welcomeFiles",
      "jarName"
    ],
    "securityMethods": [
      "addAbsoluteOrdering",
      "addAbsoluteOrderingOthers",
      "addAfterOrdering",
      "addAfterOrderingOthers",
      "addBeforeOrdering",
      "addBeforeOrderingOthers",
      "addContextParam",
      "addEjbLocalRef",
      "addEjbRef",
      "addEnvEntry",
      "addErrorPage",
      "addFilter",
      "addFilterMapping",
      "addJspPropertyGroup",
      "addListener",
      "addLocaleEncodingMapping",
      "addMessageDestination",
      "addMessageDestinationRef",
      "addMimeMapping",
      "addPostConstructMethods",
      "addPreDestroyMethods",
      "addResourceEnvRef",
      "addResourceRef",
      "addSecurityConstraint",
      "addSecurityRole",
      "addServiceRef",
      "addServlet",
      "addServletMapping",
      "addServletMappingDecoded",
      "addTaglib",
      "addWelcomeFile",
      "appendElement",
      "appendElement",
      "createAbsoluteOrdering",
      "decoupleOtherGroups",
      "getLoginConfig",
      "makeAfterOthersExplicit",
      "makeBeforeOthersExplicit",
      "mergeLifecycleCallback",
      "mergeMap",
      "orderFragments",
      "setAlwaysAddWelcomeFiles",
      "setDelegate",
      "setDenyUncoveredHttpMethods",
      "setDisplayName",
      "setDistributable",
      "setJarName",
      "setLoginConfig",
      "setMetadataComplete",
      "setName",
      "setOverridable",
      "setPublicId",
      "setReplaceWelcomeFiles",
      "setRequestCharacterEncoding",
      "setResponseCharacterEncoding",
      "setSessionConfig",
      "setURL",
      "setVersion",
      "setWebappJar"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.WebXmlParser",
    "sensitiveFields": [],
    "securityMethods": [
      "setClassLoader"
    ]
  },
  {
    "className": "org.apache.tomcat.util.descriptor.web.XmlEncodingBase",
    "sensitiveFields": [],
    "securityMethods": [
      "setCharset"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.AbstractObjectCreationFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "setDigester"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.ArrayStack",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.digester.CallMethodRule",
    "sensitiveFields": [
      "methodName",
      "paramCount"
    ],
    "securityMethods": [
      "begin",
      "body",
      "end",
      "finish",
      "processMethodCallResult",
      "setUseExactMatch"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.CallParamRule",
    "sensitiveFields": [
      "attributeName"
    ],
    "securityMethods": [
      "begin",
      "body",
      "end"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.Digester",
    "sensitiveFields": [
      "entityValidator",
      "factory",
      "namespaceAware",
      "namespaces",
      "publicId",
      "validating",
      "rulesValidation"
    ],
    "securityMethods": [
      "addCallMethod",
      "addCallMethod",
      "addCallParam",
      "addFactoryCreate",
      "addObjectCreate",
      "addObjectCreate",
      "addRule",
      "addRuleSet",
      "addSetNext",
      "addSetProperties",
      "characters",
      "clear",
      "configure",
      "endDocument",
      "endElement",
      "endPrefixMapping",
      "error",
      "fatalError",
      "getFactory",
      "getXMLReader",
      "ignorableWhitespace",
      "isFakeAttribute",
      "notationDecl",
      "parse",
      "processingInstruction",
      "push",
      "pushParams",
      "register",
      "replaceSystemProperties",
      "reset",
      "resolveEntity",
      "setClassLoader",
      "setDocumentLocator",
      "setEntityResolver",
      "setErrorHandler",
      "setFakeAttributes",
      "setFeature",
      "setLogger",
      "setNamespaceAware",
      "setPropertySource",
      "setPublicId",
      "setRules",
      "setRulesValidation",
      "setSAXLogger",
      "setUseContextClassLoader",
      "setValidating",
      "skippedEntity",
      "startDTD",
      "startDocument",
      "startElement",
      "startPrefixMapping",
      "unparsedEntityDecl",
      "warning"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.FactoryCreateRule",
    "sensitiveFields": [
      "creationFactory"
    ],
    "securityMethods": [
      "begin",
      "end",
      "finish"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.ObjectCreateRule",
    "sensitiveFields": [
      "attributeName",
      "className"
    ],
    "securityMethods": [
      "begin",
      "end"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.ObjectCreationFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "setDigester"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.Rule",
    "sensitiveFields": [
      "namespaceURI"
    ],
    "securityMethods": [
      "begin",
      "body",
      "end",
      "finish",
      "setDigester",
      "setNamespaceURI"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.RuleSet",
    "sensitiveFields": [],
    "securityMethods": [
      "addRuleInstances"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.Rules",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "clear",
      "match",
      "setDigester"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.RulesBase",
    "sensitiveFields": [],
    "securityMethods": [
      "add",
      "clear",
      "lookup",
      "match",
      "setDigester"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.SetNextRule",
    "sensitiveFields": [
      "methodName"
    ],
    "securityMethods": [
      "end",
      "setExactMatch"
    ]
  },
  {
    "className": "org.apache.tomcat.util.digester.SetPropertiesRule",
    "sensitiveFields": [],
    "securityMethods": [
      "begin"
    ]
  },
  {
    "className": "org.apache.tomcat.util.file.ConfigFileLoader",
    "sensitiveFields": [
      "CATALINA_BASE_FILE"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.file.Matcher",
    "sensitiveFields": [],
    "securityMethods": [
      "matchName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.CookieProcessor",
    "sensitiveFields": [],
    "securityMethods": [
      "parseCookieHeader"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.FastHttpDateFormat",
    "sensitiveFields": [],
    "securityMethods": [
      "updateFormatCache",
      "updateParseCache"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.LegacyCookieProcessor",
    "sensitiveFields": [
      "allowNameOnly"
    ],
    "securityMethods": [
      "escapeDoubleQuotes",
      "getTokenEndPosition",
      "maybeQuote",
      "parseCookieHeader",
      "processCookieHeader",
      "setAllowEqualsInValue",
      "setAllowHttpSepsInV0",
      "setAllowNameOnly",
      "setAlwaysAddExpires",
      "setForwardSlashIsSeparator",
      "unescapeDoubleQuotes"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.MimeHeaderField",
    "sensitiveFields": [
      "nameB"
    ],
    "securityMethods": [
      "recycle"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.MimeHeaders",
    "sensitiveFields": [],
    "securityMethods": [
      "addValue",
      "clear",
      "duplicate",
      "findHeader",
      "getHeader",
      "getUniqueValue",
      "getValue",
      "recycle",
      "removeHeader",
      "removeHeader",
      "setLimit",
      "setValue",
      "values"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.NamesEnumerator",
    "sensitiveFields": [],
    "securityMethods": [
      "findNext"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.Parameters",
    "sensitiveFields": [
      "maxParamCountLog",
      "didQueryParameters",
      "queryMB",
      "decodedQuery",
      "queryStringCharset",
      "tmpName",
      "origName"
    ],
    "securityMethods": [
      "addParameter",
      "getParameter",
      "getParameterValues",
      "handleQueryParameters",
      "processParameters",
      "processParameters",
      "processParameters",
      "recycle",
      "setCharset",
      "setLimit",
      "setParseFailedReason",
      "setQuery",
      "setQueryStringCharset",
      "setURLDecoder",
      "urlDecode"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.RequestUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "normalize",
      "normalize"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.ResponseUtil",
    "sensitiveFields": [
      "VARY_HEADER",
      "VARY_ALL"
    ],
    "securityMethods": [
      "addVaryFieldName",
      "addVaryFieldName",
      "addVaryFieldName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.Rfc6265CookieProcessor",
    "sensitiveFields": [
      "domainValid"
    ],
    "securityMethods": [
      "parseCookieHeader",
      "validateCookieValue",
      "validateDomain",
      "validatePath"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.ServerCookie",
    "sensitiveFields": [
      "serialVersionUID",
      "name",
      "path"
    ],
    "securityMethods": [
      "recycle",
      "setVersion"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.ServerCookies",
    "sensitiveFields": [],
    "securityMethods": [
      "getCookie",
      "recycle",
      "setLimit"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.ValuesEnumerator",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "findNext"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "needNewBuffer",
      "write",
      "write",
      "writeTo"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream",
    "sensitiveFields": [
      "memoryOutputStream",
      "outputFile",
      "directory"
    ],
    "securityMethods": [
      "close",
      "getFile",
      "thresholdReached"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileItem",
    "sensitiveFields": [],
    "securityMethods": [
      "delete",
      "setFieldName",
      "setFormField",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileItemFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "createItem"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileItemHeaders",
    "sensitiveFields": [],
    "securityMethods": [
      "getHeader",
      "getHeaders"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileItemHeadersSupport",
    "sensitiveFields": [],
    "securityMethods": [
      "getHeaders",
      "setHeaders"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileItemIterator",
    "sensitiveFields": [],
    "securityMethods": [
      "next"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileUpload",
    "sensitiveFields": [
      "fileItemFactory"
    ],
    "securityMethods": [
      "getFileItemFactory",
      "setFileItemFactory"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileUploadBase",
    "sensitiveFields": [
      "fileSizeMax"
    ],
    "securityMethods": [
      "getFileItemFactory",
      "getItemIterator",
      "getParsedHeaders",
      "newFileItemHeaders",
      "parseHeaderLine",
      "setFileItemFactory",
      "setFileSizeMax",
      "setHeaderEncoding",
      "setProgressListener",
      "setSizeMax"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileUploadException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.FileUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "cleanDirectory",
      "cleanDirectoryOnExit",
      "deleteDirectory",
      "deleteDirectoryOnExit",
      "forceDelete",
      "forceDeleteOnExit",
      "forceMkdir",
      "forceMkdirParent",
      "isSymlink"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.IOUtils",
    "sensitiveFields": [],
    "securityMethods": [
      "closeQuietly",
      "readFully",
      "readFully"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.InvalidFileNameException",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.MultipartStream",
    "sensitiveFields": [
      "BOUNDARY_PREFIX",
      "boundaryLength",
      "boundary",
      "boundaryTable"
    ],
    "securityMethods": [
      "computeBoundaryTable",
      "setBoundary",
      "setHeaderEncoding"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.ParameterParser",
    "sensitiveFields": [
      "lowerCaseNames"
    ],
    "securityMethods": [
      "setLowerCaseNames"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.ProgressListener",
    "sensitiveFields": [],
    "securityMethods": [
      "update"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "checkThreshold",
      "close",
      "flush",
      "thresholdReached",
      "write",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem",
    "sensitiveFields": [
      "UID",
      "fieldName",
      "fileName",
      "repository",
      "tempFile"
    ],
    "securityMethods": [
      "delete",
      "finalize",
      "getHeaders",
      "getStoreLocation",
      "getTempFile",
      "setDefaultCharset",
      "setFieldName",
      "setFormField",
      "setHeaders",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory",
    "sensitiveFields": [
      "repository"
    ],
    "securityMethods": [
      "createItem",
      "getRepository",
      "setDefaultCharset",
      "setRepository",
      "setSizeThreshold"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload",
    "sensitiveFields": [],
    "securityMethods": [
      "getItemIterator"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.util.Closeable",
    "sensitiveFields": [],
    "securityMethods": [
      "close"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl",
    "sensitiveFields": [
      "serialVersionUID",
      "headerNameToValueListMap"
    ],
    "securityMethods": [
      "addHeader",
      "getHeader",
      "getHeaders"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "checkLimit",
      "close",
      "raiseError"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.util.Streams",
    "sensitiveFields": [],
    "securityMethods": [
      "checkFileName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.util.mime.MimeUtility",
    "sensitiveFields": [
      "ENCODED_TOKEN_MARKER",
      "ENCODED_TOKEN_FINISHER"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.http.fileupload.util.mime.ParseException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.http.parser.Authorization",
    "sensitiveFields": [],
    "securityMethods": [
      "parseAuthorizationDigest"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.parser.Cookie",
    "sensitiveFields": [
      "invalidCookieVersionLog",
      "invalidCookieLog",
      "PATH_BYTES"
    ],
    "securityMethods": [
      "logInvalidHeader",
      "logInvalidVersion",
      "parseCookie",
      "parseCookieRfc2109",
      "parseCookieRfc6265",
      "skipInvalidCookie",
      "skipLWS",
      "skipUntilSemiColon",
      "skipUntilSemiColonOrComma"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.parser.HttpParser",
    "sensitiveFields": [
      "IS_TOKEN",
      "IS_ABSOLUTEPATH_RELAXED",
      "IS_QUERY_RELAXED"
    ],
    "securityMethods": [
      "relax"
    ]
  },
  {
    "className": "org.apache.tomcat.util.http.parser.Vary",
    "sensitiveFields": [],
    "securityMethods": [
      "parseVary"
    ]
  },
  {
    "className": "org.apache.tomcat.util.log.CaptureLog",
    "sensitiveFields": [],
    "securityMethods": [
      "reset"
    ]
  },
  {
    "className": "org.apache.tomcat.util.log.SystemLogHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "flush",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "print",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "println",
      "setError",
      "startCapture",
      "write",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.AttributeInfo",
    "sensitiveFields": [
      "serialVersionUID",
      "displayName"
    ],
    "securityMethods": [
      "getMethodName",
      "setDisplayName",
      "setGetMethod",
      "setIs",
      "setReadable",
      "setSetMethod",
      "setWriteable"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.BaseAttributeFilter",
    "sensitiveFields": [
      "serialVersionUID",
      "names"
    ],
    "securityMethods": [
      "addAttribute",
      "clear",
      "removeAttribute"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.BaseModelMBean",
    "sensitiveFields": [
      "oname"
    ],
    "securityMethods": [
      "addAttributeChangeNotificationListener",
      "addNotificationListener",
      "getAttribute",
      "getAttributes",
      "getJmxName",
      "invoke",
      "postDeregister",
      "postRegister",
      "preDeregister",
      "preRegister",
      "removeAttributeChangeNotificationListener",
      "removeNotificationListener",
      "sendAttributeChangeNotification",
      "sendAttributeChangeNotification",
      "sendNotification",
      "sendNotification",
      "setAttribute",
      "setManagedBean",
      "setManagedResource"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.BaseNotificationBroadcaster",
    "sensitiveFields": [],
    "securityMethods": [
      "addNotificationListener",
      "removeNotificationListener",
      "sendNotification"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.FeatureInfo",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": [
      "setDescription",
      "setName",
      "setType"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.ManagedBean",
    "sensitiveFields": [
      "serialVersionUID",
      "className",
      "name"
    ],
    "securityMethods": [
      "addAttribute",
      "addNotification",
      "addOperation",
      "createOperationKey",
      "getGetter",
      "getInvoke",
      "getSetter",
      "setClassName",
      "setDescription",
      "setDomain",
      "setGroup",
      "setName",
      "setType"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.NotificationInfo",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "addNotifType",
      "setDescription",
      "setName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.OperationInfo",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "addParameter",
      "setImpact",
      "setReturnType",
      "setRole"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.ParameterInfo",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.modeler.Registry",
    "sensitiveFields": [
      "registry",
      "searchedPaths",
      "idDomains",
      "ids"
    ],
    "securityMethods": [
      "addManagedBean",
      "findDescriptor",
      "findManagedBean",
      "getId",
      "getMethodInfo",
      "getRegistry",
      "getType",
      "invoke",
      "loadDescriptors",
      "postDeregister",
      "postRegister",
      "preDeregister",
      "preRegister",
      "registerComponent",
      "registerComponent",
      "stop",
      "unregisterComponent",
      "unregisterComponent"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.RegistryMBean",
    "sensitiveFields": [],
    "securityMethods": [
      "getId",
      "invoke",
      "registerComponent",
      "stop",
      "unregisterComponent"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "execute",
      "loadDescriptors",
      "setRegistry",
      "setSource"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource",
    "sensitiveFields": [
      "registry"
    ],
    "securityMethods": [
      "createManagedBean",
      "execute",
      "initMethods",
      "loadDescriptors",
      "setRegistry",
      "setSource",
      "setType",
      "unCapitalize"
    ]
  },
  {
    "className": "org.apache.tomcat.util.modeler.modules.ModelerSource",
    "sensitiveFields": [],
    "securityMethods": [
      "loadDescriptors"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.AbstractEndpoint",
    "sensitiveFields": [
      "oname",
      "defaultSSLHostConfigName",
      "useSendfile",
      "name"
    ],
    "securityMethods": [
      "addNegotiatedProtocol",
      "addSslHostConfig",
      "addSslHostConfig",
      "bind",
      "closeServerSocketGraceful",
      "closeSocket",
      "countUpOrAwaitConnection",
      "createExecutor",
      "createSSLContext",
      "destroy",
      "destroySocket",
      "doCloseServerSocket",
      "getProperty",
      "getSSLHostConfig",
      "init",
      "pause",
      "registerJmx",
      "releaseConnectionLatch",
      "releaseSSLContext",
      "reloadSslHostConfig",
      "reloadSslHostConfigs",
      "removeSslHostConfig",
      "resume",
      "setAcceptCount",
      "setAcceptorThreadCount",
      "setAcceptorThreadPriority",
      "setAddress",
      "setAttribute",
      "setBindOnInit",
      "setConnectionLinger",
      "setConnectionTimeout",
      "setDaemon",
      "setDefaultSSLHostConfigName",
      "setDomain",
      "setExecutor",
      "setExecutorTerminationTimeoutMillis",
      "setHandler",
      "setKeepAliveTimeout",
      "setMaxConnections",
      "setMaxKeepAliveRequests",
      "setMaxThreads",
      "setMinSpareThreads",
      "setName",
      "setPort",
      "setProperty",
      "setSSLEnabled",
      "setTcpNoDelay",
      "setThreadPriority",
      "setUseSendfile",
      "shutdownExecutor",
      "start",
      "startAcceptorThreads",
      "startInternal",
      "stop",
      "stopInternal",
      "unbind",
      "unlockAccept",
      "unregisterJmx"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.AbstractJsseEndpoint",
    "sensitiveFields": [
      "sslImplementationName"
    ],
    "securityMethods": [
      "createSSLContext",
      "createSSLEngine",
      "destroySsl",
      "initialiseSsl",
      "releaseSSLContext",
      "setSniParseLimit",
      "setSslImplementationName",
      "unbind"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.Acceptor",
    "sensitiveFields": [
      "threadName"
    ],
    "securityMethods": [
      "run",
      "setThreadName"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.ApplicationBufferHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "expand",
      "setByteBuffer"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.AprEndpoint",
    "sensitiveFields": [
      "sendfileSize",
      "useSendFileSet",
      "sendfile"
    ],
    "securityMethods": [
      "bind",
      "closeSocket",
      "closeSocket",
      "createSSLContext",
      "destroySocket",
      "destroySocket",
      "doCloseServerSocket",
      "getSendfile",
      "getSslContext",
      "releaseSSLContext",
      "setDeferAccept",
      "setIpv6v6only",
      "setMaxConnections",
      "setPollTime",
      "setSendfileSize",
      "setUseSendfile",
      "setUseSendfileInternal",
      "startInternal",
      "stopInternal",
      "unbind"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.AprSSLSupport",
    "sensitiveFields": [
      "clientCertProvider"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.net.Nio2Channel",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "close",
      "free",
      "read",
      "read",
      "read",
      "reset",
      "setAppReadBufHandler",
      "write",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.Nio2Endpoint",
    "sensitiveFields": [],
    "securityMethods": [
      "bind",
      "closeSocket",
      "closeSocket",
      "doCloseServerSocket",
      "endInline",
      "shutdownExecutor",
      "startInline",
      "startInternal",
      "stopInternal",
      "unbind"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.NioBlockingSelector",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "open"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.NioChannel",
    "sensitiveFields": [],
    "securityMethods": [
      "checkInterruptStatus",
      "close",
      "close",
      "free",
      "reset",
      "setAppReadBufHandler",
      "setIOChannel",
      "setPoller",
      "setSocketWrapper"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.NioEndpoint",
    "sensitiveFields": [],
    "securityMethods": [
      "bind",
      "close",
      "closeSocket",
      "doCloseServerSocket",
      "initServerSocket",
      "setPollerThreadCount",
      "setPollerThreadPriority",
      "setProperty",
      "setSelectorPool",
      "setSelectorTimeout",
      "setStopLatch",
      "setUseInheritedChannel",
      "startInternal",
      "stopInternal",
      "unbind"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.NioSelectorPool",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "open",
      "put",
      "setEnabled",
      "setMaxSelectors",
      "setMaxSpareSelectors",
      "setSharedSelectorTimeout"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SSLContext",
    "sensitiveFields": [],
    "securityMethods": [
      "destroy",
      "getServerSocketFactory",
      "init"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SSLHostConfig",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_SSL_HOST_NAME",
      "hostName",
      "oname",
      "certificateRevocationListFile",
      "jsseCipherNames",
      "trustManagerClassName",
      "truststoreFile",
      "truststorePassword",
      "truststoreProvider",
      "certificateRevocationListPath",
      "caCertificateFile",
      "caCertificatePath"
    ],
    "securityMethods": [
      "addCertificate",
      "adjustRelativePath",
      "getObjectName",
      "registerDefaultCertificate",
      "setCaCertificateFile",
      "setCaCertificatePath",
      "setCertificateChainFile",
      "setCertificateFile",
      "setCertificateKeyAlias",
      "setCertificateKeyFile",
      "setCertificateKeyPassword",
      "setCertificateKeystoreFile",
      "setCertificateKeystorePassword",
      "setCertificateKeystoreProvider",
      "setCertificateKeystoreType",
      "setCertificateRevocationListFile",
      "setCertificateRevocationListPath",
      "setCertificateVerification",
      "setCertificateVerificationDepth",
      "setCiphers",
      "setConfigType",
      "setDisableCompression",
      "setDisableSessionTickets",
      "setEnabledCiphers",
      "setEnabledProtocols",
      "setHonorCipherOrder",
      "setHostName",
      "setInsecureRenegotiation",
      "setKeyManagerAlgorithm",
      "setObjectName",
      "setOpenSslConf",
      "setOpenSslConfContext",
      "setOpenSslContext",
      "setProperty",
      "setProtocols",
      "setRevocationEnabled",
      "setSessionCacheSize",
      "setSessionTimeout",
      "setSslProtocol",
      "setTrustManagerClassName",
      "setTrustStore",
      "setTruststoreAlgorithm",
      "setTruststoreFile",
      "setTruststorePassword",
      "setTruststoreProvider",
      "setTruststoreType"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SSLHostConfigCertificate",
    "sensitiveFields": [
      "serialVersionUID",
      "DEFAULT_KEYSTORE_PROVIDER",
      "oname",
      "certificateKeyPassword",
      "certificateKeystorePassword",
      "certificateKeystoreFile",
      "certificateKeystoreProvider",
      "certificateChainFile",
      "certificateFile",
      "certificateKeyFile"
    ],
    "securityMethods": [
      "getObjectName",
      "setCertificateChainFile",
      "setCertificateFile",
      "setCertificateKeyAlias",
      "setCertificateKeyFile",
      "setCertificateKeyPassword",
      "setCertificateKeystore",
      "setCertificateKeystoreFile",
      "setCertificateKeystorePassword",
      "setCertificateKeystoreProvider",
      "setCertificateKeystoreType",
      "setObjectName",
      "setSslContext",
      "setStoreType"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SSLImplementation",
    "sensitiveFields": [],
    "securityMethods": [
      "getInstance"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SSLSessionManager",
    "sensitiveFields": [],
    "securityMethods": [
      "invalidateSession"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SSLSupport",
    "sensitiveFields": [
      "SESSION_ID_KEY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.net.SSLUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "configureSessionContext"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SSLUtilBase",
    "sensitiveFields": [],
    "securityMethods": [
      "getEnabled",
      "getStore"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SecureNio2Channel",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "close",
      "closeSilently",
      "free",
      "read",
      "read",
      "rehandshake",
      "reset",
      "write",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SecureNioChannel",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "close",
      "closeSilently",
      "free",
      "rehandshake",
      "reset"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SendfileDataBase",
    "sensitiveFields": [
      "fileName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.net.SocketBufferHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "configureReadBufferForRead",
      "configureReadBufferForWrite",
      "configureWriteBufferForRead",
      "configureWriteBufferForWrite",
      "expand",
      "free",
      "reset",
      "setReadBufferConfiguredForWrite",
      "setWriteBufferConfiguredForWrite"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SocketProcessorBase",
    "sensitiveFields": [],
    "securityMethods": [
      "doRun",
      "reset",
      "run"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SocketProperties",
    "sensitiveFields": [
      "performanceBandwidth"
    ],
    "securityMethods": [
      "setAppReadBufSize",
      "setAppWriteBufSize",
      "setBufferPool",
      "setBufferPoolSize",
      "setDirectBuffer",
      "setDirectBufferPool",
      "setDirectSslBuffer",
      "setEventCache",
      "setOoBInline",
      "setPerformanceBandwidth",
      "setPerformanceConnectionTime",
      "setPerformanceLatency",
      "setProcessorCache",
      "setProperties",
      "setProperties",
      "setProperties",
      "setProperties",
      "setRxBufSize",
      "setSoKeepAlive",
      "setSoLingerOn",
      "setSoLingerTime",
      "setSoReuseAddress",
      "setSoTimeout",
      "setTcpNoDelay",
      "setTimeoutInterval",
      "setTxBufSize",
      "setUnlockTimeout"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.SocketWrapperBase",
    "sensitiveFields": [
      "localName"
    ],
    "securityMethods": [
      "addToBuffers",
      "addToBuffers",
      "checkError",
      "close",
      "createSendfileData",
      "doClientAuth",
      "doWrite",
      "doWrite",
      "execute",
      "flushBlocking",
      "getSslSupport",
      "populateLocalAddr",
      "populateLocalName",
      "populateLocalPort",
      "populateRemoteAddr",
      "populateRemoteHost",
      "populateRemotePort",
      "processSendfile",
      "processSocket",
      "registerReadInterest",
      "registerWriteInterest",
      "setAppReadBufHandler",
      "setBlockingStatus",
      "setError",
      "setKeepAliveLeft",
      "setNegotiatedProtocol",
      "setReadTimeout",
      "setSecure",
      "setUpgraded",
      "setWriteTimeout",
      "unRead",
      "write",
      "write",
      "writeBlocking",
      "writeBlocking",
      "writeByteBufferBlocking",
      "writeNonBlocking",
      "writeNonBlocking"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.TLSClientHelloExtractor",
    "sensitiveFields": [
      "TLS_EXTENSION_SERVER_NAME"
    ],
    "securityMethods": [
      "readAlpnExtension",
      "skipBytes"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.jsse.JSSESSLContext",
    "sensitiveFields": [],
    "securityMethods": [
      "destroy",
      "getServerSocketFactory",
      "init"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.jsse.JSSESupport",
    "sensitiveFields": [],
    "securityMethods": [
      "init",
      "invalidateSession",
      "setSession"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.jsse.JSSEUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "checkTrustStoreEntries",
      "configureSessionContext",
      "getParameters"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.jsse.PEMFile",
    "sensitiveFields": [
      "filename"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLConf",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "addCmd"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLConfCmd",
    "sensitiveFields": [
      "serialVersionUID",
      "name"
    ],
    "securityMethods": [
      "setName",
      "setValue"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLContext",
    "sensitiveFields": [
      "jsseCipherNames",
      "X509_CERT_FACTORY"
    ],
    "securityMethods": [
      "destroy",
      "finalize",
      "getServerSocketFactory",
      "init",
      "setEnabledProtocol"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLEngine",
    "sensitiveFields": [
      "MAX_ENCRYPTED_PACKET_LENGTH",
      "MAX_ENCRYPTION_OVERHEAD_LENGTH",
      "INVALID_CIPHER",
      "clientAuth"
    ],
    "securityMethods": [
      "beginHandshake",
      "beginHandshakeImplicitly",
      "checkLastError",
      "clearLastError",
      "closeInbound",
      "closeOutbound",
      "finalize",
      "getNeedClientAuth",
      "getWantClientAuth",
      "handshake",
      "renegotiate",
      "setClientAuth",
      "setEnableSessionCreation",
      "setEnabledCipherSuites",
      "setEnabledProtocols",
      "setNeedClientAuth",
      "setUseClientMode",
      "setWantClientAuth",
      "shutdown"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLKeyManager",
    "sensitiveFields": [],
    "securityMethods": [
      "getCertificateChain",
      "getPrivateKey",
      "setCertificateChain",
      "setPrivateKey"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLSessionContext",
    "sensitiveFields": [
      "contextID"
    ],
    "securityMethods": [
      "setSessionCacheEnabled",
      "setSessionCacheSize",
      "setSessionIdContext",
      "setSessionTimeout",
      "setTicketKeys"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "configureSessionContext"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.OpenSSLX509Certificate",
    "sensitiveFields": [],
    "securityMethods": [
      "checkValidity",
      "checkValidity",
      "getExtensionValue",
      "verify",
      "verify"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.ciphers.Cipher",
    "sensitiveFields": [
      "TLS_RSA_WITH_IDEA_CBC_SHA",
      "SSL2_IDEA_128_CBC_WITH_MD5",
      "id",
      "openSSLAltNames",
      "jsseNames",
      "idMap"
    ],
    "securityMethods": [
      "getAu",
      "getEnc",
      "getLevel",
      "valueOf"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.ciphers.Encryption",
    "sensitiveFields": [
      "IDEA"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.ciphers.OpenSSLCipherConfigurationParser",
    "sensitiveFields": [
      "IDEA"
    ],
    "securityMethods": [
      "add",
      "addListAlias",
      "filterByAuthentication",
      "init",
      "jsseToOpenSSL",
      "main",
      "moveToEnd",
      "moveToEnd",
      "moveToStart",
      "openSSLToJsse",
      "remove",
      "usage"
    ]
  },
  {
    "className": "org.apache.tomcat.util.net.openssl.ciphers.Protocol",
    "sensitiveFields": [
      "openSSLName"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.res.StringManager",
    "sensitiveFields": [],
    "securityMethods": [
      "getManager",
      "getManager",
      "getManager"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.AbstractInputStreamJar",
    "sensitiveFields": [
      "jarFileURL",
      "entry"
    ],
    "securityMethods": [
      "closeStream",
      "getInputStream",
      "getLastModified",
      "getURL",
      "gotoEntry",
      "nextEntry",
      "populateMrMap",
      "reset"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.JarFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getJarEntryURL"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.JarFileUrlJar",
    "sensitiveFields": [
      "jarFile",
      "jarFileURL",
      "entryNamesSeen",
      "entry"
    ],
    "securityMethods": [
      "close",
      "getInputStream",
      "getLastModified",
      "getURL",
      "nextEntry",
      "reset"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.JarFileUrlNestedJar",
    "sensitiveFields": [
      "warFile",
      "jarEntry"
    ],
    "securityMethods": [
      "close"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.NonClosingJarInputStream",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "reallyClose"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.StandardJarScanFilter",
    "sensitiveFields": [],
    "securityMethods": [
      "check",
      "populateSetFromAttribute",
      "setDefaultPluggabilityScan",
      "setDefaultTldScan",
      "setPluggabilityScan",
      "setPluggabilitySkip",
      "setTldScan",
      "setTldSkip"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.StandardJarScanner",
    "sensitiveFields": [
      "scanClassPath",
      "scanAllFiles",
      "scanBootstrapClassPath"
    ],
    "securityMethods": [
      "addClassPath",
      "doScanClassPath",
      "process",
      "processManifest",
      "processURLs",
      "scan",
      "setJarScanFilter",
      "setScanAllDirectories",
      "setScanAllFiles",
      "setScanBootstrapClassPath",
      "setScanClassPath",
      "setScanManifest"
    ]
  },
  {
    "className": "org.apache.tomcat.util.scan.UrlJar",
    "sensitiveFields": [],
    "securityMethods": [
      "close"
    ]
  },
  {
    "className": "org.apache.tomcat.util.security.ConcurrentMessageDigest",
    "sensitiveFields": [],
    "securityMethods": [
      "init"
    ]
  },
  {
    "className": "org.apache.tomcat.util.security.MD5Encoder",
    "sensitiveFields": [],
    "securityMethods": [
      "encode"
    ]
  },
  {
    "className": "org.apache.tomcat.util.security.PrivilegedSetTccl",
    "sensitiveFields": [],
    "securityMethods": [
      "run"
    ]
  },
  {
    "className": "org.apache.tomcat.util.threads.InlineExecutorService",
    "sensitiveFields": [],
    "securityMethods": [
      "execute",
      "shutdown"
    ]
  },
  {
    "className": "org.apache.tomcat.util.threads.LimitLatch",
    "sensitiveFields": [],
    "securityMethods": [
      "countUpOrAwait",
      "reset",
      "setLimit"
    ]
  },
  {
    "className": "org.apache.tomcat.util.threads.StopPooledThreadException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.threads.TaskQueue",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "setForcedRemainingCapacity",
      "setParent"
    ]
  },
  {
    "className": "org.apache.tomcat.util.threads.TaskThreadFactory",
    "sensitiveFields": [
      "namePrefix"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.util.threads.ThreadPoolExecutor",
    "sensitiveFields": [],
    "securityMethods": [
      "afterExecute",
      "contextStopping",
      "execute",
      "execute",
      "setThreadRenewalDelay",
      "stopCurrentThreadIfNeeded"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.AsyncChannelGroupUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "unregister"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.AsyncChannelWrapper",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "read",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.AsyncChannelWrapperNonSecure",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "read",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.AsyncChannelWrapperSecure",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "read",
      "write"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.AuthenticationException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.Authenticator",
    "sensitiveFields": [],
    "securityMethods": [
      "getAuthorization",
      "parseWWWAuthenticateHeader"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.AuthenticatorFactory",
    "sensitiveFields": [],
    "securityMethods": [
      "getAuthenticator",
      "loadAuthenticators"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.BackgroundProcess",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "setProcessPeriod"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.BackgroundProcessManager",
    "sensitiveFields": [],
    "securityMethods": [
      "process",
      "register",
      "shutdown",
      "unregister"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.BasicAuthenticator",
    "sensitiveFields": [
      "schemeName"
    ],
    "securityMethods": [
      "getAuthorization"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.Constants",
    "sensitiveFields": [
      "OPCODE_BINARY",
      "SSL_TRUSTSTORE_PWD_PROPERTY",
      "SSL_TRUSTSTORE_PWD_DEFAULT",
      "HOST_HEADER_NAME",
      "UPGRADE_HEADER_NAME",
      "ORIGIN_HEADER_NAME",
      "CONNECTION_HEADER_NAME",
      "LOCATION_HEADER_NAME",
      "AUTHORIZATION_HEADER_NAME",
      "WWW_AUTHENTICATE_HEADER_NAME",
      "WS_VERSION_HEADER_NAME",
      "WS_KEY_HEADER_NAME",
      "WS_PROTOCOL_HEADER_NAME",
      "WS_EXTENSIONS_HEADER_NAME",
      "TEMPORARY_REDIRECT",
      "WS_AUTHENTICATION_USER_NAME",
      "WS_AUTHENTICATION_PASSWORD"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.DigestAuthenticator",
    "sensitiveFields": [
      "schemeName"
    ],
    "securityMethods": [
      "calculateRequestDigest",
      "getAuthorization"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.FutureToSendHandler",
    "sensitiveFields": [],
    "securityMethods": [
      "get",
      "get",
      "onResult"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.MessageHandlerResultType",
    "sensitiveFields": [
      "BINARY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.MessagePart",
    "sensitiveFields": [
      "blockingWriteTimeoutExpiry"
    ],
    "securityMethods": [
      "setEndHandler"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.PerMessageDeflate",
    "sensitiveFields": [
      "NAME"
    ],
    "securityMethods": [
      "close",
      "setNext",
      "startNewMessage",
      "validateRsv",
      "validateRsvBits"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.ReadBufferOverflowException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.Transformation",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "setNext",
      "validateRsv",
      "validateRsvBits"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.TransformationFactory",
    "sensitiveFields": [
      "factory"
    ],
    "securityMethods": [
      "create",
      "getInstance"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.Util",
    "sensitiveFields": [],
    "securityMethods": [
      "matchDecoders",
      "parseExtensionHeader"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsExtension",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": [
      "addParameter"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsExtensionParameter",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.WsFrameBase",
    "sensitiveFields": [
      "controlBufferBinary",
      "messageBufferBinary",
      "binaryMsgHandler"
    ],
    "securityMethods": [
      "changeReadState",
      "checkRoomHeaders",
      "checkRoomPayload",
      "handleThrowableOnSend",
      "makeRoom",
      "newFrame",
      "newMessage",
      "processInputBuffer",
      "resume",
      "resumeProcessing",
      "sendMessageBinary",
      "sendMessageText",
      "suspend"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsFrameClient",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "processSocketRead",
      "resumeProcessing",
      "resumeProcessing",
      "startInputProcessing"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsIOException",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.WsRemoteEndpointAsync",
    "sensitiveFields": [],
    "securityMethods": [
      "sendBinary",
      "sendObject",
      "sendText",
      "setSendTimeout"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsRemoteEndpointBase",
    "sensitiveFields": [],
    "securityMethods": [
      "flushBatch",
      "sendPing",
      "sendPong",
      "setBatchingAllowed"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsRemoteEndpointBasic",
    "sensitiveFields": [],
    "securityMethods": [
      "sendBinary",
      "sendBinary",
      "sendObject",
      "sendText",
      "sendText"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsRemoteEndpointImplBase",
    "sensitiveFields": [],
    "securityMethods": [
      "close",
      "doClose",
      "doWrite",
      "endMessage",
      "flushBatch",
      "sendBytes",
      "sendBytesByCompletion",
      "sendMessageBlock",
      "sendMessageBlock",
      "sendMessageBlock",
      "sendObject",
      "sendObjectByCompletion",
      "sendPartialBytes",
      "sendPartialString",
      "sendPing",
      "sendPong",
      "sendString",
      "sendStringByCompletion",
      "setBatchingAllowed",
      "setEncoders",
      "setSendTimeout",
      "setSession",
      "setTransformation",
      "startMessage",
      "writeHeader",
      "writeMessagePart"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsRemoteEndpointImplClient",
    "sensitiveFields": [],
    "securityMethods": [
      "doClose",
      "doWrite"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsSession",
    "sensitiveFields": [
      "ids",
      "queryString",
      "pathParameters",
      "httpSessionId",
      "id",
      "binaryMessageHandler",
      "maxBinaryMessageBufferSize",
      "maxIdleTimeout"
    ],
    "securityMethods": [
      "addMessageHandler",
      "addMessageHandler",
      "addMessageHandler",
      "appendCloseReasonWithTruncation",
      "checkExpiration",
      "checkState",
      "close",
      "close",
      "doAddMessageHandler",
      "doClose",
      "fireEndpointOnClose",
      "fireEndpointOnError",
      "onClose",
      "registerFuture",
      "removeMessageHandler",
      "resume",
      "sendCloseMessage",
      "setMaxBinaryMessageBufferSize",
      "setMaxIdleTimeout",
      "setMaxTextMessageBufferSize",
      "setWsFrame",
      "suspend",
      "unregisterFuture",
      "updateLastActive"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.WsWebSocketContainer",
    "sensitiveFields": [
      "maxBinaryMessageBufferSize",
      "defaultMaxSessionIdleTimeout"
    ],
    "securityMethods": [
      "backgroundProcess",
      "connectToServer",
      "connectToServer",
      "connectToServer",
      "connectToServer",
      "connectToServerRecursive",
      "destroy",
      "parseHeaders",
      "registerSession",
      "setAsyncSendTimeout",
      "setDefaultMaxBinaryMessageBufferSize",
      "setDefaultMaxSessionIdleTimeout",
      "setDefaultMaxTextMessageBufferSize",
      "setInstanceManager",
      "setProcessPeriod",
      "unregisterSession",
      "writeRequest"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.Constants",
    "sensitiveFields": [
      "POJO_PATH_PARAM_KEY"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoEndpointBase",
    "sensitiveFields": [
      "pathParameters"
    ],
    "securityMethods": [
      "doOnOpen",
      "handleOnOpenOrCloseError",
      "onClose",
      "onError",
      "setMethodMapping",
      "setPathParameters",
      "setPojo"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoEndpointClient",
    "sensitiveFields": [],
    "securityMethods": [
      "onOpen"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoEndpointServer",
    "sensitiveFields": [],
    "securityMethods": [
      "onOpen"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoMessageHandlerBase",
    "sensitiveFields": [
      "maxMessageSize"
    ],
    "securityMethods": [
      "handlePojoMethodException",
      "processResult"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoMessageHandlerPartialBase",
    "sensitiveFields": [],
    "securityMethods": [
      "onMessage"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholeBase",
    "sensitiveFields": [],
    "securityMethods": [
      "onClose",
      "onMessage"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholeBinary",
    "sensitiveFields": [],
    "securityMethods": [
      "onClose"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholePong",
    "sensitiveFields": [],
    "securityMethods": [
      "onClose"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholeText",
    "sensitiveFields": [],
    "securityMethods": [
      "onClose"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoMethodMapping",
    "sensitiveFields": [
      "wsPath"
    ],
    "securityMethods": [
      "buildArgs",
      "checkPublic",
      "getMessageHandlers",
      "getOnCloseArgs",
      "getOnErrorArgs",
      "getOnOpenArgs",
      "getPathParams"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.pojo.PojoPathParam",
    "sensitiveFields": [
      "name"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.server.Constants",
    "sensitiveFields": [
      "BINARY_BUFFER_SIZE_SERVLET_CONTEXT_INIT_PARAM"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.server.DefaultServerEndpointConfigurator",
    "sensitiveFields": [],
    "securityMethods": [
      "modifyHandshake"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.UpgradeUtil",
    "sensitiveFields": [],
    "securityMethods": [
      "append",
      "doUpgrade",
      "getTokensFromHeader",
      "headerContainsToken"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.UriTemplate",
    "sensitiveFields": [],
    "securityMethods": [
      "match"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsContextListener",
    "sensitiveFields": [],
    "securityMethods": [
      "contextDestroyed",
      "contextInitialized"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsFilter",
    "sensitiveFields": [
      "serialVersionUID"
    ],
    "securityMethods": [
      "doFilter",
      "init"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsFrameServer",
    "sensitiveFields": [],
    "securityMethods": [
      "onDataAvailable",
      "resumeProcessing",
      "sendMessageBinary",
      "sendMessageText"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsHandshakeRequest",
    "sensitiveFields": [
      "queryString"
    ],
    "securityMethods": [
      "finished"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler",
    "sensitiveFields": [
      "pathParameters"
    ],
    "securityMethods": [
      "close",
      "destroy",
      "init",
      "onError",
      "pause",
      "preInit",
      "setSocketWrapper",
      "setSslSupport"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsMappingResult",
    "sensitiveFields": [
      "pathParams"
    ],
    "securityMethods": []
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer",
    "sensitiveFields": [
      "timeoutExpiry"
    ],
    "securityMethods": [
      "clearHandler",
      "doClose",
      "doWrite",
      "onTimeout",
      "onWritePossible",
      "setTransformation"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsSci",
    "sensitiveFields": [],
    "securityMethods": [
      "onStartup"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsServerContainer",
    "sensitiveFields": [
      "AUTHENTICATED_HTTP_SESSION_CLOSED",
      "authenticatedSessions"
    ],
    "securityMethods": [
      "addEndpoint",
      "addEndpoint",
      "closeAuthenticatedSession",
      "doUpgrade",
      "findMapping",
      "registerAuthenticatedSession",
      "registerSession",
      "setEnforceNoAddAfterHandshake",
      "unregisterAuthenticatedSession",
      "unregisterSession",
      "validateEncoders"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsSessionListener",
    "sensitiveFields": [],
    "securityMethods": [
      "sessionDestroyed"
    ]
  },
  {
    "className": "org.apache.tomcat.websocket.server.WsWriteTimeout",
    "sensitiveFields": [],
    "securityMethods": [
      "backgroundProcess",
      "register",
      "setProcessPeriod",
      "unregister"
    ]
  }
]